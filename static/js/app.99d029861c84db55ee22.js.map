{"version":3,"sources":["webpack:///./src/App.vue?517d","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/utils/layout.js","webpack:///./src/utils/drawlines.js","webpack:///./src/utils/utilities.js","webpack:///./src/utils/flextree.js","webpack:///./src/utils/click.js","webpack:///./src/utils/clickCond.js","webpack:///./src/utils/drawBox.js","webpack:///src/components/Moviz.vue","webpack:///./src/components/Moviz.vue?fe5e","webpack:///./src/components/Moviz.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./node_modules/d3-flextree/package.json"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","getBoxLayout","data","graph","dagre","Graph","compound","setGraph","setDefaultEdgeLabel","i","bf","length","node","nodeId","label","type","function_type","value","body","setNode","auxLabel","width","height","pif","setParent","box","pof","opo","opi","wff","edge","srcNodeId","src","tgtNodeId","tgt","setEdge","wfopi","wfopo","wopio","bc","condition","body_if","body_else","pic","poc","wfc","wcf","wcc","wcopi","wcopo","bl","pre","post","pil","pol","wfl","wcl","wlopi","wll","wlf","wlc","wlopo","nodeID","auxID","predecessors","successors","nodes","filter","startsWith","ranksep","rankdir","console","log","layout","edges","forEach","x","y","push","source","v","target","w","_loop","bfNodeId","pofNode","find","pifNode","fullBox","_loop2","bcNodeId","pocNode","picNode","_loop3","blNodeId","polNode","pilNode","meta","b","identifier","metadata","UnionFind","elements","_this","classCallCheck_default","parent","e","parentX","parentY","drawLines","sourceid","targetid","locationTransform","body_num_source","body_num_target","color","sourceX","Number","d3","select","attr","sourceY","targetX1","targetX2","targetY1","targetY2","dx1","dy1","dx2","dy2","controlPoint11","controlPoint12","controlPoint21","controlPoint22","g","append","String","data1","data2","lineGenerator","d","curve","pathString1","pathElement1","document","createElementNS","setAttribute","pathString2","pathElement2","totalLength1","getTotalLength","totalLength2","points1","point","getPointAtLength","points2","xScale1","domain","range","bisect1","left","xScale2","bisect2","area1","y0","xValue","indexOfNode","invert","pointBefore","pointAfter","slope","Math","abs","linewidth","pow","sqrt","y1","area2","datum","selectAll","each","currentNode","currentNodeBody","undefined","split","sourceXforSL","sourceYforSL","targetXforSL","targetYforSL","updateLines","lineID","transition","duration","drawLinesDashArrow","treeLayout","sourceID","targetID","sourceFrame","dx","dy","targetX","targetY","style","midX","midY","text","updateLinesDashArrow","arraysAreEqual","array1","array2","loopOverHierarchy","callback","children","c","_children","getChildren","hierarchies","childrens","element","zoomin","path","filterChild","item","hasOwnProperty","sort","a","aNums","oName","map","bNums","defaults","freeze_default","nodeSize","size","spacing","flextree","options","opts","assign_default","accessor","opt","tree","FlexNode","wtree","wrap","getFlexNode","_FlexNode","_class","_this2","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","relX","prelim","shift","change","lExt","lExtRelX","lThr","rExt","rExtRelX","rThr","inherits_default","createClass_default","key","oNode","layoutChildren","resolveX","get","set","update","_hierarchy$prototype$","constructor","descendants","ySize","xSize","ancs","ancestors","hasChildren","noChildren","numChildren","reduce","acc","kid","maxExtents","extents","nodeExtents","top","bottom","right","e0","e1","min","max","hierarchy","prototype","FlexClass","treeData","_wrap","depth","kidsData","kd","hl","arg","arguments","kids","dump","_dump","i0","i1","i2","kdumps","join","_acc","slicedToArray_default","lastLows","lowY","separate","updateLows","shiftChange","positionRoot","prevSum","sum","k","child","_acc2","lastShiftSum","lastChangeSum","shiftSum","changeSum","lows","lSib","curSubtree","rContour","rSumMods","lContour","lSumMods","isFirst","next","dist","moveSubtree","distributeExtra","index","rightBottom","leftBottom","nextRContour","nextLContour","setLThr","setRThr","subtree","distance","curSubtreeI","leftSibI","n","delta","firstChild","lastChild","diff","k0","kf","handleClick","fnS","body_num","clicked","direction","openFlag","GID","replace","deleteParts","deleteFlag","node1","node2","node1Parts","node2Parts","end","then","remove","firstNParts","slice","stringify_default","GIDParts","newLabel","drawBox","routes","currentID","temp","Array","isArray","_size","reverse","flexLayout","keys_default","differenceX","differenceY","padding","sourceGID","targetGID","sourceTransString","targetTransString","newTransArray","transformArray","locationTransformForThis","line_label","handleClickCond","cond","layoutElse","layoutCond","layoutIf","newLabelCond","newLabelIf","newLabelElse","a01","a02","handleClickLoop","newLabelPre","newLabelBody","newLabelPost","opoNodeFlag","opiNodeFlag","minValue","apply","toConsumableArray_default","values_default","obj","maxValue","_nodeId$split","_nodeId$split2","isOpoNode","_nodeId$split3","_nodeId$split4","minXofAllNodes","Infinity","minYofAllNodes","_key$split","_key$split2","bbox","shapes","minX","minY","maxX","maxY","isPofNode","isPifNode","isOpiNode","isPocNode","isPicNode","isPolNode","isPilNode","computeBoundingRectangle","realOuterBox","getOuterBox","_nodeId2$split","_nodeId2$split2","isBcNode","isBlNode","drawBFs_full","drawLiteral_full","drawLPrimitive_full","drawBFs_nfull","drawLiteral_nfull","drawLPrimitive_nfull","drawBCs_full","drawBCs_nfull","drawBLs_full","drawBLs_nfull","drawPorts","sourceNode","targetNode","sourceType","targetType","drawOuterBoxFull","drawOuterBoxBottom","drawOuterBoxTop","drawOuterBoxEmpty","getBBox","node_body","outerRight","outerBottom","innerRight","innerBottom","selection","on","node_body_cond","lower","Moviz","skemaVersion","url","blockStyle","backgroundColor","selectedOption","methods","fetchData","axios","response","svg","zoom","transform","jsonData","schema_version","graphData","modules","fn0","fn","fn_array","catch","error","downloadSVG","svgElement","getElementById","svgData","XMLSerializer","serializeToString","svgBlob","Blob","svgUrl","URL","createObjectURL","downloadLink","createElement","href","download","appendChild","click","removeChild","submitUrl","excuteFunction","components_Moviz","_vm","staticClass","_v","directives","rawName","expression","placeholder","$event","$$selectedVal","o","selected","_value","multiple","_l","option","domProps","_s","_m","input","composing","overflow","src_components_Moviz","Moviz_normalizeComponent","Vue","use","Router","router","component","mode","config","productionTip","el","components","App","template","module","exports","version","main","jsnext:main","author","description","keywords","homepage","license","repository","scripts","clean","build:demo","build:dev","build:prod","build:test","build","lint","test:main","test:browser","test","prepare","dependencies","d3-hierarchy","devDependencies","babel-plugin-external-helpers","babel-preset-es2015-rollup","d3-selection-multi","eslint","jsdom","npm-run-all","rollup","rollup-plugin-babel","rollup-plugin-commonjs","rollup-plugin-copy","rollup-plugin-json","rollup-plugin-node-resolve","rollup-plugin-uglify","uglify-es"],"mappings":"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","file":"static/js/app.99d029861c84db55ee22.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6aef88c0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6aef88c0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6aef88c0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n};\n</script>\n\n<style>\n\n.container {\n  align-items: center;\n}\n\n.button-spacing {\n  width: 2vh; /* 定义间距的宽度 */\n  display: inline-block;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/* eslint-disable */\nimport * as dagre from 'dagre';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport function getBoxLayout(data) {\n  let graph = new dagre.graphlib.Graph({ compound: true });\n  graph.setGraph({});\n  // eslint-disable-next-line\n  graph.setDefaultEdgeLabel(() => { return {}; });\n  // get bf for all\n  if ('bf' in data) {\n    for (let i = 0; i < data.bf.length; i += 1) {\n      // eslint-disable-next-line\n      const node = data.bf[i];\n      const nodeId = `bf-${i}`;\n      const label = node.name;\n      const type = node.function_type;\n      const value = node.value;\n      const body = node.body;\n      graph.setNode(nodeId, { label, value, type, body });\n      // add auxi node for each bf\n      const auxLabel = 'aux';\n      const width = 1;\n      const height = 1;\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\n      // graph.setParent(`aux-${nodeId}`, nodeId);\n    }\n  }\n\n  // get pif\n  if ('pif' in data) {\n    for (let i = 0; i < data.pif.length; i += 1) {\n      const node = data.pif[i];\n      const nodeId = `pif-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\n    }\n  }\n\n  // get pof\n  if ('pof' in data) {\n    for (let i = 0; i < data.pof.length; i += 1) {\n      const node = data.pof[i];\n      const nodeId = `pof-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\n    }\n  }\n\n  // get opo\n  if ('opo' in data) {\n    for (let i = 0; i < data.opo.length; i += 1) {\n      const node = data.opo[i];\n      const nodeId = `opo-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\n    }\n  }\n\n  // get opi\n  if ('opi' in data) {\n    for (let i = 0; i < data.opi.length; i += 1) {\n      const node = data.opi[i];\n      const nodeId = `opi-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\n    }\n  }\n\n  // set edges wff\n  if ('wff' in data) {\n    for (let i = 0; i < data.wff.length; i += 1) {\n      const edge = data.wff[i];\n      const srcNodeId = `pif-${edge.src - 1}`;\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set edges wfopi\n  if ('wfopi' in data) {\n    for (let i = 0; i < data.wfopi.length; i += 1) {\n      const edge = data.wfopi[i];\n      const srcNodeId = `pif-${edge.src - 1}`;\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set edges wfopo\n  if ('wfopo' in data) {\n    for (let i = 0; i < data.wfopo.length; i += 1) {\n      const edge = data.wfopo[i];\n      const srcNodeId = `opo-${edge.src - 1}`;\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set edges wopio\n  if ('wopio' in data) {\n    for (let i = 0; i < data.wopio.length; i += 1) {\n      const edge = data.wopio[i];\n      const srcNodeId = `opo-${edge.src - 1}`;\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set bc\n  if ('bc' in data) {\n    for (let i = 0; i < data.bc.length; i += 1) {\n      // eslint-disable-next-line\n      const node = data.bc[i];\n      const nodeId = `bc-${i}`;\n      const label = node.name;\n      const type = node.function_type;\n      const value = node.value;\n      const condition = node.condition;\n      const body_if = node.body_if;\n      const body_else = node.body_else;\n      graph.setNode(nodeId, { label, value, type, condition, body_if, body_else });\n      // add auxi node for each bc\n      const auxLabel = 'aux';\n      const width = 1;\n      const height = 1;\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\n      // graph.setParent(`aux-${nodeId}`, nodeId);\n    }\n  }\n\n  // set pic\n  if ('pic' in data) {\n    for (let i = 0; i < data.pic.length; i += 1) {\n      const node = data.pic[i];\n      const nodeId = `pic-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\n    }\n  }\n\n  // set poc\n  if ('poc' in data) {\n    for (let i = 0; i < data.poc.length; i += 1) {\n      const node = data.poc[i];\n      const nodeId = `poc-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\n    }\n  }\n\n  // set wfc\n  if ('wfc' in data) {\n    for (let i = 0; i < data.wfc.length; i += 1) {\n      const edge = data.wfc[i];\n      const srcNodeId = `pic-${edge.src - 1}`;\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wcf\n  if ('wcf' in data) {\n    for (let i = 0; i < data.wcf.length; i += 1) {\n      const edge = data.wcf[i];\n      const srcNodeId = `pif-${edge.src - 1}`;\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wcc\n  if ('wcc' in data) {\n    for (let i = 0; i < data.wcc.length; i += 1) {\n      const edge = data.wcc[i];\n      const srcNodeId = `pic-${edge.src - 1}`;\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set edges wcopi\n  if ('wcopi' in data) {\n    for (let i = 0; i < data.wcopi.length; i += 1) {\n      const edge = data.wcopi[i];\n      const srcNodeId = `pic-${edge.src - 1}`;\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set edges wcopo\n  if ('wcopo' in data) {\n    for (let i = 0; i < data.wcopo.length; i += 1) {\n      const edge = data.wcopo[i];\n      const srcNodeId = `opo-${edge.src - 1}`;\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  if ('bl' in data) {\n    for (let i = 0; i < data.bl.length; i += 1) {\n      // eslint-disable-next-line\n      const node = data.bl[i];\n      const nodeId = `bl-${i}`;\n      const label = node.name;\n      const type = node.function_type;\n      const value = node.value;\n      const condition = node.condition;\n      const pre = node.pre;\n      const body = node.body;\n      const post = node.post;\n      graph.setNode(nodeId, { label, value, type, condition, pre, body, post });\n      // add auxi node for each bl\n      const auxLabel = 'aux';\n      const width = 1;\n      const height = 1;\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\n      // graph.setParent(`aux-${nodeId}`, nodeId);\n    }\n  }\n\n  // set pil\n  if ('pil' in data) {\n    for (let i = 0; i < data.pil.length; i += 1) {\n      const node = data.pil[i];\n      const nodeId = `pil-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\n    }\n  }\n\n  // set pol\n  if ('pol' in data) {\n    for (let i = 0; i < data.pol.length; i += 1) {\n      const node = data.pol[i];\n      const nodeId = `pol-${i}`;\n      const label = node.name;\n      const width = 50;\n      const height = 50;\n      graph.setNode(nodeId, { label, width, height });\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\n    }\n  }\n\n  // set wfl\n  if ('wfl' in data) {\n    for (let i = 0; i < data.wfl.length; i += 1) {\n      const edge = data.wfl[i];\n      const srcNodeId = `pil-${edge.src - 1}`;\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wcl\n  if ('wcl' in data) {\n    for (let i = 0; i < data.wcl.length; i += 1) {\n      const edge = data.wcl[i];\n      const srcNodeId = `pil-${edge.src - 1}`;\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wlopi\n  if ('wlopi' in data) {\n    for (let i = 0; i < data.wlopi.length; i += 1) {\n      const edge = data.wlopi[i];\n      const srcNodeId = `pil-${edge.src - 1}`;\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wll\n  if ('wll' in data) {\n    for (let i = 0; i < data.wll.length; i += 1) {\n      const edge = data.wll[i];\n      const srcNodeId = `pil-${edge.src - 1}`;\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wlf\n  if ('wlf' in data) {\n    for (let i = 0; i < data.wlf.length; i += 1) {\n      const edge = data.wlf[i];\n      const srcNodeId = `pif-${edge.src - 1}`;\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wlc\n  if ('wlc' in data) {\n    for (let i = 0; i < data.wlc.length; i += 1) {\n      const edge = data.wlc[i];\n      const srcNodeId = `pic-${edge.src - 1}`;\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // set wlopo\n  if ('wlopo' in data) {\n    for (let i = 0; i < data.wlopo.length; i += 1) {\n      const edge = data.wlopo[i];\n      const srcNodeId = `opo-${edge.src - 1}`;\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\n      graph.setEdge(srcNodeId, tgtNodeId);\n    }\n  }\n\n  // add auxi edges\n  if ('pif' in data) {\n    for (let i = 0; i < data.pif.length; i += 1) {\n      const nodeID = `pif-${i}`;\n      const pifNode = data.pif[i];\n      const auxID = `aux-bf-${pifNode.box - 1}`;\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\n      if (!hasIncomingEdges) {\n        graph.setEdge(auxID, nodeID);\n      }\n    }\n  }\n  if ('pof' in data) {\n    for (let i = 0; i < data.pof.length; i += 1) {\n      const nodeID = `pof-${i}`;\n      const pofNode = data.pof[i];\n      const auxID = `aux-bf-${pofNode.box - 1}`;\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\n      if (!hasOutgoingEdges) {\n        graph.setEdge(nodeID, auxID);\n      }\n    }\n  }\n  if ('pic' in data) {\n    for (let i = 0; i < data.pic.length; i += 1) {\n      const nodeID = `pic-${i}`;\n      const picNode = data.pic[i];\n      const auxID = `aux-bc-${picNode.box - 1}`;\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\n      if (!hasIncomingEdges) {\n        graph.setEdge(auxID, nodeID);\n      }\n    }\n  }\n  if ('poc' in data) {\n    for (let i = 0; i < data.poc.length; i += 1) {\n      const nodeID = `poc-${i}`;\n      const pocNode = data.poc[i];\n      const auxID = `aux-bc-${pocNode.box - 1}`;\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\n      if (!hasOutgoingEdges) {\n        graph.setEdge(nodeID, auxID);\n      }\n    }\n  }\n  if ('pil' in data) {\n    for (let i = 0; i < data.pil.length; i += 1) {\n      const nodeID = `pil-${i}`;\n      const pilNode = data.pil[i];\n      const auxID = `aux-bl-${pilNode.box - 1}`;\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\n      if (!hasIncomingEdges) {\n        graph.setEdge(auxID, nodeID);\n      }\n    }\n  }\n  if ('pol' in data) {\n    for (let i = 0; i < data.pol.length; i += 1) {\n      const nodeID = `pol-${i}`;\n      const polNode = data.pol[i];\n      const auxID = `aux-bl-${polNode.box - 1}`;\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\n      if (!hasOutgoingEdges) {\n        graph.setEdge(nodeID, auxID);\n      }\n    }\n  }\n  const bfNodes = graph.nodes().filter(node => node.startsWith('bf'));\n  const bcNodes = graph.nodes().filter(node => node.startsWith('bc'));\n  const blNodes = graph.nodes().filter(node => node.startsWith('bl'));\n  const opoNodes = graph.nodes().filter(node => node.startsWith('opo'));\n  const opiNodes = graph.nodes().filter(node => node.startsWith('opi'));\n  // const parentNodes = [...bcNodes, ...bfNodes, ...blNodes];\n  // const graph_aux = cloneDeep(graph);\n  // const superNodes = groupParentNodes(graph_aux, parentNodes);\n  // if (Object.keys(superNodes).length>1) {\n  //   graph = graph_aux;\n  // }\n  // console.log(graph);\n  // eslint-disable-next-line\n  // console.log(graph);\n  // execute layout calculation\n  graph.setGraph({ ranksep: 30, rankdir: 'BT' });\n  dagre.layout(graph);\n  console.log(graph);\n  // console.log(superNodes);\n  // if (Object.keys(superNodes).length>1000) {\n  //   arrangeSuperNodes(graph,superNodes);\n  // }\n\n  // get layout result\n  const layout = {\n    nodes: {},\n    edges: [],\n  };\n  console.log(data);\n  graph.nodes().forEach((nodeId) => {\n    const node = graph.node(nodeId);\n    layout.nodes[nodeId] = {\n      x: node.x,\n      y: node.y,\n      width: node.width,\n      height: node.height,\n      label: node.label,\n      type: node.type,\n      value: node.value,\n      body: node.body,\n      condition: node.condition,\n      body_if: node.body_if,\n      body_else: node.body_else,\n      pre: node.pre,\n      post: node.post\n    };\n  });\n  graph.edges().forEach((edge, i) => {\n    layout.edges.push({\n      id: i,\n      source: edge.v,\n      target: edge.w,\n    });\n  });\n  // console.log(layout);\n  // set attributes for bf\n  if ('bf' in data) {\n    for (let i = 0; i < data.bf.length; i += 1) {\n      const bfNodeId = `bf-${i}`;\n      if (('pif' in data) && ('pof' in data)) {\n        const pofNode = data.pof.find(node => node.box === i + 1);\n        const pifNode = data.pif.find(node => node.box === i + 1);\n        if (pofNode && pifNode) {\n          layout.nodes[bfNodeId].fullBox = true;\n        } else {\n          layout.nodes[bfNodeId].fullBox = false;\n        }\n      } else {\n        layout.nodes[bfNodeId].fullBox = false;\n      }\n    }\n  }\n  if ('bc' in data) {\n    for (let i = 0; i < data.bc.length; i += 1) {\n      const bcNodeId = `bc-${i}`;\n      if (('pic' in data) && ('poc' in data)) {\n        const pocNode = data.poc.find(node => node.box === i + 1);\n        const picNode = data.pic.find(node => node.box === i + 1);\n        if (pocNode && picNode) {\n          layout.nodes[bcNodeId].fullBox = true;\n        } else {\n          layout.nodes[bcNodeId].fullBox = false;\n        }\n      } else {\n        layout.nodes[bcNodeId].fullBox = false;\n      }\n    }\n  }\n  if ('bl' in data) {\n    for (let i = 0; i < data.bl.length; i += 1) {\n      const blNodeId = `bl-${i}`;\n      if (('pil' in data) && ('pol' in data)) {\n        const polNode = data.pol.find(node => node.box === i + 1);\n        const pilNode = data.pil.find(node => node.box === i + 1);\n        if (polNode && pilNode) {\n          layout.nodes[blNodeId].fullBox = true;\n        } else {\n          layout.nodes[blNodeId].fullBox = false;\n        }\n      } else {\n        layout.nodes[blNodeId].fullBox = false;\n      }\n    }\n  }\n\n  // set meta data for layout\n  layout.meta = {};\n  layout.meta.name = data.b[0].name;\n  layout.meta.identifier = `${data.b[0].function_type}-${data.b[0].metadata}`;\n  layout.meta.type = data.b[0].function_type;\n  return layout;\n}\n\nclass UnionFind {\n  constructor(elements) {\n    this.parent = {};\n    elements.forEach(e => this.parent[e] = e);\n  }\n\n  find(x) {\n    if(this.parent[x] !== x) {\n      this.parent[x] = this.find(this.parent[x]);\n    }\n    return this.parent[x];\n  }\n\n  union(x, y) {\n    const parentX = this.find(x);\n    const parentY = this.find(y);\n    if(parentX !== parentY) {\n      this.parent[parentY] = parentX;\n    }\n  }\n}\n\nfunction isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\n  let nodes1 = [];\n  let nodes2 = [];\n\n  if (parentNode1.startsWith(\"opo\") || parentNode1.startsWith(\"opi\")) {\n    nodes1.push(parentNode1);\n  } else {\n    nodes1 = graph.children(parentNode1);\n  }\n\n  if (parentNode2.startsWith(\"opo\") || parentNode2.startsWith(\"opi\")) {\n    nodes2.push(parentNode2);\n  } else {\n    nodes2 = graph.children(parentNode2);\n  }\n\n  for (const node1 of nodes1) {\n    for (const node2 of nodes2) {\n      if (graph.edge(node1, node2) || graph.edge(node2, node1)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction groupParentNodes(graph, parentNodes) {\n  const uf = new UnionFind(parentNodes);\n  for(let i = 0; i < parentNodes.length; i++) {\n    for(let j = i+1; j < parentNodes.length; j++) {\n      if(isEdgeBetweenChildNodes(graph, parentNodes[i], parentNodes[j])) {\n        uf.union(parentNodes[i], parentNodes[j]);\n      }\n    }\n  }\n  const groups = {};\n  parentNodes.forEach(node => {\n    const root = uf.find(node);\n    if(!groups[root]) {\n      groups[root] = [];\n    }\n    groups[root].push(node);\n  });\n\n  let superNodeCounter = 0;\n  const superNodes = {};\n  let previousSuperNodeId = null;\n  for (let root in groups) {\n    const superNodeId = `aux-super-${superNodeCounter}`;\n    const label = `aux-super`;\n    const virtual = true;\n    graph.setNode(superNodeId, { label, virtual });\n    groups[root].forEach(node => graph.setParent(node, superNodeId));\n    superNodes[superNodeId] = groups[root];\n    \n    // Now there is a bug of dagre, it can not set an edge between group nodes\n    if (previousSuperNodeId) {\n      // graph.setEdge(previousSuperNodeId, superNodeId);\n    }\n    previousSuperNodeId = superNodeId;\n    superNodeCounter++;\n  }\n\n  return superNodes;\n}\n\nfunction adjustChildNodesPosition(graph, parentNodeId, deltaX, deltaY) {\n  const children = graph.children(parentNodeId);\n  children.forEach(childId => {\n    const childNode = graph.node(childId);\n    \n    childNode.x += deltaX;\n    childNode.y += deltaY;\n\n    if (graph.children(childId).length>0){\n      adjustChildNodesPosition(graph, childId, deltaX, deltaY);\n    }\n\n    if (childId.split('-')[0]===\"bf\") {\n      // console.log(\"aux-\" + childId);\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\n    }\n\n    if (childId.split('-')[0]===\"bc\") {\n      // console.log(\"aux-\" + childId);\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\n    }\n\n    if (childId.split('-')[0]===\"bl\") {\n      // console.log(\"aux-\" + childId);\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\n    }\n  });\n}\n\nfunction adjustAuxNodesPosition(graph, auxNodeId, deltaX, deltaY) {\n  const auxNode = graph.node(auxNodeId);\n  auxNode.x += deltaX;\n  auxNode.y += deltaY;\n}\n\nfunction arrangeSuperNodes(graph, superNodes) {\n  const nodeSpacing = 50; // 超级节点之间的间距\n  let currentY = 0;\n  console.log(graph);\n  // 根据超级节点创建顺序进行排序\n  const superNodeIds = Object.keys(superNodes);\n  superNodeIds.sort((a, b) => parseInt(a.split('-')[2]) - parseInt(b.split('-')[2]));\n\n  // 获取第一个超级节点，保持其位置不变\n  const firstSuperNode = graph.node(superNodeIds[0]);\n  const firstSuperNodeCenterX = firstSuperNode.x + 100;\n  firstSuperNode.x += 100;\n  currentY = firstSuperNode.y;\n  adjustChildNodesPosition(graph, superNodeIds[0], 100, 0);\n\n  // 从第二个超级节点开始遍历，调整其位置\n  for (let i = 1; i < superNodeIds.length; i++) {\n    \n    const superNodeId = superNodeIds[i];\n    const preSuperNode = graph.node(superNodeIds[i-1]);\n    const superNode = graph.node(superNodeId);\n    currentY += nodeSpacing + superNode.height / 2 + preSuperNode.height / 2;\n\n    // 计算移动距离\n    const deltaX = firstSuperNodeCenterX - superNode.x;\n    const deltaY = currentY - superNode.y;\n\n    // 将超级节点移动到新的中心点\n    superNode.x += deltaX;\n    superNode.y += deltaY;\n\n    const moveFlag = false;\n    // graph.children(superNodeId).forEach(childId => {\n    //   if (childId.split)\n    // })\n    // 更新超级节点的子节点的坐标\n    adjustChildNodesPosition(graph, superNodeId, deltaX, deltaY);\n\n    // 更新下一个超级节点的y坐标\n    // currentY += superNode.height + nodeSpacing;\n  }\n}\n\n\n\n// function isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\n//   // 获取父节点的子节点\n//   const children1 = graph.children(parentNode1);\n//   const children2 = graph.children(parentNode2);\n\n//   // 遍历每一对子节点，检查它们之间是否存在边缘\n//   for (const child1 of children1) {\n//     for (const child2 of children2) {\n//       if (graph.edge(child1, child2) || graph.edge(child2, child1)) {\n//         // 如果找到了边缘，返回true\n//         return true;\n//       }\n//     }\n//   }\n\n//   // 如果没有找到边缘，返回false\n//   return false;\n// }\n\n// function groupParentNodesWithConnectedChildren(graph, parentNodeIds) {\n//   // 为每个父节点创建一个集合\n//   const sets = new Map(parentNodeIds.map(id => [id, new Set([id])]));\n\n//   // 超级父节点计数器\n//   let superParentCounter = 0;\n\n//   // 对每一对父节点进行迭代\n//   for (let i = 0; i < parentNodeIds.length; i++) {\n//     for (let j = i + 1; j < parentNodeIds.length; j++) {\n//       // 检查父节点的子节点之间是否存在连接\n//       if (isEdgeBetweenChildNodes(graph, parentNodeIds[i], parentNodeIds[j])) {\n//         // 如果存在连接，将这两个节点的集合合并\n//         const set1 = sets.get(parentNodeIds[i]);\n//         const set2 = sets.get(parentNodeIds[j]);\n\n//         const newSet = new Set([...set1, ...set2]);\n\n//         // 更新集合映射\n//         newSet.forEach(id => sets.set(id, newSet));\n//       }\n//     }\n//   }\n\n//   // 创建超级父节点\n//   const visited = new Set();\n//   const superParentNodes = [];\n\n//   sets.forEach((set, id) => {\n//     // 忽略已经访问过的节点\n//     if (visited.has(id)) return;\n\n//     const superParentNodeId = `aux-super-${superParentCounter++}`;\n\n//     // 设置超级父节点的子节点\n//     set.forEach(id => {\n//       graph.setParent(id, superParentNodeId);\n//       visited.add(id);\n//     });\n\n//     superParentNodes.push(superParentNodeId);\n//   });\n\n//   return superParentNodes;\n// }\n\n\nexport function getTreeLayout(data) {\n  const g = new dagre.graphlib.Graph({ compound: true });\n  g.setGraph({});\n  // eslint-disable-next-line\n  g.setDefaultEdgeLabel(() => { return {}; });\n\n  g.setGraph(data.graph);\n\n  data.subgraphs.forEach((subgraph) => {\n    const filteredAttributes = {};\n    Object.keys(subgraph.attributes).forEach((key) => {\n      if (key === 'label') {\n        filteredAttributes[key] = subgraph.attributes[key];\n      }\n    });\n    g.setNode(subgraph.name, filteredAttributes);\n    subgraph.nodes.forEach((node) => {\n      const filteredAttributesN = {};\n      Object.keys(node.attributes).forEach((key) => {\n        if (key === 'label') {\n          filteredAttributesN[key] = node.attributes[key];\n        }\n      });\n      g.setNode(node.name, filteredAttributesN);\n      g.setParent(node.name, subgraph.name);\n    });\n  });\n\n  data.edges.forEach((edge) => {\n    g.setEdge(edge.source, edge.target);\n  });\n\n  dagre.layout(g);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/layout.js","/* eslint-disable */\nimport * as d3 from \"d3\";\n\nexport function drawLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color) {\n    // console.log(\"sourceid, \", sourceid);\n    // console.log(\"targetid, \", targetid);\n    // console.log(\"locationTransform, \", locationTransform);\n    // console.log(\"body_num_source, \", body_num_source);\n    // console.log(\"body_num_target, \", body_num_target);\n    // console.log(\"color, \", color);\n  \n    // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\n    const dx1 = targetX1 - sourceX;\n    const dy1 = targetY1 - sourceY;\n    const dx2 = targetX2 - sourceX;\n    const dy2 = targetY2 - sourceY;\n    const controlPoint11 = {};\n    const controlPoint12 = {};\n    const controlPoint21 = {};\n    const controlPoint22 = {};\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\n  \n    const g = d3.select('svg').select('#sumGroup').append(\"g\").attr('id', 'line' + String(body_num_source) + '_' + String(body_num_target)).attr('class', 'drawer');\n  \n    const paddingL = 17;\n\n    g.attr(\"sourceid\", sourceid)\n      .attr(\"targetid\", targetid)\n      .attr(\"locationTransform\", locationTransform)\n      .attr(\"body_num_source\", body_num_source)\n      .attr(\"body_num_target\", body_num_target)\n      .attr(\"color\", color);\n\n    let data1 = [\n      {x: sourceX, y: sourceY},\n      {x: controlPoint11.x, y: controlPoint11.y},\n      {x: controlPoint12.x, y: controlPoint12.y},\n      {x: targetX1, y: targetY1 + paddingL}\n    ];\n\n    let data2 = [\n      {x: sourceX, y: sourceY},\n      {x: controlPoint21.x, y: controlPoint21.y},\n      {x: controlPoint22.x, y: controlPoint22.y},\n      {x: targetX2, y: targetY2 - paddingL}\n    ];\n\n    let lineGenerator = d3.line()\n      .x(function(d) { return d.x; })\n      .y(function(d) { return d.y; })\n      .curve(d3.curveBasis);\n  \n    let pathString1 = lineGenerator(data1);\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement1.setAttribute('d', pathString1);\n\n    let pathString2 = lineGenerator(data2);\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement2.setAttribute('d', pathString2);\n    \n    let totalLength1 = pathElement1.getTotalLength();\n    let totalLength2 = pathElement2.getTotalLength();\n\n    const numPoints = 500;\n\n    let points1 = [];\n    for (let i = 0; i < numPoints; i++) {\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\n        points1.push({x: point.x, y: point.y});\n    }\n\n    let points2 = [];\n    for (let i = 0; i < numPoints; i++) {\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\n        points2.push({x: point.x, y: point.y});\n    }\n\n    // 创建一个线性比例尺来对应x值\n    let xScale1 = d3.scaleLinear()\n    .domain(d3.extent(data1, function(d) { return d.x; }))\n    .range([0, dx1]); // 假设width是你的SVG宽度\n\n    // 根据x值找到相应的数据点\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\n\n    // 创建一个线性比例尺来对应x值\n    let xScale2 = d3.scaleLinear()\n    .domain(d3.extent(data2, function(d) { return d.x; }))\n    .range([0, dx1]); // 假设width是你的SVG宽度\n\n    // 根据x值找到相应的数据点\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\n\n    let area1 = d3.area()\n      .x(function(d) { return d.x; })\n      .y0( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points1[indexOfNode - 1];\n        let pointAfter = points1[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\n      })\n      .y1( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points1[indexOfNode - 1];\n        let pointAfter = points1[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\n      })\n      .curve(d3.curveBasis);\n\n    let area2 = d3.area()\n      .x(function(d) { return d.x; })\n      .y0( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points2[indexOfNode - 1];\n        let pointAfter = points2[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\n      })\n      .y1(d => {\n        const xValue = d.x;\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points2[indexOfNode - 1];\n        let pointAfter = points2[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\n      })\n      .curve(d3.curveBasis);\n\n    let path1 = g.append(\"path\")\n    .datum(data1)\n    .attr(\"d\", area1)\n    .attr('id', 'path1')\n    .attr(\"fill\", color);\n  \n    let path2 = g.append(\"path\")\n    .datum(data2)\n    .attr(\"d\", area2)\n    .attr('id', 'path2')\n    .attr(\"fill\", color);\n\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\n      const currentNode = d3.select(this);\n      const currentNodeId = currentNode.attr(\"id\");\n      if (currentNodeId !== sourceid) {\n        const currentNodeBody = currentNode.attr(\"data-body\");\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\n          currentNode.attr(\"data-opened\", true);\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\n          g.append(\"circle\")\n            .attr(\"cx\", targetXforSL)\n            .attr(\"cy\", targetYforSL)\n            .attr(\"r\", 7)  // 设置圆的半径\n            .attr(\"fill\", color);  // 设置圆的颜色\n\n          g.append(\"line\")\n            .attr(\"x1\", sourceXforSL)\n            .attr(\"y1\", sourceYforSL)\n            .attr(\"x2\", targetXforSL)\n            .attr(\"y2\", targetYforSL)\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\n            .attr(\"stroke\", color)  // 设置线的颜色\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\n            .attr(\"class\", \"arrowLine\");\n        }\n      }\n    })\n\n  }\n  \nexport function updateLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color, lineID) {\n    // console.log(\"sourceid, \", sourceid);\n    // console.log(\"targetid, \", targetid);\n    // console.log(\"locationTransform, \", locationTransform);\n    // console.log(\"body_num_source, \", body_num_source);\n    // console.log(\"body_num_target, \", body_num_target);\n    // console.log(\"color, \", color);\n\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\n    const dx1 = targetX1 - sourceX;\n    const dy1 = targetY1 - sourceY;\n    const dx2 = targetX2 - sourceX;\n    const dy2 = targetY2 - sourceY;\n    const controlPoint11 = {};\n    const controlPoint12 = {};\n    const controlPoint21 = {};\n    const controlPoint22 = {};\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\n\n    const g = d3.select('#' + lineID);\n\n    const paddingL = 17;\n\n    g.attr(\"sourceid\", sourceid)\n        .attr(\"targetid\", targetid)\n        .attr(\"locationTransform\", locationTransform)\n        .attr(\"body_num_source\", body_num_source)\n        .attr(\"body_num_target\", body_num_target)\n        .attr(\"color\", color);\n\n\n    let data1 = [\n      {x: sourceX, y: sourceY},\n      {x: controlPoint11.x, y: controlPoint11.y},\n      {x: controlPoint12.x, y: controlPoint12.y},\n      {x: targetX1, y: targetY1 + paddingL}\n    ];\n\n    let data2 = [\n      {x: sourceX, y: sourceY},\n      {x: controlPoint21.x, y: controlPoint21.y},\n      {x: controlPoint22.x, y: controlPoint22.y},\n      {x: targetX2, y: targetY2 - paddingL}\n    ];\n\n    let lineGenerator = d3.line()\n      .x(function(d) { return d.x; })\n      .y(function(d) { return d.y; })\n      .curve(d3.curveBasis);\n  \n    let pathString1 = lineGenerator(data1);\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement1.setAttribute('d', pathString1);\n\n    let pathString2 = lineGenerator(data2);\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    pathElement2.setAttribute('d', pathString2);\n    \n    let totalLength1 = pathElement1.getTotalLength();\n    let totalLength2 = pathElement2.getTotalLength();\n\n    const numPoints = 500;\n\n    let points1 = [];\n    for (let i = 0; i < numPoints; i++) {\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\n        points1.push({x: point.x, y: point.y});\n    }\n\n    let points2 = [];\n    for (let i = 0; i < numPoints; i++) {\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\n        points2.push({x: point.x, y: point.y});\n    }\n\n    // 创建一个线性比例尺来对应x值\n    let xScale1 = d3.scaleLinear()\n    .domain(d3.extent(data1, function(d) { return d.x; }))\n    .range([0, dx1]); // 假设width是你的SVG宽度\n\n    // 根据x值找到相应的数据点\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\n\n    // 创建一个线性比例尺来对应x值\n    let xScale2 = d3.scaleLinear()\n    .domain(d3.extent(data2, function(d) { return d.x; }))\n    .range([0, dx1]); // 假设width是你的SVG宽度\n\n    // 根据x值找到相应的数据点\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\n\n    let area1 = d3.area()\n      .x(function(d) { return d.x; })\n      .y0( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points1[indexOfNode - 1];\n        let pointAfter = points1[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\n      })\n      .y1( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points1[indexOfNode - 1];\n        let pointAfter = points1[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\n      })\n      .curve(d3.curveBasis);\n\n    let area2 = d3.area()\n      .x(function(d) { return d.x; })\n      .y0( d => {\n        const xValue = d.x;\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points2[indexOfNode - 1];\n        let pointAfter = points2[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\n      })\n      .y1(d => {\n        const xValue = d.x;\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\n        if(indexOfNode < 1) indexOfNode = 1;\n        let pointBefore = points2[indexOfNode - 1];\n        let pointAfter = points2[indexOfNode + 1];\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\n      })\n      .curve(d3.curveBasis);\n\n    let path1 = g.select(\"#path1\")\n    .datum(data1)\n    .transition()\n    .duration(720)\n    .attr(\"d\", area1)\n    .attr(\"fill\", color);\n\n    let path2 = g.select(\"#path2\")\n    .datum(data2)\n    .transition()\n    .duration(720)\n    .attr(\"d\", area2)\n    .attr(\"fill\", color);\n\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\n      const currentNode = d3.select(this);\n      const currentNodeId = currentNode.attr(\"id\");\n      if (currentNodeId !== sourceid) {\n        const currentNodeBody = currentNode.attr(\"data-body\");\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\n          g.select(\"circle\")\n            .transition()\n            .duration(720)\n            .attr(\"cx\", targetXforSL)\n            .attr(\"cy\", targetYforSL)\n            .attr(\"r\", 7)  // 设置圆的半径\n            .attr(\"fill\", color);  // 设置圆的颜色\n\n          g.select(\"line\")\n            .transition()\n            .duration(720)\n            .attr(\"x1\", sourceXforSL)\n            .attr(\"y1\", sourceYforSL)\n            .attr(\"x2\", targetXforSL)\n            .attr(\"y2\", targetYforSL)\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\n            .attr(\"stroke\", color)  // 设置线的颜色\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\n            .attr(\"class\", \"arrowLine\");\n        }\n      }\n      \n    })\n}\n\nexport function drawLinesDashArrow(treeLayout, sourceID, targetID, color, label) {\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\n  const sourceFrame = \"frame\" + sourceID;\n  const targetFrame = \"frame\" + targetID;\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\n  const targetX = sourceX + dx;\n  const targetY = sourceY + dy;\n  const g = d3.select('svg').select('#sumGroup').append(\"g\").attr('id', 'line' + String(sourceID) + '_' + String(targetID)).attr(\"line-type\", \"dashed\").attr('class', 'drawer');\n  const paddingL = 17;\n  g.append(\"defs\")\n    .append(\"marker\")\n    .attr(\"id\", \"arrow\")\n    .attr(\"markerWidth\", 5)  // 原来的一半\n    .attr(\"markerHeight\", 3.5)  // 原来的一半\n    .attr(\"refX\", 5)  // 调整参考点以适应新的大小\n    .attr(\"refY\", 1.75)  // 调整参考点以适应新的大小\n    .attr(\"orient\", \"auto\")\n    .append(\"path\")\n    .attr(\"d\", \"M0,0 L5,1.75 L0,3.5 Z\")  // 缩小箭头的路径\n  .style(\"fill\", \"gray\");\n  g.append(\"line\")\n    .attr(\"x1\", sourceX)\n    .attr(\"y1\", sourceY)\n    .attr(\"x2\", targetX)\n    .attr(\"y2\", targetY)\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\n    .attr(\"stroke\", color)  // 设置线的颜色\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\n    .attr(\"class\", \"arrowLine\");\n  let midX = (sourceX + targetX) / 2 - 45;\n  let midY = (sourceY + targetY) / 2 - 5;\n  g.append(\"text\")\n    .attr(\"x\", midX)\n    .attr(\"y\", midY)\n    .text(label)\n    .style(\"font-size\", \"30px\")  // 设置字体大小\n    .style(\"fill\", \"black\");  // 设置字体颜色\n}\n\nexport function updateLinesDashArrow(treeLayout, sourceID, targetID, color, label, lineID) {\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\n  const sourceFrame = \"frame\" + sourceID;\n  const targetFrame = \"frame\" + targetID;\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\n  const targetX = sourceX + dx;\n  const targetY = sourceY + dy;\n  const g = d3.select('svg').select('#sumGroup').select(\"#\" + lineID);\n  g.select(\"line\")\n    .transition()\n    .duration(720)\n    .attr(\"x1\", sourceX)\n    .attr(\"y1\", sourceY)\n    .attr(\"x2\", targetX)\n    .attr(\"y2\", targetY)\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\n    .attr(\"stroke\", color)  // 设置线的颜色\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\n    .attr(\"class\", \"arrowLine\");\n  let midX = (sourceX + targetX) / 2 - 45;\n  let midY = (sourceY + targetY) / 2 - 5;\n  g.select(\"text\")\n    .transition()\n    .duration(720)\n    .attr(\"x\", midX)\n    .attr(\"y\", midY)\n    .text(label)\n    .style(\"font-size\", \"30px\")  // 设置字体大小\n    .style(\"fill\", \"black\");  // 设置字体颜色\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawlines.js","/* eslint-disable */\nimport * as d3 from \"d3\";\n\nexport function arraysAreEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function loopOverHierarchy(d, callback) {\n    callback(d);\n    if (d.children) d.children.forEach(c => loopOverHierarchy(c, callback));\n    if (d._children) d._children.forEach(c => loopOverHierarchy(c, callback));\n  }\n\nexport function getChildren(hierarchies, childrens) {\n  console.log(childrens);\n  childrens.forEach(function(element){\n    var children = hierarchies;\n    var zoomin = 2;\n    element.path.forEach(function(node){\n        if (Number(node) !== 0) {\n            if (zoomin <= element.path.length - 1) {\n                // debugger\n                const filterChild = children.children.filter(function(item){\n                    return Number(item.name) === Number(node);\n                })[0]\n                zoomin += 1\n                children = filterChild;\n            }\n            else if (node === element.path[element.path.length - 1]) {\n                // debugger\n                if (children.hasOwnProperty(\"children\")) {\n                    children.children.push(element);\n                    sortByOName(children.children);\n                } else {\n                    children.children = [ element ];\n                }\n            }\n        }\n  })\n})\n}\n\nexport function findChildrenAtSameLevel(arr) {\n  const paths = {};\n\n  for (let i = 0; i < arr.length; i++) {\n    const path = arr[i];\n    const lastIndex = path.lastIndexOf('-');\n\n    if (lastIndex !== -1) {\n      const parentPath = path.slice(0, lastIndex);\n\n      if (!paths[parentPath]) {\n        paths[parentPath] = [];\n      }\n\n      paths[parentPath].push(path);\n    }\n  }\n\n  const similarPaths = Object.values(paths).filter(pathGroup => pathGroup.length > 1);\n\n  return similarPaths;\n}\n\nfunction sortByOName(arr) {\n    return arr.sort((a, b) => {\n        const aNums = a.oName.split('-').map(Number);\n        const bNums = b.oName.split('-').map(Number);\n\n        // 根据数字依次进行比较\n        for(let i = 0; i < aNums.length; i++) {\n            if (aNums[i] < bNums[i]) {\n                return -1;\n            } else if (aNums[i] > bNums[i]) {\n                return 1;\n            }\n            // 如果相等，继续比较下一个数字\n        }\n\n        // 如果所有数字都相等，返回0表示不需要改变顺序\n        return 0;\n    });\n}\n\nexport function autoTranslate() {\n    let gs = d3.select('svg').selectAll('g');\n\n    let tops = [], lefts = [], rights = [], bottoms = [];\n    \n    gs.each(function() {\n        let rect = this.getBoundingClientRect();\n    \n        tops.push(rect.top);\n        lefts.push(rect.left);\n        rights.push(rect.right);\n        bottoms.push(rect.bottom);\n    });\n    \n    // 计算缩放前的矩形大小\n    let initialWidth = Math.max(...rights) - Math.min(...lefts);\n    let initialHeight = Math.max(...bottoms) - Math.min(...tops);\n    \n    // 设置你想要的矩形大小\n    let desiredWidth = 2000;  // 请替换为你想要的宽度\n    let desiredHeight = 2000;  // 请替换为你想要的高度\n    \n    // 计算缩放因子，这里使用相同的缩放因子以保持长宽比不变\n    let scale = Math.min(desiredWidth / initialWidth, desiredHeight / initialHeight);\n    \n    // 应用缩放\n    gs.attr('transform', (d, i, nodes) => {\n        // 获取原有的 transform 值\n        let originalTransform = d3.select(nodes[i]).attr('transform');\n        let translateValues = originalTransform.match(/translate\\(([^)]+)\\)/);\n    \n        let originalX = 0, originalY = 0;\n    \n        if (translateValues) {\n            [originalX, originalY] = translateValues[1].split(',').map(Number);\n        }\n    \n        // 保持平移不变，应用缩放\n        return `translate(${originalX}, ${originalY})`;\n    });\n}\n\nexport function computeBoundingRectangle(shapes) {\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    const ranksep = 37;\n    \n    for (const key in shapes) {\n        const node = shapes[key];\n        const [type, index] = key.split(\"-\");\n        const isBfNode = (type === \"bf\");\n        const isPofNode = (type === \"pof\");\n        const isPifNode = (type === \"pif\");\n        const isAuxNode = (type === \"aux\");\n        const isOpoNode = (type === 'opo');\n        const isOpiNode = (type === 'opi');\n        const isBcNode = (type === \"bc\");\n        const isPocNode = (type === \"poc\");\n        const isPicNode = (type === \"pic\");\n        const isBlNode = (type === \"bl\");\n        const isPolNode = (type === \"pol\");\n        const isPilNode = (type === \"pil\");\n        if (isBfNode||isBcNode||isBlNode) {\n            if (node.type == \"LITERAL\") {\n                if (node.fullBox) {\n                    minX = Math.min(minX, node.x - node.width / 2);\n                    minY = Math.min(minY, node.y - node.height / 2 + ranksep);\n                    maxX = Math.max(maxX, node.x + node.width / 2);\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\n                } else {\n                    minX = Math.min(minX, node.x - node.width / 2 + ranksep / 2);\n                    minY = Math.min(minY, node.y - node.height / 2 - ranksep);\n                    maxX = Math.max(maxX, node.x + node.width / 2 - ranksep / 2);\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\n                }\n            } else {\n                if (node.fullBox) {\n                    minX = Math.min(minX, node.x - node.width / 2);\n                    minY = Math.min(minY, node.y - node.height / 2 + ranksep);\n                    maxX = Math.max(maxX, node.x + node.width / 2);\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\n                } else {\n                    minX = Math.min(minX, node.x - node.width / 2);\n                    minY = Math.min(minY, node.y - node.height / 2 - ranksep);\n                    maxX = Math.max(maxX, node.x + node.width / 2);\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\n                }\n            }\n        } else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode || isPilNode || isPolNode) {\n            minX = Math.min(minX, node.x - node.width / 2);\n            minY = Math.min(minY, node.y - node.height / 2);\n            maxX = Math.max(maxX, node.x + node.width / 2);\n            maxY = Math.max(maxY, node.y + node.height / 2);\n        }\n       \n    }\n    return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n    };\n}\n\nexport function getOuterBox(bbox, padding, ranksep, nodes) {\n    let x;\n    let y;\n    let width;\n    let height;\n    if ('opo-0' in nodes && 'opi-0' in nodes){\n        // full\n        x = bbox.x - padding;\n        y = bbox.y - padding + ranksep;\n        width = bbox.width + 2 * padding;\n        height = bbox.height + 2 * padding - 2* ranksep;\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\n        // bottom\n        x = bbox.x - padding;\n        y = bbox.y - padding - ranksep / 10;\n        width = bbox.width + 2 * padding;\n        height = bbox.height + 2 * padding - ranksep;\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\n        // top\n        x = bbox.x - padding;\n        y = bbox.y - padding + ranksep * 2;\n        width = bbox.width + 2 * padding;\n        height = bbox.height + 2 * padding - ranksep;\n    } else {\n        // empty\n        x = bbox.x - padding;\n        y = bbox.y - padding;\n        width = bbox.width + 2 * padding;\n        height = bbox.height + 2 * padding;\n    }\n    return {\n        x,\n        y,\n        width,\n        height\n    };\n}\n\nexport function getMultiTree(hierarchies, nodeposition) {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utilities.js","/* eslint-disable */\nimport {hierarchy} from 'd3-hierarchy';\n\nconst defaults = Object.freeze({\n  children: data => data.children,\n  nodeSize: node => node.data.size,\n  spacing: 0,\n});\n\n// Create a layout function with customizable options. Per D3-style, the\n// options can be set at any time using setter methods. The layout function\n// will compute the tree node positions based on the options in effect at the\n// time it is called.\nexport default function flextree(options) {\n  const opts = Object.assign({}, defaults, options);\n  function accessor(name) {\n    const opt = opts[name];\n    return typeof opt === 'function' ? opt : () => opt;\n  }\n\n  function layout(tree) {\n    const wtree = wrap(getWrapper(), tree, node=>node.children);\n    wtree.update();\n    return wtree.data;\n  }\n\n  function getFlexNode() {\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class FlexNode extends hierarchy.prototype.constructor {\n      constructor(data) {\n        super(data);\n      }\n      copy() {\n        const c = wrap(this.constructor, this, node=>node.children);\n        c.each(node => node.data = node.data.data);\n        return c;\n      }\n      get size() { return nodeSize(this); }\n      spacing(oNode) { return spacing(this, oNode); }\n      get nodes() { return this.descendants(); }\n      get xSize() { return this.size[0]; }\n      get ySize() { return this.size[1]; }\n      get top() { return this.y; }\n      get bottom() { return this.y + this.ySize; }\n      get left() { return this.x - this.xSize / 2; }\n      get right() { return this.x + this.xSize / 2; }\n      get root() {\n        const ancs = this.ancestors();\n        return ancs[ancs.length - 1];\n      }\n      get numChildren() {\n        return this.hasChildren ? this.children.length : 0;\n      }\n      get hasChildren() { return !this.noChildren; }\n      get noChildren() { return this.children === null; }\n      get firstChild() {\n        return this.hasChildren ? this.children[0] : null;\n      }\n      get lastChild() {\n        return this.hasChildren ? this.children[this.numChildren - 1] : null;\n      }\n      get extents() {\n        return (this.children || []).reduce(\n          (acc, kid) => FlexNode.maxExtents(acc, kid.extents),\n          this.nodeExtents);\n      }\n      get nodeExtents() {\n        return {\n          top: this.top,\n          bottom: this.bottom,\n          left: this.left,\n          right: this.right,\n        };\n      }\n      static maxExtents(e0, e1) {\n        return {\n          top: Math.min(e0.top, e1.top),\n          bottom: Math.max(e0.bottom, e1.bottom),\n          left: Math.min(e0.left, e1.left),\n          right: Math.max(e0.right, e1.right),\n        };\n      }\n    };\n  }\n\n  function getWrapper() {\n    const FlexNode = getFlexNode();\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class extends FlexNode {\n      constructor(data) {\n        super(data);\n        Object.assign(this, {\n          x: 0, y: 0,\n          relX: 0, prelim: 0, shift: 0, change: 0,\n          lExt: this, lExtRelX: 0, lThr: null,\n          rExt: this, rExtRelX: 0, rThr: null,\n        });\n      }\n      get size() { return nodeSize(this.data); }\n      spacing(oNode) { return spacing(this.data, oNode.data); }\n      get x() { return this.data.x; }\n      set x(v) { this.data.x = v; }\n      get y() { return this.data.y; }\n      set y(v) { this.data.y = v; }\n      update() {\n        layoutChildren(this);\n        resolveX(this);\n        return this;\n      }\n    };\n  }\n\n  function wrap(FlexClass, treeData, children) {\n    const _wrap = (data, parent) => {\n      const node = new FlexClass(data);\n      Object.assign(node, {\n        parent,\n        depth: parent === null ? 0 : parent.depth + 1,\n        height: 0,\n        length: 1,\n      });\n      const kidsData = children(data) || [];\n      node.children = kidsData.length === 0 ? null\n        : kidsData.map(kd => _wrap(kd, node));\n      if (node.children) {\n        Object.assign(node, node.children.reduce(\n          (hl, kid) => ({\n            height: Math.max(hl.height, kid.height + 1),\n            length: hl.length + kid.length,\n          }), node\n        ));\n      }\n      return node;\n    };\n    return _wrap(treeData, null);\n  }\n\n\n  Object.assign(layout, {\n    nodeSize(arg) {\n      return arguments.length ? (opts.nodeSize = arg, layout) : opts.nodeSize;\n    },\n    spacing(arg) {\n      return arguments.length ? (opts.spacing = arg, layout) : opts.spacing;\n    },\n    children(arg) {\n      return arguments.length ? (opts.children = arg, layout) : opts.children;\n    },\n    hierarchy(treeData, children) {\n      const kids = typeof children === 'undefined' ? opts.children : children;\n      return wrap(getFlexNode(), treeData, kids);\n    },\n    dump(tree) {\n      const nodeSize = accessor('nodeSize');\n      const _dump = i0 => node => {\n        const i1 = i0 + '  ';\n        const i2 = i0 + '    ';\n        const {x, y} = node;\n        const size = nodeSize(node);\n        const kids = (node.children || []);\n        const kdumps = (kids.length === 0) ? ' ' :\n          `,${i1}children: [${i2}${kids.map(_dump(i2)).join(i2)}${i1}],${i0}`;\n        return `{ size: [${size.join(', ')}],${i1}x: ${x}, y: ${y}${kdumps}},`;\n      };\n      return _dump('\\n')(tree);\n    },\n  });\n  return layout;\n}\n\nconst layoutChildren = (w, y = 0) => {\n  w.y = y;\n  (w.children || []).reduce((acc, kid) => {\n    const [i, lastLows] = acc;\n    layoutChildren(kid, w.y + w.ySize);\n    // The lowest vertical coordinate while extreme nodes still point\n    // in current subtree.\n    const lowY = (i === 0 ? kid.lExt : kid.rExt).bottom;\n    if (i !== 0) separate(w, i, lastLows);\n    const lows = updateLows(lowY, i, lastLows);\n    return [i + 1, lows];\n  }, [0, null]);\n  shiftChange(w);\n  positionRoot(w);\n  return w;\n};\n\n// Resolves the relative coordinate properties - relX and prelim --\n// to set the final, absolute x coordinate for each node. This also sets\n// `prelim` to 0, so that `relX` for each node is its x-coordinate relative\n// to its parent.\nconst resolveX = (w, prevSum, parentX) => {\n  // A call to resolveX without arguments is assumed to be for the root of\n  // the tree. This will set the root's x-coord to zero.\n  if (typeof prevSum === 'undefined') {\n    prevSum = -w.relX - w.prelim;\n    parentX = 0;\n  }\n  const sum = prevSum + w.relX;\n  w.relX = sum + w.prelim - parentX;\n  w.prelim = 0;\n  w.x = parentX + w.relX;\n  (w.children || []).forEach(k => resolveX(k, sum, w.x));\n  return w;\n};\n\n// Process shift and change for all children, to add intermediate spacing to\n// each child's modifier.\nconst shiftChange = w => {\n  (w.children || []).reduce((acc, child) => {\n    const [lastShiftSum, lastChangeSum] = acc;\n    const shiftSum = lastShiftSum + child.shift;\n    const changeSum = lastChangeSum + shiftSum + child.change;\n    child.relX += changeSum;\n    return [shiftSum, changeSum];\n  }, [0, 0]);\n};\n\n// Separates the latest child from its previous sibling\n/* eslint-disable complexity */\nconst separate = (w, i, lows) => {\n  const lSib = w.children[i - 1];\n  const curSubtree = w.children[i];\n  let rContour = lSib;\n  let rSumMods = lSib.relX;\n  let lContour = curSubtree;\n  let lSumMods = curSubtree.relX;\n  let isFirst = true;\n  while (rContour && lContour) {\n    if (rContour.bottom > lows.lowY) lows = lows.next;\n    // How far to the left of the right side of rContour is the left side\n    // of lContour? First compute the center-to-center distance, then add\n    // the \"spacing\"\n    const dist =\n      (rSumMods + rContour.prelim) - (lSumMods + lContour.prelim) +\n      rContour.xSize / 2 + lContour.xSize / 2 +\n      rContour.spacing(lContour);\n    if (dist > 0 || (dist < 0 && isFirst)) {\n      lSumMods += dist;\n      // Move subtree by changing relX.\n      moveSubtree(curSubtree, dist);\n      distributeExtra(w, i, lows.index, dist);\n    }\n    isFirst = false;\n    // Advance highest node(s) and sum(s) of modifiers\n    const rightBottom = rContour.bottom;\n    const leftBottom = lContour.bottom;\n    if (rightBottom <= leftBottom) {\n      rContour = nextRContour(rContour);\n      if (rContour) rSumMods += rContour.relX;\n    }\n    if (rightBottom >= leftBottom) {\n      lContour = nextLContour(lContour);\n      if (lContour) lSumMods += lContour.relX;\n    }\n  }\n  // Set threads and update extreme nodes. In the first case, the\n  // current subtree is taller than the left siblings.\n  if (!rContour && lContour) setLThr(w, i, lContour, lSumMods);\n  // In the next case, the left siblings are taller than the current subtree\n  else if (rContour && !lContour) setRThr(w, i, rContour, rSumMods);\n};\n/* eslint-enable complexity */\n\n// Move subtree by changing relX.\nconst moveSubtree = (subtree, distance) => {\n  subtree.relX += distance;\n  subtree.lExtRelX += distance;\n  subtree.rExtRelX += distance;\n};\n\nconst distributeExtra = (w, curSubtreeI, leftSibI, dist) => {\n  const curSubtree = w.children[curSubtreeI];\n  const n = curSubtreeI - leftSibI;\n  // Are there intermediate children?\n  if (n > 1) {\n    const delta = dist / n;\n    w.children[leftSibI + 1].shift += delta;\n    curSubtree.shift -= delta;\n    curSubtree.change -= dist - delta;\n  }\n};\n\nconst nextLContour = w => {\n  return w.hasChildren ? w.firstChild : w.lThr;\n};\n\nconst nextRContour = w => {\n  return w.hasChildren ? w.lastChild : w.rThr;\n};\n\nconst setLThr = (w, i, lContour, lSumMods) => {\n  const firstChild = w.firstChild;\n  const lExt = firstChild.lExt;\n  const curSubtree = w.children[i];\n  lExt.lThr = lContour;\n  // Change relX so that the sum of modifier after following thread is correct.\n  const diff = lSumMods - lContour.relX - firstChild.lExtRelX;\n  lExt.relX += diff;\n  // Change preliminary x coordinate so that the node does not move.\n  lExt.prelim -= diff;\n  // Update extreme node and its sum of modifiers.\n  firstChild.lExt = curSubtree.lExt;\n  firstChild.lExtRelX = curSubtree.lExtRelX;\n};\n\n// Mirror image of setLThr.\nconst setRThr = (w, i, rContour, rSumMods) => {\n  const curSubtree = w.children[i];\n  const rExt = curSubtree.rExt;\n  const lSib = w.children[i - 1];\n  rExt.rThr = rContour;\n  const diff = rSumMods - rContour.relX - curSubtree.rExtRelX;\n  rExt.relX += diff;\n  rExt.prelim -= diff;\n  curSubtree.rExt = lSib.rExt;\n  curSubtree.rExtRelX = lSib.rExtRelX;\n};\n\n// Position root between children, taking into account their modifiers\nconst positionRoot = w => {\n  if (w.hasChildren) {\n    const k0 = w.firstChild;\n    const kf = w.lastChild;\n    const prelim = (k0.prelim + k0.relX - k0.xSize / 2 +\n      kf.relX + kf.prelim + kf.xSize / 2 ) / 2;\n    Object.assign(w, {\n      prelim,\n      lExt: k0.lExt, lExtRelX: k0.lExtRelX,\n      rExt: kf.rExt, rExtRelX: kf.rExtRelX,\n    });\n  }\n};\n\n// Make/maintain a linked list of the indexes of left siblings and their\n// lowest vertical coordinate.\nconst updateLows = (lowY, index, lastLows) => {\n  // Remove siblings that are hidden by the new subtree.\n  while (lastLows !== null && lowY >= lastLows.lowY)\n    lastLows = lastLows.next;\n  // Prepend the new subtree.\n  return {\n    lowY,\n    index,\n    next: lastLows,\n  };\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/flextree.js","/* eslint-disable */\nimport { drawBox } from \"./drawBox\";\nimport { drawLines, updateLines, updateLinesDashArrow } from \"./drawlines\";\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel, autoTranslate } from \"./utilities\";\nimport flextree from \"./flextree\";\nimport * as d3 from \"d3\";\n\nexport function handleClick(fnS, body, body_num, sourceid, color, clicked, direction) {\n  console.log(direction, \"direction\");\n  const transitionTime1 = 920;\n  const transitionTime2 = 720;\n  const transitionTime3 = 200;\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\n  // console.log(openFlag.attr(\"data-opened\"));\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\n    // openFlag.attr(\"data-opened\", \"false\");\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\n    d3.selectAll('.drawer').each(function(d,i){\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\n      const deleteLabel = String(body_num) + '-' + String(body);\n      const deleteParts = deleteLabel.split('-');\n      // delete edges\n      if (GID.split('_').length === 2){\n        let deleteFlag = false;\n        const node1 = GID.split('_')[0];\n        const node2 = GID.split('_')[1];\n        const node1Parts = node1.split('-');\n        const node2Parts = node2.split('-');\n        if (arraysAreEqual(node1Parts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          deleteFlag = true;\n        } else if (node1Parts.length > deleteParts.length) {\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            deleteFlag = true;\n          }\n        }\n        if (!deleteFlag) {\n          if (arraysAreEqual(node2Parts, deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          } else if (node2Parts.length > deleteParts.length) {\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n              d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            }\n          }\n        }\n      } else { // delete nodes\n        const GIDParts = GID.split('-');\n        if (arraysAreEqual(GIDParts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n        } else if (GIDParts.length > deleteParts.length) {\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          }\n        }\n      }\n      // console.log(GID);\n    })\n    return;\n  }\n  body_num = String(body_num);\n  const layout = getBoxLayout(fnS[body-1]);\n  const spaceX = 80;\n  const spaceY = 100;\n  const padding = 90;\n  const newLabel = String(body_num) + '-' + String(body); // new body_num\n  drawBox(layout, fnS, newLabel);\n  var hierarchies = {};\n  const childrens = [];\n  const gs = d3.selectAll('.drawer').each(function(d, i){\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length !== 2) {\n      const routes = nodeID.split(\"-\");\n      const currentID = routes[routes.length - 1];\n      if (currentID==='0') {\n          hierarchies.name = Number(currentID);\n          hierarchies.oName = nodeID;\n          hierarchies.path = routes;\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n      } else {\n          const temp = {}\n          temp.name = Number(currentID);\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n          temp.path = routes;\n          temp.oName = nodeID;\n          childrens.push(temp);\n      }\n    }\n  })\n  childrens.sort(function(a,b){\n    return a.path.length - b.path.length;\n  })\n  getChildren(hierarchies, childrens);\n  loopOverHierarchy(hierarchies, d => {\n    if (Array.isArray(d.size)) {\n      if (!d._size) d._size = d.size.slice();\n      d.size = d._size.slice().reverse();\n    }\n  });\n  console.log(hierarchies, \"hierarchies\");\n  const flexLayout = flextree({ spacing: spaceX });\n  const tree = flexLayout.hierarchy(hierarchies);\n  var treeData = flexLayout(tree);\n  treeData.each(d => {\n    const x = d.x;\n    d.x = d.y;\n    d.y = x;\n  });\n  var treeLayout = {};\n  treeData.each(d => {\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\n  });\n  const nodeNames = Object.keys(treeLayout);\n\n  console.log(treeLayout);\n  let differenceX = treeLayout[newLabel][0] - treeLayout[body_num][0];\n  let differenceY = treeLayout[newLabel][1] - treeLayout[newLabel][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\n  \n  const locationTransform = [differenceX, differenceY];\n  drawLines(sourceid, \"frame\" + newLabel, locationTransform, body_num, newLabel, color);\n  // console.log(locationTransform);\n  d3.selectAll('.drawer').each(function(d, i){\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length !==2) {\n      if (nodeID === newLabel) {\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .attr(\"opacity\", 0);\n        d3.select(this)\n          .transition()\n          .duration(transitionTime1)\n          .style(\"opacity\", 1);\n      } else {\n        d3.select(this)\n          .transition()\n          .duration(transitionTime2)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    }\n  })\n  d3.selectAll('.drawer').each(function(d, i){\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length === 2){\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabel){\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabel){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        \n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .style(\"opacity\", 0.38);\n      } else {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabel) {\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabel){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          .transition()\n          .duration(720)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    }\n  })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/click.js","/* eslint-disable */\nimport { drawBox } from \"./drawBox\";\nimport { drawLines, updateLines, drawLinesDashArrow, updateLinesDashArrow } from \"./drawlines\";\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel, autoTranslate } from \"./utilities\";\nimport * as flextree from \"d3-flextree\"\nimport * as d3 from \"d3\";\n\nexport function handleClickCond(fnS, cond, body_if, body_else, body_num, sourceid, color, clicked, direction) {\n  const transitionTime1 = 920;\n  const transitionTime2 = 720;\n  const transitionTime3 = 200;\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\n    // openFlag.attr(\"data-opened\", \"false\");\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\n    d3.selectAll('.drawer').each(function(d,i){\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\n      const deleteLabel = String(body_num) + '-' + String(cond);\n      const deleteParts = deleteLabel.split('-');\n      // delete edges\n      if (GID.split('_').length === 2){\n        let deleteFlag = false;\n        const node1 = GID.split('_')[0];\n        const node2 = GID.split('_')[1];\n        const node1Parts = node1.split('-');\n        const node2Parts = node2.split('-');\n        if (arraysAreEqual(node1Parts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          deleteFlag = true;\n        } else if (node1Parts.length > deleteParts.length) {\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            deleteFlag = true;\n          }\n        }\n        if (!deleteFlag) {\n          if (arraysAreEqual(node2Parts, deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          } else if (node2Parts.length > deleteParts.length) {\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n              d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            }\n          }\n        }\n      } else { // delete nodes\n        const GIDParts = GID.split('-');\n        if (arraysAreEqual(GIDParts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n        } else if (GIDParts.length > deleteParts.length) {\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          }\n        }\n      }\n      // console.log(GID);\n    })\n    return;\n  }\n  body_num = String(body_num);\n  let layoutElse;\n  const layoutCond = getBoxLayout(fnS[cond-1]);\n  const layoutIf = getBoxLayout(fnS[body_if-1]);\n  if (body_else!==undefined) {\n    layoutElse = getBoxLayout(fnS[body_else-1]);\n  }\n  const spaceX = 80;\n  const spaceY = 100;\n  const padding = 90;\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\n  const newLabelIf = String(newLabelCond) + '-' + String(body_if); // new body_num for if\n  const newLabelElse = String(newLabelCond) + '-' + String(body_else); // new body_num for else\n  drawBox(layoutCond, fnS, newLabelCond);\n  drawBox(layoutIf, fnS, newLabelIf);\n  if (body_else!==undefined) {\n    drawBox(layoutElse, fnS, newLabelElse);\n  }\n  var hierarchies = {};\n  const childrens = [];\n  const gs = d3.selectAll('.drawer').each(function(d, i){\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length !== 2) {\n      const routes = nodeID.split(\"-\");\n      const currentID = routes[routes.length - 1];\n      if (currentID==='0') {\n          hierarchies.name = Number(currentID);\n          hierarchies.oName = nodeID;\n          hierarchies.path = routes;\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n      } else {\n          const temp = {}\n          temp.name = Number(currentID);\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n          temp.path = routes;\n          temp.oName = nodeID;\n          childrens.push(temp);\n      }\n    }\n  })\n  childrens.sort(function(a,b){\n    return a.path.length - b.path.length;\n  })\n  getChildren(hierarchies, childrens);\n  loopOverHierarchy(hierarchies, d => {\n    if (Array.isArray(d.size)) {\n      if (!d._size) d._size = d.size.slice();\n      d.size = d._size.slice().reverse();\n    }\n  });\n  const flexLayout = flextree.flextree({ spacing: spaceX });\n  console.log(hierarchies);\n  const tree = flexLayout.hierarchy(hierarchies);\n  var treeData = flexLayout(tree);\n  treeData.each(d => {\n    const x = d.x;\n    d.x = d.y;\n    d.y = x;\n  });\n  var treeLayout = {};\n  treeData.each(d => {\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\n  });\n  const nodeNames = Object.keys(treeLayout);\n\n  console.log(treeLayout);\n  console.log()\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\n  let differenceY = treeLayout[newLabelCond][1] - treeLayout[newLabelCond][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\n  \n  const locationTransform = [differenceX, differenceY];\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color);\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelIf, \"black\", \"TRUE\");\n  if (layoutElse!==undefined) {\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelElse, \"black\", \"FALSE\");\n  }\n  \n  // console.log(locationTransform);\n  d3.selectAll('.drawer').each(function(d, i){\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length === 2){\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabelCond){\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            let a03 = d3.select(this).attr('locationTransform').split(',');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabelCond){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            let a03 = d3.select(this).attr('locationTransform').split(',');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        \n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .style(\"opacity\", 0.38);\n      } else {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabelCond){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          // .transition()\n          // .duration(720)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    } else {\n      if (nodeID === newLabelCond || nodeID === newLabelElse || nodeID === newLabelIf) {\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .attr(\"opacity\", 0);\n        d3.select(this)\n          .transition()\n          .duration(transitionTime1)\n          .style(\"opacity\", 1);\n      } else {\n        d3.select(this)\n          .transition()\n          .duration(transitionTime2)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    }\n  }\n  )\n  // autoTranslate();\n}\n\nexport function handleClickLoop(fnS, cond, pre, body, post, body_num, sourceid, color, clicked, direction) {\n  const transitionTime1 = 920;\n  const transitionTime2 = 720;\n  const transitionTime3 = 200;\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\n    // openFlag.attr(\"data-opened\", \"false\");\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\n    d3.selectAll('.drawer').each(function(d,i){\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\n      const deleteLabel = String(body_num) + '-' + String(cond);\n      const deleteParts = deleteLabel.split('-');\n      // delete edges\n      if (GID.split('_').length === 2){\n        let deleteFlag = false;\n        const node1 = GID.split('_')[0];\n        const node2 = GID.split('_')[1];\n        const node1Parts = node1.split('-');\n        const node2Parts = node2.split('-');\n        if (arraysAreEqual(node1Parts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          deleteFlag = true;\n        } else if (node1Parts.length > deleteParts.length) {\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            deleteFlag = true;\n          }\n        }\n        if (!deleteFlag) {\n          if (arraysAreEqual(node2Parts, deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          } else if (node2Parts.length > deleteParts.length) {\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n              d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n            }\n          }\n        }\n      } else { // delete nodes\n        const GIDParts = GID.split('-');\n        if (arraysAreEqual(GIDParts, deleteParts)) {\n          d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n        } else if (GIDParts.length > deleteParts.length) {\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\n            d3.select(this)\n            .transition()        // 开始一个过渡\n            .duration(transitionTime3)      // 设置过渡的持续时间\n            .style('opacity', 0) // 逐渐变透明\n            .end()\n            .then(() => {\n              d3.select(this).remove();\n            });\n          }\n        }\n      }\n      // console.log(GID);\n    })\n    return;\n  }\n  body_num = String(body_num);\n  let layoutCond;\n  let layoutPre;\n  let layoutBody;\n  let layoutPost;\n  // const layoutPost = getBoxLayout(fnS[post-1]);\n  const spaceX = 80;\n  const spaceY = 100;\n  const padding = 90;\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\n  const newLabelPre = String(newLabelCond) + '-' + String(pre); // new body_num for pre\n  const newLabelBody = String(newLabelCond) + '-' + String(body); // new body_num for body\n  const newLabelPost = String(newLabelCond) + '-' + String(post); // new body_num for post\n  if (cond!==undefined) {\n    layoutCond = getBoxLayout(fnS[cond-1]);\n    drawBox(layoutCond, fnS, newLabelCond);\n  }\n  if (pre!==undefined) {\n    layoutPre = getBoxLayout(fnS[pre-1]);\n    drawBox(layoutPre, fnS, newLabelPre);\n  }\n  if (body!==undefined) {\n    layoutBody = getBoxLayout(fnS[body-1]);\n    drawBox(layoutBody, fnS, newLabelBody);\n  }\n  if (post!==undefined) {\n    layoutPost = getBoxLayout(fnS[post-1]);\n    drawBox(layoutPost, fnS, newLabelPost);\n  }\n  \n  \n  // drawBox(layoutPost, fnS, newLabelPost);\n  var hierarchies = {};\n  const childrens = [];\n  const gs = d3.selectAll('.drawer').each(function(d, i){\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length !== 2) {\n      const routes = nodeID.split(\"-\");\n      const currentID = routes[routes.length - 1];\n      if (currentID==='0') {\n          hierarchies.name = Number(currentID);\n          hierarchies.oName = nodeID;\n          hierarchies.path = routes;\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n      } else {\n          const temp = {}\n          temp.name = Number(currentID);\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\n          temp.path = routes;\n          temp.oName = nodeID;\n          childrens.push(temp);\n      }\n    }\n  })\n  childrens.sort(function(a,b){\n    return a.path.length - b.path.length;\n  })\n  getChildren(hierarchies, childrens);\n  loopOverHierarchy(hierarchies, d => {\n    if (Array.isArray(d.size)) {\n      if (!d._size) d._size = d.size.slice();\n      d.size = d._size.slice().reverse();\n    }\n  });\n  const flexLayout = flextree.flextree({ spacing: spaceX });\n  console.log(hierarchies);\n  const tree = flexLayout.hierarchy(hierarchies);\n  var treeData = flexLayout(tree);\n  treeData.each(d => {\n    const x = d.x;\n    d.x = d.y;\n    d.y = x;\n  });\n  var treeLayout = {};\n  treeData.each(d => {\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\n  });\n  const nodeNames = Object.keys(treeLayout);\n\n  console.log(treeLayout);\n  console.log()\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\n  let differenceY = treeLayout[newLabelCond][1] - treeLayout[newLabelCond][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\n  \n  const locationTransform = [differenceX, differenceY];\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color);\n  if (pre!==undefined) {\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPre, \"black\", \"PRE\");\n  }\n  if (body!==undefined) {\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelBody, \"black\", \"WHILE TRUE\");\n  }\n  if (post!==undefined) {\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPost, \"black\", \"POST\");\n  }\n\n  // console.log(locationTransform);\n  d3.selectAll('.drawer').each(function(d, i){\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\n    if (nodeID.split('_').length === 2){\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabelCond){\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            let a03 = d3.select(this).attr('locationTransform').split(',');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabelCond){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const a01 = d3.select(this).attr('sourceid');\n            const a02 = d3.select(this).attr('targetid');\n            let a03 = d3.select(this).attr('locationTransform').split(',');\n            const a04 = d3.select(this).attr('body_num_source');\n            const a05 = d3.select(this).attr('body_num_target');\n            const a06 = d3.select(this).attr('color');\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\n          }\n        }\n        \n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .style(\"opacity\", 0.38);\n      } else {\n        const lineID = nodeID;\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\n          const translatePart = sourceTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        if (targetTransString!==null && targetGID != newLabelCond){\n          const translatePart = targetTransString.slice(10, -1);\n          const translateValues = translatePart.split(\",\");\n          const transformArray = translateValues.map(Number);\n          let newTransArray = [];\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\n            const line_label = d3.select(this).select('text').text();\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\n          }\n        }\n        nodeID = nodeID.replace(\"line\", \"\");\n        nodeID = nodeID.split('_')[0];\n        d3.select(this)\n          // .transition()\n          // .duration(720)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    } else {\n      if (nodeID === newLabelCond || nodeID === newLabelPre || nodeID === newLabelBody || nodeID === newLabelPost) {\n        d3.select(this)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\n          .attr(\"opacity\", 0);\n        d3.select(this)\n          .transition()\n          .duration(transitionTime1)\n          .style(\"opacity\", 1);\n      } else {\n        d3.select(this)\n          .transition()\n          .duration(transitionTime2)\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\n      }\n    }\n  }\n  )\n  // autoTranslate();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/clickCond.js","/* eslint-disable */\nimport * as d3 from \"d3\";\nimport { handleClick } from \"./click\";\nimport { handleClickCond, handleClickLoop } from \"./clickCond\";\nimport { computeBoundingRectangle, getOuterBox } from \"./utilities\"\n\nexport function drawBox(layout, fnS, body_num) {\n    // 创建SVG元素\n    // debugger\n    const svg = d3.select(\"#mainsvg\").select(\"#sumGroup\");\n    const g = svg.append(\"g\").attr('id', \"boxid\" + String(body_num)).attr(\"class\", \"drawer\");\n    const ranksep = 37;\n    const padding = 22.5; // 设置padding的大小\n    // 绘制节点\n    const nodes = layout.nodes;\n    let opoNodeFlag = false;\n    let opiNodeFlag = false;\n    const minValue = Math.min(...Object.values(layout.nodes).map(obj => obj.y));\n    const maxValue = Math.max(...Object.values(layout.nodes).map(obj => obj.y));\n    for (const nodeId in nodes) {\n      const node = nodes[nodeId];\n      const [type, index] = nodeId.split(\"-\");\n      const isOpoNode = (type === 'opo');\n      const isOpiNode = (type === 'opi');\n      if (isOpiNode) {\n        if (node.y === minValue){\n          // node.y = minValue - 50 - ranksep;\n          opiNodeFlag = true;\n        }\n      }\n\n      if (isOpoNode) {\n        if (node.y === maxValue){\n          // node.y = maxValue + 50 + ranksep;\n          opoNodeFlag = true;\n        }\n      }\n    }\n    console.log(nodes);\n    for (const nodeId in nodes) {\n      // const node = nodes[nodeId];\n      const [type, index] = nodeId.split(\"-\");\n      const isOpoNode = (type === 'opo');\n      const isOpiNode = (type === 'opi');\n      \n      if (isOpiNode) {\n        // debugger\n        if (opiNodeFlag){\n          nodes[nodeId].y = minValue;\n        } else {\n          nodes[nodeId].y = minValue - 50 - ranksep;\n        }\n      }\n      if (isOpoNode) {\n        if (opoNodeFlag){\n          nodes[nodeId].y = maxValue;\n        } else {\n          nodes[nodeId].y = maxValue + 50 + ranksep;\n        }\n      }\n    }\n    \n\n    // 获取 x 和 y 的最小值\n    let minXofAllNodes = Infinity;\n    let minYofAllNodes = Infinity;\n    for (const key in nodes) {\n      const [type, index] = key.split(\"-\");\n      const isAuxNode = (type === \"aux\");\n      // if (!isAuxNode) {\n        if (nodes[key].x < minXofAllNodes) {\n          minXofAllNodes = nodes[key].x;\n        }\n        if (nodes[key].y < minYofAllNodes) {\n          minYofAllNodes = nodes[key].y;\n        }\n      // }\n    }\n\n    // 更新每一个子对象的 x 和 y 属性\n    for (const key in nodes) {\n      nodes[key].x = nodes[key].x - minXofAllNodes;\n      nodes[key].y -= minYofAllNodes;\n    }\n\n    const bbox = computeBoundingRectangle(nodes);\n    const realOuterBox = getOuterBox(bbox, padding, ranksep, nodes);\n    console.log(bbox,\"bbox\")\n    for (const nodeId in nodes) {\n      const node = nodes[nodeId];\n      const [type, index] = nodeId.split(\"-\");\n      const isBfNode = (type === \"bf\");\n      const isPofNode = (type === \"pof\");\n      const isPifNode = (type === \"pif\");\n      const isAuxNode = (type === \"aux\");\n      const isOpoNode = (type === 'opo');\n      const isOpiNode = (type === 'opi');\n      const isBcNode = (type === \"bc\");\n      const isPocNode = (type === \"poc\");\n      const isPicNode = (type === \"pic\");\n      const isBlNode = (type === \"bl\");\n      const isPolNode = (type === \"pol\");\n      const isPilNode = (type === \"pil\");\n  \n      if (isAuxNode) {\n        continue; // 不绘制aux前缀的节点\n      }\n      const bboxO = bbox;\n      if (isBfNode) {\n        if (node.fullBox){\n            if (node.type == \"FUNCTION\") {\n              drawBFs_full(node, nodeId, g, \"green\", ranksep, fnS, body_num, realOuterBox);\n            } else if (node.type == \"EXPRESSION\") {\n              drawBFs_full(node, nodeId, g, \"purple\", ranksep, fnS, body_num, realOuterBox);\n            } else if (node.type == \"LITERAL\") {\n              drawLiteral_full(node, nodeId, g, \"red\", ranksep);\n            } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\n              drawLPrimitive_full(node, nodeId, g, \"red\", ranksep);\n            }\n        } else {\n          if (node.type == \"FUNCTION\") {\n            drawBFs_nfull(node, nodeId, g, \"green\", ranksep, fnS, body_num, realOuterBox);\n          } else if (node.type == \"EXPRESSION\") {\n            drawBFs_nfull(node, nodeId, g, \"purple\", ranksep, fnS, body_num, realOuterBox);\n          } else if (node.type == \"LITERAL\") {\n            drawLiteral_nfull(node, nodeId, g, \"red\", ranksep);\n          } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\n            drawLPrimitive_nfull(node, nodeId, g, \"red\", ranksep);\n          }\n        }\n      } else if (isBcNode) {\n        if (node.fullBox){\n          drawBCs_full(node, nodeId, g, \"orange\", ranksep, fnS, body_num, realOuterBox);\n        } else {\n          drawBCs_nfull(node, nodeId, g, \"orange\", ranksep, fnS, body_num, realOuterBox);\n        }\n      } else if (isBlNode) {\n        if (node.fullBox){\n          drawBLs_full(node, nodeId, g, \"blue\", ranksep, fnS, body_num, realOuterBox);\n        } else {\n          drawBLs_nfull(node, nodeId, g, \"blue\", ranksep, fnS, body_num, realOuterBox);\n        }\n      }\n      else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode || isPilNode || isPolNode) {\n        drawPorts(node, nodeId, g, \"black\");\n      }\n    }\n    // 绘制箭头\n    g.append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", \"arrowhead\")\n      .attr(\"markerWidth\", 10)\n      .attr(\"markerHeight\", 7)\n      .attr(\"refX\", 10)\n      .attr(\"refY\", 3.5)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .attr(\"d\", \"M0,0 L10,3.5 L0,7 Z\")\n      .style(\"fill\", \"gray\");\n  \n    // 绘制边\n    const edges = layout.edges;\n    edges.forEach((edge) => {\n      const sourceNode = nodes[edge.source];\n      const targetNode = nodes[edge.target];\n      const sourceType = edge.source.split(\"-\")[0];\n      const targetType = edge.target.split(\"-\")[0];\n      const isAuxEdge = (sourceType === \"aux\" || targetType === \"aux\");\n\n      if (!isAuxEdge) {\n        g.append(\"line\")\n          .attr(\"x1\", sourceNode.x)\n          .attr(\"y1\", sourceNode.y - sourceNode.height / 2)\n          .attr(\"x2\", targetNode.x)\n          .attr(\"y2\", targetNode.y + targetNode.height / 2)\n          .style(\"stroke\", \"gray\")\n          .style(\"stroke-width\", 2.2)\n          .attr(\"marker-end\", \"url(#arrowhead)\");\n      }\n    });\n\n    // 调整SVG大小\n\n    const width = bbox.width + padding * 4;\n    const height = bbox.height + padding * 4;\n\n    if ('opo-0' in nodes && 'opi-0' in nodes){\n      if (layout.meta.type === \"MODULE\"){\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\n      } else if (layout.meta.type === \"EXPRESSION\") {\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\n      } else if (layout.meta.type === \"FUNCTION\") {\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"green\", body_num);\n      } else if (layout.meta.type === \"PREDICATE\") {\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\n      }\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\n      if (layout.meta.type === \"MODULE\"){\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\n      } else if (layout.meta.type === \"EXPRESSION\") {\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\n      } else if (layout.meta.type === \"FUNCTION\") {\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"green\", body_num);\n      } else if (layout.meta.type === \"PREDICATE\") {\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\n      }\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\n      if (layout.meta.type === \"MODULE\"){\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\n      } else if (layout.meta.type === \"EXPRESSION\") {\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\n      } else if (layout.meta.type === \"FUNCTION\") {\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"green\", body_num);\n      } else if (layout.meta.type === \"PREDICATE\") {\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\n      }\n    } else {\n      if (layout.meta.type === \"MODULE\"){\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\n      } else if (layout.meta.type === \"EXPRESSION\") {\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\n      } else if (layout.meta.type === \"FUNCTION\") {\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"green\", body_num);\n      } else if (layout.meta.type === \"PREDICATE\") {\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\n      }\n    }\n    g.attr(\"width\", g.node().getBBox().width)\n      .attr(\"height\", g.node().getBBox().height)\n    if (body_num === 0){\n      g.attr(\"transform\", `translate(${padding * 4},${padding * 30 - g.node().getBBox().height / 2 * 1})`);\n    }\n  }\n\nfunction drawBFs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\n  let clicked = false;\n  let node_body = null;\n  if (node.body !== undefined) {\n    node_body = node.body;\n  }\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  console.log(outerRight, \"outerRight\");\n  console.log(outerBottom, \"outerBottom\");\n  console.log(innerBottom, \"innerBottom\");\n  console.log(innerRight, \"innerRight\");\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height - ranksep * 2)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body)\n  .attr(\"data-opened\", \"neo\")\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"stroke\", color)\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.body !== undefined) {\n    selection.on(\"click\", function(){\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawBFs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox = \"right\") {\n  let node_body = null;\n  if (node.body !== undefined) {\n    node_body = node.body;\n  }\n  let clicked = false;\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body)\n  .attr(\"data-opened\", \"neo\")\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.body !== undefined) {\n    selection.on(\"click\", function(){\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawBCs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\n  let clicked = false;\n  let node_body_cond = null;\n  if (node.condition !== undefined) {\n    node_body_cond = node.condition;\n  }\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height - ranksep * 2)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body_cond)\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"stroke\", color)\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.condition !== undefined) {\n    selection.on(\"click\", function(){\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawBCs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\n  let node_body = null;\n  if (node.body !== undefined) {\n    node_body = node.body;\n  }\n  let clicked = false;\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body)\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.body !== undefined) {\n    selection.on(\"click\", function(){\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawBLs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\n  let clicked = false;\n  let node_body_cond = null;\n  if (node.condition !== undefined) {\n    node_body_cond = node.condition;\n  }\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height - ranksep * 2)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body_cond)\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"stroke\", color)\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.condition !== undefined) {\n    selection.on(\"click\", function(){\n      handleClickLoop(fnS, node.condition, node.pre, node.body, node.post, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawBLs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\n  let node_body = null;\n  if (node.body !== undefined) {\n    node_body = node.body;\n  }\n  let clicked = false;\n  const outerRight = bbox.x + bbox.width;\n  const outerBottom = bbox.y + bbox.height;\n  const innerRight = node.x + node.width / 2;\n  const innerBottom = node.y + node.height / 2 - ranksep;\n  let direction = \"right\";\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\n    direction = \"down\";\n  }\n  const selection = g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"data-body\", node_body)\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\n  .style(\"cursor\", \"pointer\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.body !== undefined) {\n    selection.on(\"click\", function(){\n      handleClickLoop(fnS, node.body, body_num, nodeId, color, clicked, direction);\n      clicked = !clicked;\n    });\n  }\n}\n\nfunction drawLiteral_full(node, nodeId, g, color, ranksep) {\n  g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height - ranksep * 2)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 2);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.value !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"30px\")\n    .text(node.value.value);\n  }\n}\n\nfunction drawLPrimitive_full(node, nodeId, g, color, ranksep) {\n  g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height - ranksep * 2)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"20px\")\n    .text(node.label);\n  }\n  if (node.value !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"30px\")\n    .text(node.value.value);\n  }\n}\n\nfunction drawLPrimitive_nfull(node, nodeId, g, color, ranksep) {\n  g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2)\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\n  .attr(\"width\", node.width)\n  .attr(\"height\", node.height)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.value !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"30px\")\n    .text(node.value.value);\n  }\n}\n\nfunction drawLiteral_nfull(node, nodeId, g, color, ranksep) {\n  g.append(\"rect\")\n  .attr(\"id\", nodeId)\n  .attr(\"x\", node.x - node.width / 2 + ranksep / 2)\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\n  .attr(\"width\", node.width - ranksep)\n  .attr(\"height\", node.height)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 2);\n  if (node.label !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"12px\")\n    .text(node.label);\n  }\n  if (node.value !== undefined){\n    g.append(\"text\") // 添加节点的label\n    .attr(\"x\", node.x)\n    .attr(\"y\", node.y - ranksep * 1.2)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"dominant-baseline\", \"middle\")\n    .style(\"font-size\", \"30px\")\n    .text(node.value.value);\n  }\n}\n\nfunction drawPorts(node, nodeId, g, color) {\n  g.append(\"rect\")\n    .attr(\"id\", nodeId)\n    .attr(\"x\", node.x - node.width / 2)\n    .attr(\"y\", node.y - node.height / 2)\n    .attr(\"width\", node.width)\n    .attr(\"height\", node.height)\n    .style(\"fill\", \"white\")\n    .style(\"stroke\", color)\n    .style(\"stroke-width\", 2);\n    if (node.label !== undefined){\n      g.append(\"text\") // 添加节点的label\n      .attr(\"x\", node.x)\n      .attr(\"y\", node.y)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n      .style(\"font-size\", \"27px\")\n      .text(node.label);\n    }\n}\n\nfunction drawOuterBoxFull(g, bbox, width, height, padding, ranksep, color, body_num) {\n  // 绘制外框\n  g.append(\"rect\", \":first-child\")\n  .attr(\"id\", \"frame\" + body_num)\n  .attr(\"x\", bbox.x - padding)\n  .attr(\"y\", bbox.y - padding + ranksep)\n  .attr(\"rx\", 15)\n  .attr(\"ry\", 15)\n  .attr(\"width\", width - padding * 2)\n  .attr(\"height\", height - padding * 2 - ranksep * 2)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", color)\n  .style(\"stroke-width\", 5)\n  .lower();\n}\n\nfunction drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, color, body_num) {\n  // 绘制外框\n  g.append(\"rect\", \":first-child\")\n    .attr(\"id\", \"frame\" + body_num)\n    .attr(\"x\", bbox.x - padding)\n    .attr(\"y\", bbox.y - padding - ranksep / 10)\n    .attr(\"rx\", 15)\n    .attr(\"ry\", 15)\n    .attr(\"width\", width - padding * 2)\n    .attr(\"height\", height - padding * 2 - ranksep)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", color)\n    .style(\"stroke-width\", 5)\n    .lower();\n}\n\nfunction drawOuterBoxTop(g, bbox, width, height, padding, ranksep, color, body_num) {\n  // 绘制外框\n  g.append(\"rect\", \":first-child\")\n    .attr(\"id\", \"frame\" + body_num)\n    .attr(\"x\", bbox.x - padding)\n    .attr(\"y\", bbox.y - padding + ranksep * 2)\n    .attr(\"rx\", 15)\n    .attr(\"ry\", 15)\n    .attr(\"width\", width - padding * 2)\n    .attr(\"height\", height - padding * 2 - ranksep)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", color)\n    .style(\"stroke-width\", 5)\n    .lower();\n}\n\nfunction drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, color, body_num) {\n  // 绘制外框\n  g.append(\"rect\", \":first-child\")\n    .attr(\"id\", \"frame\" + body_num)\n    .attr(\"x\", bbox.x - padding)\n    .attr(\"y\", bbox.y - padding)\n    .attr(\"rx\", 15)\n    .attr(\"ry\", 15)\n    .attr(\"width\", width - padding * 2)\n    .attr(\"height\", height - padding * 2)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", color)\n    .style(\"stroke-width\", 5)\n    .lower();\n}\n  \n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawBox.js","<template>\n  <div class=\"container\">\n  <div class=\"d-flex justify-content-start\">\n    <!-- <button class=\"btn btn-primary\" @click=\"fetchData\">upload</button> -->\n    <div class=\"button-spacing\"></div> <!-- 添加间距 -->\n    <select v-model=\"selectedOption\" @change=\"fetchData\" class=\"my-select\" placeholder=\"Select\">\n      <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">\n        {{ option.text }}\n      </option>\n    </select>\n    <div><p> Or </p></div>\n    <input type=\"text\" v-model=\"url\" class=\"url-input\" placeholder=\"Input URL of JSON file here.\"/>\n    <button class=\"btn btn-primary\" @click=\"submitUrl\">Submit</button>\n    <button class=\"btn btn-primary download-button\" @click=\"downloadSVG\" >downloadSVG</button>\n  </div>\n    <div class=\"row\">\n      <div id=\"svg-container\" :style=\"blockStyle\">\n        <div class=\"version-text\">\n          Current Supported Skema Version:\n          <span class=\"highlight\">0.1.6</span>\n        </div>\n        <div class=\"version-text\">\n          Current File Version:\n          <span class=\"highlight\">{{ skemaVersion }}</span>\n        </div>\n        <svg id=\"mainsvg\" width=\"1200\" height=\"1000\" overflow=\"visible\">\n          <g id=\"sumGroup\"></g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport { getBoxLayout } from '../utils/layout';\nimport { drawBox } from '../utils/drawBox';\n\nexport default {\n  data() {\n    return {\n      skemaVersion: '',\n      url: '',\n      blockStyle: {\n        backgroundColor: 'rgba(255, 255, 120, 0)',\n        height: '90vh',\n        width: '100%',\n      },\n      selectedOption: null,\n      options: [\n        { text: 'Clay1', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/get_beta--Gromet-FN-auto2.json' },\n        { text: 'core_dynamics', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/core_dynamics_pack2.json' },\n        { text: 'while1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/while1/FN_0.1.6/while1--Gromet-FN-auto.json' },\n        { text: 'cond1', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/cond1--Gromet-FN-auto.json' },\n        { text: 'fun1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun1/FN_0.1.6/fun1--Gromet-FN-auto.json' },\n        { text: 'fun4', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun4/FN_0.1.6/fun4--Gromet-FN-auto.json' },\n        { text: 'exp1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp1/FN_0.1.6/exp1--Gromet-FN-auto.json' },\n        { text: 'exp2', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp2/FN_0.1.6/exp2--Gromet-FN-auto.json' },\n        { text: 'exp3', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp3/FN_0.1.6/exp3--Gromet-FN-auto.json' },\n        { text: 'fun_default1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun_default1/FN_0.1.6/fun_default1--Gromet-FN-auto.json' },\n        { text: 'assign_operator1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/assign_operator1/FN_0.1.6/assign_operator1--Gromet-FN-auto.json' },\n      ],\n    };\n  },\n  methods: {\n    fetchData() {\n      d3.selectAll('g').remove();\n      axios.get(this.selectedOption)\n        .then((response) => {\n          function handleZoom(e) {\n            d3.select('svg g')\n              .attr('transform', e.transform);\n          }\n          const svg = d3.select('svg');\n          svg.append('g').attr('id', 'sumGroup');\n          const zoom = d3.zoom()\n            .on('zoom', handleZoom);\n          svg.call(zoom);\n          const jsonData = response.data;\n          this.skemaVersion = jsonData.schema_version;\n          const graphData = jsonData.modules[0];\n          const fn0 = graphData.fn;\n          const fnS = graphData.fn_array;\n          const layout = getBoxLayout(fn0);\n          drawBox(layout, fnS, 0);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    downloadSVG() {\n      // 获取 SVG 元素\n      const svgElement = document.getElementById('mainsvg');\n      // 获取 SVG 的内容\n      const svgData = new XMLSerializer().serializeToString(svgElement);\n      // 创建一个 Blob 对象\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n      // 创建一个指向 Blob 的 URL\n      const svgUrl = URL.createObjectURL(svgBlob);\n      // 创建一个链接并通过该链接下载 SVG 文件\n      const downloadLink = document.createElement('a');\n      downloadLink.href = svgUrl;\n      downloadLink.download = 'mainsvg.svg';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    },\n    submitUrl() {\n      this.excuteFunction(this.url);\n    },\n    excuteFunction(url) {\n      d3.selectAll('g').remove();\n      axios.get(url)\n        .then((response) => {\n          const jsonData = response.data;\n          this.skemaVersion = jsonData.schema_version;\n          const graphData = jsonData.modules[0];\n          const fn0 = graphData.fn;\n          const fnS = graphData.fn_array;\n          const layout = getBoxLayout(fn0);\n          drawBox(layout, fnS, 0);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.svg-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.my-select {\n    /* 下拉框的样式 */\n    padding: 10px;\n    font-size: 16px;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    margin-right: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\n}\n\n.url-input {\n    /* 输入框的样式 */\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid #ccc;\n    width: 400px;\n    overflow-x: auto;\n    margin-left: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\n}\n\np {\n  margin-bottom: -10px;\n  font-size: 27px;\n  font-family: Arial, sans-serif;\n}\n\n.download-button {\n  margin-left: 300px;\n}\n\n.version-text {\n  font-size: 27px;\n  font-family: Arial, sans-serif;\n}\n\n.highlight {\n  color: red;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Moviz.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"button-spacing\"}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],staticClass:\"my-select\",attrs:{\"placeholder\":\"Select\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.fetchData]}},_vm._l((_vm.options),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.value}},[_vm._v(\"\\n      \"+_vm._s(option.text)+\"\\n    \")])}),0),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.url),expression:\"url\"}],staticClass:\"url-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Input URL of JSON file here.\"},domProps:{\"value\":(_vm.url)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.url=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.submitUrl}},[_vm._v(\"Submit\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary download-button\",on:{\"click\":_vm.downloadSVG}},[_vm._v(\"downloadSVG\")])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{style:(_vm.blockStyle),attrs:{\"id\":\"svg-container\"}},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current File Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(_vm._s(_vm.skemaVersion))])]),_vm._v(\" \"),_c('svg',{attrs:{\"id\":\"mainsvg\",\"width\":\"1200\",\"height\":\"1000\",\"overflow\":\"visible\"}},[_c('g',{attrs:{\"id\":\"sumGroup\"}})])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\" Or \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current Supported Skema Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(\"0.1.6\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-18184850\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Moviz.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-18184850\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Moviz.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-18184850\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Moviz.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-18184850\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Moviz.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport Router from 'vue-router';\nimport Moviz from '@/components/Moviz';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'Moviz',\n      component: Moviz,\n    },\n  ],\n  mode: 'hash',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Vue from 'vue';\nimport App from './App';\nimport router from './router';\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>',\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"d3-flextree\",\"version\":\"2.1.2\",\"main\":\"build/d3-flextree.js\",\"module\":\"index\",\"jsnext:main\":\"index\",\"author\":{\"name\":\"Chris Maloney\",\"url\":\"http://chrismaloney.org\"},\"description\":\"Flexible tree layout algorithm that allows for variable node sizes.\",\"keywords\":[\"d3\",\"d3-module\",\"layout\",\"tree\",\"hierarchy\",\"d3-hierarchy\",\"plugin\",\"d3-plugin\",\"infovis\",\"visualization\",\"2d\"],\"homepage\":\"https://github.com/klortho/d3-flextree\",\"license\":\"WTFPL\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/klortho/d3-flextree.git\"},\"scripts\":{\"clean\":\"rm -rf build demo test\",\"build:demo\":\"rollup -c --environment BUILD:demo\",\"build:dev\":\"rollup -c --environment BUILD:dev\",\"build:prod\":\"rollup -c --environment BUILD:prod\",\"build:test\":\"rollup -c --environment BUILD:test\",\"build\":\"rollup -c\",\"lint\":\"eslint index.js src\",\"test:main\":\"node test/bundle.js\",\"test:browser\":\"node test/browser-tests.js\",\"test\":\"npm-run-all test:*\",\"prepare\":\"npm-run-all clean build lint test\"},\"dependencies\":{\"d3-hierarchy\":\"^1.1.5\"},\"devDependencies\":{\"babel-plugin-external-helpers\":\"^6.22.0\",\"babel-preset-es2015-rollup\":\"^3.0.0\",\"d3\":\"^4.13.0\",\"d3-selection-multi\":\"^1.0.1\",\"eslint\":\"^4.19.1\",\"jsdom\":\"^11.6.2\",\"npm-run-all\":\"^4.1.2\",\"rollup\":\"^0.55.3\",\"rollup-plugin-babel\":\"^2.7.1\",\"rollup-plugin-commonjs\":\"^8.0.2\",\"rollup-plugin-copy\":\"^0.2.3\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.2\",\"rollup-plugin-uglify\":\"^3.0.0\",\"uglify-es\":\"^3.3.9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-flextree/package.json\n// module id = p+Xa\n// module chunks = 1"],"sourceRoot":""}