{"version":3,"sources":["webpack:///./src/App.vue?0e87","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/utils/layout.js","webpack:///./src/utils/drawlines.js","webpack:///./src/utils/utilities.js","webpack:///./src/utils/click.js","webpack:///./src/utils/drawBox.js","webpack:///./src/utils/clickCond.js","webpack:///src/components/Moviz.vue","webpack:///./src/components/Moviz.vue?a4f8","webpack:///./src/components/Moviz.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./node_modules/d3-flextree/package.json"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","getBoxLayout","data","graph","dagre","Graph","compound","setGraph","setDefaultEdgeLabel","i","bf","length","node","nodeId","label","type","function_type","value","body","setNode","auxLabel","width","height","pif","setParent","box","pof","opo","opi","wff","edge","srcNodeId","src","tgtNodeId","tgt","setEdge","wfopi","wfopo","wopio","bc","condition","body_if","body_else","pic","poc","wfc","wcf","wcc","wcopi","wcopo","nodeID","auxID","predecessors","successors","bfNodes","nodes","filter","startsWith","bcNodes","opoNodes","opiNodes","parentNodes","toConsumableArray_default","superNodes","uf","UnionFind","j","isEdgeBetweenChildNodes","union","groups","forEach","root","find","push","superNodeCounter","_loop3","superNodeId","virtual","groupParentNodes","ranksep","rankdir","keys_default","currentY","superNodeIds","sort","a","b","parseInt","split","firstSuperNode","firstSuperNodeCenterX","x","y","adjustChildNodesPosition","preSuperNode","superNode","deltaX","deltaY","arrangeSuperNodes","layout","edges","console","log","source","v","target","w","_loop","bfNodeId","pofNode","pifNode","fullBox","_loop2","bcNodeId","pocNode","picNode","meta","identifier","metadata","elements","_this","classCallCheck_default","parent","e","parentX","parentY","parentNode1","parentNode2","nodes1","nodes2","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","node1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","node2","err","return","parentNodeId","childId","childNode","adjustAuxNodesPosition","auxNodeId","auxNode","drawLines","sourceid","targetid","locationTransform","body_num_source","body_num_target","color","sourceX","Number","d3","select","attr","sourceY","targetX1","targetX2","targetY1","targetY2","dx1","dy1","dx2","dy2","controlPoint11","controlPoint12","controlPoint21","controlPoint22","g","append","String","data1","data2","lineGenerator","d","curve","pathString1","pathElement1","document","createElementNS","setAttribute","pathString2","pathElement2","totalLength1","getTotalLength","totalLength2","points1","point","getPointAtLength","points2","xScale1","domain","range","bisect1","left","xScale2","bisect2","area1","y0","xValue","indexOfNode","invert","pointBefore","pointAfter","slope","Math","abs","linewidth","pow","sqrt","y1","area2","datum","selectAll","each","currentNode","currentNodeBody","sourceXforSL","sourceYforSL","targetXforSL","targetYforSL","updateLines","lineID","transition","duration","drawLinesDashArrow","treeLayout","sourceID","targetID","sourceFrame","dx","dy","targetX","targetY","style","midX","midY","text","updateLinesDashArrow","arraysAreEqual","array1","array2","loopOverHierarchy","callback","c","_children","getChildren","hierarchies","childrens","element","zoomin","path","filterChild","item","hasOwnProperty","aNums","oName","map","bNums","handleClick","fnS","body_num","clicked","openFlag","GID","replace","deleteParts","deleteFlag","node1Parts","node2Parts","end","then","remove","firstNParts","slice","stringify_default","GIDParts","newLabel","drawBox","routes","currentID","size","temp","Array","isArray","_size","reverse","flexLayout","flextree","spacing","treeData","hierarchy","differenceX","differenceY","padding","sourceGID","targetGID","sourceTransString","targetTransString","newTransArray","transformArray","locationTransformForThis","line_label","opoNodeFlag","opiNodeFlag","_nodeId$split","_nodeId$split2","slicedToArray_default","isOpoNode","minValue","min","apply","values_default","obj","maxValue","max","_nodeId$split3","_nodeId$split4","minXofAllNodes","Infinity","minYofAllNodes","key","_key$split","_key$split2","_nodeId2$split","_nodeId2$split2","isPofNode","isPifNode","isOpiNode","isBcNode","isPocNode","isPicNode","drawBFs_full","drawLiteral_full","drawLPrimitive_full","drawBFs_nfull","drawLiteral_nfull","drawLPrimitive_nfull","drawBCs_full","drawBCs_nfull","drawPorts","sourceNode","targetNode","sourceType","targetType","bbox","getBBox","drawOuterBoxFull","drawOuterBoxBottom","drawOuterBoxTop","drawOuterBoxEmpty","node_body","selection","on","node_body_cond","cond","layoutCond","layoutIf","layoutElse","newLabelCond","newLabelIf","newLabelElse","a01","a02","handleClickCond","lower","Moviz","skemaVersion","url","blockStyle","backgroundColor","selectedOption","options","methods","fetchData","axios","get","response","jsonData","schema_version","graphData","modules","fn0","fn","fn_array","catch","error","downloadSVG","svgElement","getElementById","svgData","XMLSerializer","serializeToString","svgBlob","Blob","svgUrl","URL","createObjectURL","downloadLink","createElement","href","download","appendChild","click","removeChild","submitUrl","excuteFunction","_this2","components_Moviz","_vm","staticClass","_v","directives","rawName","expression","placeholder","change","$event","$$selectedVal","prototype","call","o","selected","_value","multiple","_l","option","domProps","_s","_m","input","composing","src_components_Moviz","Moviz_normalizeComponent","Vue","use","Router","router","component","mode","config","productionTip","el","components","App","template","module","exports","version","main","jsnext:main","author","description","keywords","homepage","license","repository","scripts","clean","build:demo","build:dev","build:prod","build:test","build","lint","test:main","test:browser","test","prepare","dependencies","d3-hierarchy","devDependencies","babel-plugin-external-helpers","babel-preset-es2015-rollup","d3-selection-multi","eslint","jsdom","npm-run-all","rollup","rollup-plugin-babel","rollup-plugin-commonjs","rollup-plugin-copy","rollup-plugin-json","rollup-plugin-node-resolve","rollup-plugin-uglify","uglify-es"],"mappings":"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","file":"static/js/app.53f627cacd8b7e8226fc.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bee6a19a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-bee6a19a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bee6a19a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"app\">\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.container {\r\n  align-items: center;\r\n}\r\n\r\n.button-spacing {\r\n  width: 2vh; /* 定义间距的宽度 */\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/* eslint-disable */\r\nimport * as dagre from 'dagre';\r\n\r\nexport function getBoxLayout(data) {\r\n  const graph = new dagre.graphlib.Graph({ compound: true });\r\n  graph.setGraph({});\r\n  // eslint-disable-next-line\r\n  graph.setDefaultEdgeLabel(() => { return {}; });\r\n  // get bf for all\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bf[i];\r\n      const nodeId = `bf-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const body = node.body;\r\n      graph.setNode(nodeId, { label, value, type, body });\r\n      // add auxi node for each bf\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // get pif\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const node = data.pif[i];\r\n      const nodeId = `pif-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get pof\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const node = data.pof[i];\r\n      const nodeId = `pof-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opo\r\n  if ('opo' in data) {\r\n    for (let i = 0; i < data.opo.length; i += 1) {\r\n      const node = data.opo[i];\r\n      const nodeId = `opo-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opi\r\n  if ('opi' in data) {\r\n    for (let i = 0; i < data.opi.length; i += 1) {\r\n      const node = data.opi[i];\r\n      const nodeId = `opi-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set edges wff\r\n  if ('wff' in data) {\r\n    for (let i = 0; i < data.wff.length; i += 1) {\r\n      const edge = data.wff[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopi\r\n  if ('wfopi' in data) {\r\n    for (let i = 0; i < data.wfopi.length; i += 1) {\r\n      const edge = data.wfopi[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopo\r\n  if ('wfopo' in data) {\r\n    for (let i = 0; i < data.wfopo.length; i += 1) {\r\n      const edge = data.wfopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wopio\r\n  if ('wopio' in data) {\r\n    for (let i = 0; i < data.wopio.length; i += 1) {\r\n      const edge = data.wopio[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set bc\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bc.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bc[i];\r\n      const nodeId = `bc-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const condition = node.condition;\r\n      const body_if = node.body_if;\r\n      const body_else = node.body_else;\r\n      graph.setNode(nodeId, { label, value, type, condition, body_if, body_else });\r\n      // add auxi node for each bc\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // set pic\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const node = data.pic[i];\r\n      const nodeId = `pic-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set poc\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const node = data.poc[i];\r\n      const nodeId = `poc-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set wfc\r\n  if ('wfc' in data) {\r\n    for (let i = 0; i < data.wfc.length; i += 1) {\r\n      const edge = data.wfc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcf\r\n  if ('wcf' in data) {\r\n    for (let i = 0; i < data.wcf.length; i += 1) {\r\n      const edge = data.wcf[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcc\r\n  if ('wcc' in data) {\r\n    for (let i = 0; i < data.wcc.length; i += 1) {\r\n      const edge = data.wcc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopi\r\n  if ('wcopi' in data) {\r\n    for (let i = 0; i < data.wcopi.length; i += 1) {\r\n      const edge = data.wcopi[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopo\r\n  if ('wcopo' in data) {\r\n    for (let i = 0; i < data.wcopo.length; i += 1) {\r\n      const edge = data.wcopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // add auxi edges\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const nodeID = `pif-${i}`;\r\n      const pifNode = data.pif[i];\r\n      const auxID = `aux-bf-${pifNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const nodeID = `pof-${i}`;\r\n      const pofNode = data.pof[i];\r\n      const auxID = `aux-bf-${pofNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const nodeID = `pic-${i}`;\r\n      const picNode = data.pic[i];\r\n      const auxID = `aux-bc-${picNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const nodeID = `poc-${i}`;\r\n      const pocNode = data.poc[i];\r\n      const auxID = `aux-bc-${pocNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  const bfNodes = graph.nodes().filter(node => node.startsWith('bf'));\r\n  const bcNodes = graph.nodes().filter(node => node.startsWith('bc'));\r\n  const opoNodes = graph.nodes().filter(node => node.startsWith('opo'));\r\n  const opiNodes = graph.nodes().filter(node => node.startsWith('opi'));\r\n  const parentNodes = [...bcNodes,...bfNodes, ...opoNodes, ...opiNodes];\r\n  const superNodes = groupParentNodes(graph, parentNodes);\r\n\r\n  // console.log(graph);\r\n  // eslint-disable-next-line\r\n  // console.log(graph);\r\n  // execute layout calculation\r\n  graph.setGraph({ ranksep: 30, rankdir: 'BT' });\r\n  dagre.layout(graph);\r\n\r\n  if (Object.keys(superNodes).length>1) {\r\n    arrangeSuperNodes(graph,superNodes);\r\n  }\r\n\r\n  // get layout result\r\n  const layout = {\r\n    nodes: {},\r\n    edges: [],\r\n  };\r\n  console.log(data);\r\n  graph.nodes().forEach((nodeId) => {\r\n    const node = graph.node(nodeId);\r\n    layout.nodes[nodeId] = {\r\n      x: node.x,\r\n      y: node.y,\r\n      width: node.width,\r\n      height: node.height,\r\n      label: node.label,\r\n      type: node.type,\r\n      value: node.value,\r\n      body: node.body,\r\n      condition: node.condition,\r\n      body_if: node.body_if,\r\n      body_else: node.body_else\r\n    };\r\n  });\r\n  graph.edges().forEach((edge, i) => {\r\n    layout.edges.push({\r\n      id: i,\r\n      source: edge.v,\r\n      target: edge.w,\r\n    });\r\n  });\r\n  // console.log(layout);\r\n  // set attributes for bf\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      const bfNodeId = `bf-${i}`;\r\n      if (('pif' in data) && ('pof' in data)) {\r\n        const pofNode = data.pof.find(node => node.box === i + 1);\r\n        const pifNode = data.pif.find(node => node.box === i + 1);\r\n        if (pofNode && pifNode) {\r\n          layout.nodes[bfNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bfNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bfNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      const bcNodeId = `bc-${i}`;\r\n      if (('pic' in data) && ('poc' in data)) {\r\n        const pocNode = data.poc.find(node => node.box === i + 1);\r\n        const picNode = data.pic.find(node => node.box === i + 1);\r\n        if (pocNode && picNode) {\r\n          layout.nodes[bcNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bcNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bcNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set meta data for layout\r\n  layout.meta = {};\r\n  layout.meta.name = data.b[0].name;\r\n  layout.meta.identifier = `${data.b[0].function_type}-${data.b[0].metadata}`;\r\n  layout.meta.type = data.b[0].function_type;\r\n  return layout;\r\n}\r\n\r\nclass UnionFind {\r\n  constructor(elements) {\r\n    this.parent = {};\r\n    elements.forEach(e => this.parent[e] = e);\r\n  }\r\n\r\n  find(x) {\r\n    if(this.parent[x] !== x) {\r\n      this.parent[x] = this.find(this.parent[x]);\r\n    }\r\n    return this.parent[x];\r\n  }\r\n\r\n  union(x, y) {\r\n    const parentX = this.find(x);\r\n    const parentY = this.find(y);\r\n    if(parentX !== parentY) {\r\n      this.parent[parentY] = parentX;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n  let nodes1 = [];\r\n  let nodes2 = [];\r\n\r\n  if (parentNode1.startsWith(\"opo\") || parentNode1.startsWith(\"opi\")) {\r\n    nodes1.push(parentNode1);\r\n  } else {\r\n    nodes1 = graph.children(parentNode1);\r\n  }\r\n\r\n  if (parentNode2.startsWith(\"opo\") || parentNode2.startsWith(\"opi\")) {\r\n    nodes2.push(parentNode2);\r\n  } else {\r\n    nodes2 = graph.children(parentNode2);\r\n  }\r\n\r\n  for (const node1 of nodes1) {\r\n    for (const node2 of nodes2) {\r\n      if (graph.edge(node1, node2) || graph.edge(node2, node1)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction groupParentNodes(graph, parentNodes) {\r\n  const uf = new UnionFind(parentNodes);\r\n  for(let i = 0; i < parentNodes.length; i++) {\r\n    for(let j = i+1; j < parentNodes.length; j++) {\r\n      if(isEdgeBetweenChildNodes(graph, parentNodes[i], parentNodes[j])) {\r\n        uf.union(parentNodes[i], parentNodes[j]);\r\n      }\r\n    }\r\n  }\r\n  const groups = {};\r\n  parentNodes.forEach(node => {\r\n    const root = uf.find(node);\r\n    if(!groups[root]) {\r\n      groups[root] = [];\r\n    }\r\n    groups[root].push(node);\r\n  });\r\n\r\n  let superNodeCounter = 0;\r\n  const superNodes = {};\r\n  let previousSuperNodeId = null;\r\n  for (let root in groups) {\r\n    const superNodeId = `aux-super-${superNodeCounter}`;\r\n    const label = `aux-super`;\r\n    const virtual = true;\r\n    graph.setNode(superNodeId, { label, virtual });\r\n    groups[root].forEach(node => graph.setParent(node, superNodeId));\r\n    superNodes[superNodeId] = groups[root];\r\n    \r\n    // Now there is a bug of dagre, it can not set an edge between group nodes\r\n    if (previousSuperNodeId) {\r\n      // graph.setEdge(previousSuperNodeId, superNodeId);\r\n    }\r\n    previousSuperNodeId = superNodeId;\r\n    superNodeCounter++;\r\n  }\r\n\r\n  return superNodes;\r\n}\r\n\r\nfunction adjustChildNodesPosition(graph, parentNodeId, deltaX, deltaY) {\r\n  const children = graph.children(parentNodeId);\r\n  children.forEach(childId => {\r\n    const childNode = graph.node(childId);\r\n    \r\n    childNode.x += deltaX;\r\n    childNode.y += deltaY;\r\n\r\n    if (graph.children(childId).length>0){\r\n      adjustChildNodesPosition(graph, childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bf\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bc\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n  });\r\n}\r\n\r\nfunction adjustAuxNodesPosition(graph, auxNodeId, deltaX, deltaY) {\r\n  const auxNode = graph.node(auxNodeId);\r\n  auxNode.x += deltaX;\r\n  auxNode.y += deltaY;\r\n}\r\n\r\nfunction arrangeSuperNodes(graph, superNodes) {\r\n  const nodeSpacing = 50; // 超级节点之间的间距\r\n  let currentY = 0;\r\n\r\n  // 根据超级节点创建顺序进行排序\r\n  const superNodeIds = Object.keys(superNodes);\r\n  superNodeIds.sort((a, b) => parseInt(a.split('-')[2]) - parseInt(b.split('-')[2]));\r\n\r\n  // 获取第一个超级节点，保持其位置不变\r\n  const firstSuperNode = graph.node(superNodeIds[0]);\r\n  const firstSuperNodeCenterX = firstSuperNode.x + 100;\r\n  firstSuperNode.x += 100;\r\n  currentY = firstSuperNode.y;\r\n  adjustChildNodesPosition(graph, superNodeIds[0], 100, 0);\r\n\r\n  // 从第二个超级节点开始遍历，调整其位置\r\n  for (let i = 1; i < superNodeIds.length; i++) {\r\n    \r\n    const superNodeId = superNodeIds[i];\r\n    const preSuperNode = graph.node(superNodeIds[i-1]);\r\n    const superNode = graph.node(superNodeId);\r\n    currentY += nodeSpacing + superNode.height / 2 + preSuperNode.height / 2;\r\n\r\n    // 计算移动距离\r\n    const deltaX = firstSuperNodeCenterX - superNode.x;\r\n    const deltaY = currentY - superNode.y;\r\n\r\n    // 将超级节点移动到新的中心点\r\n    superNode.x += deltaX;\r\n    superNode.y += deltaY;\r\n\r\n    // 更新超级节点的子节点的坐标\r\n    adjustChildNodesPosition(graph, superNodeId, deltaX, deltaY);\r\n\r\n    // 更新下一个超级节点的y坐标\r\n    // currentY += superNode.height + nodeSpacing;\r\n  }\r\n}\r\n\r\n\r\n\r\n// function isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n//   // 获取父节点的子节点\r\n//   const children1 = graph.children(parentNode1);\r\n//   const children2 = graph.children(parentNode2);\r\n\r\n//   // 遍历每一对子节点，检查它们之间是否存在边缘\r\n//   for (const child1 of children1) {\r\n//     for (const child2 of children2) {\r\n//       if (graph.edge(child1, child2) || graph.edge(child2, child1)) {\r\n//         // 如果找到了边缘，返回true\r\n//         return true;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 如果没有找到边缘，返回false\r\n//   return false;\r\n// }\r\n\r\n// function groupParentNodesWithConnectedChildren(graph, parentNodeIds) {\r\n//   // 为每个父节点创建一个集合\r\n//   const sets = new Map(parentNodeIds.map(id => [id, new Set([id])]));\r\n\r\n//   // 超级父节点计数器\r\n//   let superParentCounter = 0;\r\n\r\n//   // 对每一对父节点进行迭代\r\n//   for (let i = 0; i < parentNodeIds.length; i++) {\r\n//     for (let j = i + 1; j < parentNodeIds.length; j++) {\r\n//       // 检查父节点的子节点之间是否存在连接\r\n//       if (isEdgeBetweenChildNodes(graph, parentNodeIds[i], parentNodeIds[j])) {\r\n//         // 如果存在连接，将这两个节点的集合合并\r\n//         const set1 = sets.get(parentNodeIds[i]);\r\n//         const set2 = sets.get(parentNodeIds[j]);\r\n\r\n//         const newSet = new Set([...set1, ...set2]);\r\n\r\n//         // 更新集合映射\r\n//         newSet.forEach(id => sets.set(id, newSet));\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 创建超级父节点\r\n//   const visited = new Set();\r\n//   const superParentNodes = [];\r\n\r\n//   sets.forEach((set, id) => {\r\n//     // 忽略已经访问过的节点\r\n//     if (visited.has(id)) return;\r\n\r\n//     const superParentNodeId = `aux-super-${superParentCounter++}`;\r\n\r\n//     // 设置超级父节点的子节点\r\n//     set.forEach(id => {\r\n//       graph.setParent(id, superParentNodeId);\r\n//       visited.add(id);\r\n//     });\r\n\r\n//     superParentNodes.push(superParentNodeId);\r\n//   });\r\n\r\n//   return superParentNodes;\r\n// }\r\n\r\n\r\nexport function getTreeLayout(data) {\r\n  const g = new dagre.graphlib.Graph({ compound: true });\r\n  g.setGraph({});\r\n  // eslint-disable-next-line\r\n  g.setDefaultEdgeLabel(() => { return {}; });\r\n\r\n  g.setGraph(data.graph);\r\n\r\n  data.subgraphs.forEach((subgraph) => {\r\n    const filteredAttributes = {};\r\n    Object.keys(subgraph.attributes).forEach((key) => {\r\n      if (key === 'label') {\r\n        filteredAttributes[key] = subgraph.attributes[key];\r\n      }\r\n    });\r\n    g.setNode(subgraph.name, filteredAttributes);\r\n    subgraph.nodes.forEach((node) => {\r\n      const filteredAttributesN = {};\r\n      Object.keys(node.attributes).forEach((key) => {\r\n        if (key === 'label') {\r\n          filteredAttributesN[key] = node.attributes[key];\r\n        }\r\n      });\r\n      g.setNode(node.name, filteredAttributesN);\r\n      g.setParent(node.name, subgraph.name);\r\n    });\r\n  });\r\n\r\n  data.edges.forEach((edge) => {\r\n    g.setEdge(edge.source, edge.target);\r\n  });\r\n\r\n  dagre.layout(g);\r\n  // eslint-disable-next-line\r\n  // console.log(g);\r\n  // // eslint-disable-next-line\r\n  // console.log(g.edges());\r\n\r\n  // const svg = d3.select('.svg-container').append('svg');\r\n  // // eslint-disable-next-line\r\n  // const inner = svg.append('g');\r\n  // // eslint-disable-next-line\r\n  // const render = new dagreD3.render();\r\n  // // eslint-disable-next-line\r\n  // render(inner, g);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/layout.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\n\r\nexport function drawLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n  \r\n    // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    const dx1 = targetX1 - sourceX;\r\n    const dy1 = targetY1 - sourceY;\r\n    const dx2 = targetX2 - sourceX;\r\n    const dy2 = targetY2 - sourceY;\r\n    const controlPoint11 = {};\r\n    const controlPoint12 = {};\r\n    const controlPoint21 = {};\r\n    const controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n  \r\n    const g = d3.select('svg').append(\"g\").attr('id', 'line' + String(body_num_source) + '_' + String(body_num_target));\r\n  \r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n      .attr(\"targetid\", targetid)\r\n      .attr(\"locationTransform\", locationTransform)\r\n      .attr(\"body_num_source\", body_num_source)\r\n      .attr(\"body_num_target\", body_num_target)\r\n      .attr(\"color\", color);\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let path1 = g.append(\"path\")\r\n    .datum(data1)\r\n    .attr(\"d\", area1)\r\n    .attr('id', 'path1')\r\n    .attr(\"fill\", color);\r\n  \r\n    let path2 = g.append(\"path\")\r\n    .datum(data2)\r\n    .attr(\"d\", area2)\r\n    .attr('id', 'path2')\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          currentNode.attr(\"data-opened\", true);\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.append(\"circle\")\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.append(\"line\")\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  \r\nexport function updateLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color, lineID) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n\r\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    const dx1 = targetX1 - sourceX;\r\n    const dy1 = targetY1 - sourceY;\r\n    const dx2 = targetX2 - sourceX;\r\n    const dy2 = targetY2 - sourceY;\r\n    const controlPoint11 = {};\r\n    const controlPoint12 = {};\r\n    const controlPoint21 = {};\r\n    const controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n\r\n    const g = d3.select('#' + lineID);\r\n\r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n        .attr(\"targetid\", targetid)\r\n        .attr(\"locationTransform\", locationTransform)\r\n        .attr(\"body_num_source\", body_num_source)\r\n        .attr(\"body_num_target\", body_num_target)\r\n        .attr(\"color\", color);\r\n\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let path1 = g.select(\"#path1\")\r\n    .datum(data1)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area1)\r\n    .attr(\"fill\", color);\r\n\r\n    let path2 = g.select(\"#path2\")\r\n    .datum(data2)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area2)\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.select(\"circle\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.select(\"line\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n      \r\n    })\r\n}\r\n\r\nexport function drawLinesDashArrow(treeLayout, sourceID, targetID, color, label) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  const sourceFrame = \"frame\" + sourceID;\r\n  const targetFrame = \"frame\" + targetID;\r\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  const targetX = sourceX + dx;\r\n  const targetY = sourceY + dy;\r\n  const g = d3.select('svg').append(\"g\").attr('id', 'line' + String(sourceID) + '_' + String(targetID)).attr(\"line-type\", \"dashed\");\r\n  const paddingL = 17;\r\n  g.append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"markerWidth\", 5)  // 原来的一半\r\n    .attr(\"markerHeight\", 3.5)  // 原来的一半\r\n    .attr(\"refX\", 5)  // 调整参考点以适应新的大小\r\n    .attr(\"refY\", 1.75)  // 调整参考点以适应新的大小\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,0 L5,1.75 L0,3.5 Z\")  // 缩小箭头的路径\r\n  .style(\"fill\", \"gray\");\r\n  g.append(\"line\")\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.append(\"text\")\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\r\n\r\nexport function updateLinesDashArrow(treeLayout, sourceID, targetID, color, label, lineID) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  const sourceFrame = \"frame\" + sourceID;\r\n  const targetFrame = \"frame\" + targetID;\r\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  const targetX = sourceX + dx;\r\n  const targetY = sourceY + dy;\r\n  const g = d3.select('svg').select(\"#\" + lineID);\r\n  g.select(\"line\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.select(\"text\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawlines.js","/* eslint-disable */\r\n\r\n\r\nexport function arraysAreEqual(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < array1.length; i++) {\r\n        if (array1[i] !== array2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function loopOverHierarchy(d, callback) {\r\n    callback(d);\r\n    if (d.children) d.children.forEach(c => loopOverHierarchy(c, callback));\r\n    if (d._children) d._children.forEach(c => loopOverHierarchy(c, callback));\r\n  }\r\n\r\nexport function getChildren(hierarchies, childrens) {\r\n  console.log(childrens);\r\n  childrens.forEach(function(element){\r\n    var children = hierarchies;\r\n    var zoomin = 2;\r\n    element.path.forEach(function(node){\r\n        if (Number(node) !== 0) {\r\n            if (zoomin <= element.path.length - 1) {\r\n                // debugger\r\n                const filterChild = children.children.filter(function(item){\r\n                    return Number(item.name) === Number(node);\r\n                })[0]\r\n                zoomin += 1\r\n                children = filterChild;\r\n            }\r\n            else if (node === element.path[element.path.length - 1]) {\r\n                // debugger\r\n                if (children.hasOwnProperty(\"children\")) {\r\n                    children.children.push(element);\r\n                    sortByOName(children.children);\r\n                } else {\r\n                    children.children = [ element ];\r\n                }\r\n            }\r\n        }\r\n  })\r\n})\r\n}\r\n\r\nexport function findChildrenAtSameLevel(arr) {\r\n  const paths = {};\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const path = arr[i];\r\n    const lastIndex = path.lastIndexOf('-');\r\n\r\n    if (lastIndex !== -1) {\r\n      const parentPath = path.slice(0, lastIndex);\r\n\r\n      if (!paths[parentPath]) {\r\n        paths[parentPath] = [];\r\n      }\r\n\r\n      paths[parentPath].push(path);\r\n    }\r\n  }\r\n\r\n  const similarPaths = Object.values(paths).filter(pathGroup => pathGroup.length > 1);\r\n\r\n  return similarPaths;\r\n}\r\n\r\nfunction sortByOName(arr) {\r\n    return arr.sort((a, b) => {\r\n        const aNums = a.oName.split('-').map(Number);\r\n        const bNums = b.oName.split('-').map(Number);\r\n\r\n        // 根据数字依次进行比较\r\n        for(let i = 0; i < aNums.length; i++) {\r\n            if (aNums[i] < bNums[i]) {\r\n                return -1;\r\n            } else if (aNums[i] > bNums[i]) {\r\n                return 1;\r\n            }\r\n            // 如果相等，继续比较下一个数字\r\n        }\r\n\r\n        // 如果所有数字都相等，返回0表示不需要改变顺序\r\n        return 0;\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utilities.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel } from \"./utilities\";\r\nimport * as flextree from \"d3-flextree\"\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClick(fnS, body, body_num, sourceid, color, clicked) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  // console.log(openFlag.attr(\"data-opened\"));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('g').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(body);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  const layout = getBoxLayout(fnS[body-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabel = String(body_num) + '-' + String(body); // new body_num\r\n  drawBox(layout, fnS, newLabel);\r\n  var hierarchies = {};\r\n  const childrens = [];\r\n  const gs = d3.selectAll('g').each(function(d, i){\r\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !== 2) {\r\n      const routes = nodeID.split(\"-\");\r\n      const currentID = routes[routes.length - 1];\r\n      if (currentID==='0') {\r\n          hierarchies.name = Number(currentID);\r\n          hierarchies.oName = nodeID;\r\n          hierarchies.path = routes;\r\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n      } else {\r\n          const temp = {}\r\n          temp.name = Number(currentID);\r\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n          temp.path = routes;\r\n          temp.oName = nodeID;\r\n          childrens.push(temp);\r\n      }\r\n    }\r\n  })\r\n  childrens.sort(function(a,b){\r\n    return a.path.length - b.path.length;\r\n  })\r\n  getChildren(hierarchies, childrens);\r\n  loopOverHierarchy(hierarchies, d => {\r\n    if (Array.isArray(d.size)) {\r\n      if (!d._size) d._size = d.size.slice();\r\n      d.size = d._size.slice().reverse();\r\n    }\r\n  });\r\n  const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  const tree = flexLayout.hierarchy(hierarchies);\r\n  var treeData = flexLayout(tree);\r\n  treeData.each(d => {\r\n    const x = d.x;\r\n    d.x = d.y;\r\n    d.y = x;\r\n  });\r\n  var treeLayout = {};\r\n  treeData.each(d => {\r\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  let differenceX = treeLayout[newLabel][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabel][1] - treeLayout[newLabel][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabel, locationTransform, body_num, newLabel, color);\r\n  // console.log(locationTransform);\r\n  d3.selectAll('g').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !==2) {\r\n      if (nodeID === newLabel) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  })\r\n  d3.selectAll('g').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/click.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\nimport { handleClick } from \"./click\";\r\nimport { handleClickCond } from \"./clickCond\";\r\n\r\nexport function drawBox(layout, fnS, body_num) {\r\n    // 创建SVG元素\r\n    const svg = d3.select(\"#mainsvg\")\r\n    const g = svg.append(\"g\").attr('id', \"boxid\" + String(body_num));\r\n    const ranksep = 37;\r\n    // 绘制节点\r\n    const nodes = layout.nodes;\r\n    let opoNodeFlag = false;\r\n    let opiNodeFlag = false;\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n\r\n      if (isOpiNode) {\r\n        const minValue = Math.min(...Object.values(layout.nodes).map(obj => obj.y));\r\n        if (node.y !== minValue){\r\n          node.y = minValue - 50 - ranksep;\r\n          opiNodeFlag = true;\r\n        }\r\n      }\r\n\r\n      if (isOpoNode) {\r\n        const maxValue = Math.max(...Object.values(layout.nodes).map(obj => obj.y));\r\n        if (node.y !== maxValue){\r\n          node.y = maxValue + 50 + ranksep;\r\n          opoNodeFlag = true;\r\n        }\r\n      }\r\n    }\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n\r\n      if (isOpiNode) {\r\n        const minValue = Math.min(...Object.values(layout.nodes).map(obj => obj.y));\r\n        if (opiNodeFlag){\r\n          node.y = minValue;\r\n        }\r\n      }\r\n\r\n      if (isOpoNode) {\r\n        const maxValue = Math.max(...Object.values(layout.nodes).map(obj => obj.y));\r\n        if (opoNodeFlag){\r\n          node.y = maxValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 获取 x 和 y 的最小值\r\n    let minXofAllNodes = Infinity;\r\n    let minYofAllNodes = Infinity;\r\n    for (const key in nodes) {\r\n      const [type, index] = key.split(\"-\");\r\n      const isAuxNode = (type === \"aux\");\r\n      // if (!isAuxNode) {\r\n        if (nodes[key].x < minXofAllNodes) {\r\n          minXofAllNodes = nodes[key].x;\r\n        }\r\n        if (nodes[key].y < minYofAllNodes) {\r\n          minYofAllNodes = nodes[key].y;\r\n        }\r\n      // }\r\n    }\r\n\r\n    // 更新每一个子对象的 x 和 y 属性\r\n    for (const key in nodes) {\r\n      nodes[key].x = nodes[key].x - minXofAllNodes + 10;\r\n      nodes[key].y -= minYofAllNodes;\r\n    }\r\n    console.log(nodes);\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isBfNode = (type === \"bf\");\r\n      const isPofNode = (type === \"pof\");\r\n      const isPifNode = (type === \"pif\");\r\n      const isAuxNode = (type === \"aux\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      const isBcNode = (type === \"bc\");\r\n      const isPocNode = (type === \"poc\");\r\n      const isPicNode = (type === \"pic\");\r\n  \r\n      if (isAuxNode) {\r\n        continue; // 不绘制aux前缀的节点\r\n      }\r\n\r\n      if (isBfNode) {\r\n        if (node.fullBox){\r\n            if (node.type == \"FUNCTION\") {\r\n              drawBFs_full(node, nodeId, g, \"green\", ranksep, fnS, body_num);\r\n            } else if (node.type == \"EXPRESSION\") {\r\n              drawBFs_full(node, nodeId, g, \"purple\", ranksep, fnS, body_num);\r\n            } else if (node.type == \"LITERAL\") {\r\n              drawLiteral_full(node, nodeId, g, \"red\", ranksep);\r\n            } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n              drawLPrimitive_full(node, nodeId, g, \"red\", ranksep);\r\n            }\r\n        } else {\r\n          if (node.type == \"FUNCTION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"green\", ranksep, fnS, body_num);\r\n          } else if (node.type == \"EXPRESSION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"purple\", ranksep, fnS, body_num);\r\n          } else if (node.type == \"LITERAL\") {\r\n            drawLiteral_nfull(node, nodeId, g, \"red\", ranksep);\r\n          } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n            drawLPrimitive_nfull(node, nodeId, g, \"red\", ranksep);\r\n          }\r\n        }\r\n      } else if (isBcNode) {\r\n        if (node.fullBox){\r\n          drawBCs_full(node, nodeId, g, \"orange\", ranksep, fnS, body_num);\r\n        } else {\r\n          drawBCs_nfull(node, nodeId, g, \"orange\", ranksep, fnS, body_num);\r\n        }\r\n      }\r\n      else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode) {\r\n        drawPorts(node, nodeId, g, \"black\");\r\n      }\r\n    }\r\n  \r\n    // 绘制箭头\r\n    g.append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", \"arrowhead\")\r\n      .attr(\"markerWidth\", 10)\r\n      .attr(\"markerHeight\", 7)\r\n      .attr(\"refX\", 10)\r\n      .attr(\"refY\", 3.5)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M0,0 L10,3.5 L0,7 Z\")\r\n      .style(\"fill\", \"gray\");\r\n  \r\n    // 绘制边\r\n    const edges = layout.edges;\r\n    edges.forEach((edge) => {\r\n      const sourceNode = nodes[edge.source];\r\n      const targetNode = nodes[edge.target];\r\n      const sourceType = edge.source.split(\"-\")[0];\r\n      const targetType = edge.target.split(\"-\")[0];\r\n      const isAuxEdge = (sourceType === \"aux\" || targetType === \"aux\");\r\n\r\n      if (!isAuxEdge) {\r\n        g.append(\"line\")\r\n          .attr(\"x1\", sourceNode.x)\r\n          .attr(\"y1\", sourceNode.y - sourceNode.height / 2)\r\n          .attr(\"x2\", targetNode.x)\r\n          .attr(\"y2\", targetNode.y + targetNode.height / 2)\r\n          .style(\"stroke\", \"gray\")\r\n          .style(\"stroke-width\", 2.2)\r\n          .attr(\"marker-end\", \"url(#arrowhead)\");\r\n      }\r\n    });\r\n\r\n    // 调整SVG大小\r\n    const padding = 22.5; // 设置padding的大小\r\n\r\n    // const svgElement = document.querySelector(\"svg\");\r\n    const bbox = g.node().getBBox();\r\n    const width = bbox.width + padding * 4;\r\n    const height = bbox.height + padding * 4;\r\n\r\n    if ('opo-0' in nodes && 'opi-0' in nodes){\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"orange\", body_num);\r\n      }\r\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"orange\", body_num);\r\n      }\r\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"orange\", body_num);\r\n      }\r\n    } else {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"orange\", body_num);\r\n      }\r\n    }\r\n    g.attr(\"width\", g.node().getBBox().width)\r\n      .attr(\"height\", g.node().getBBox().height)\r\n    if (body_num === 0){\r\n      g.attr(\"transform\", `translate(${padding * 4},${padding * 30 - g.node().getBBox().height / 2 * 1})`);\r\n    }\r\n  }\r\n\r\nfunction drawBFs_full(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let clicked = false;\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBFs_nfull(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_full(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let clicked = false;\r\n  let node_body_cond = null;\r\n  if (node.condition !== undefined) {\r\n    node_body_cond = node.condition;\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body_cond)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.condition !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_nfull(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawLiteral_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"20px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLiteral_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2 + ranksep / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width - ranksep)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - ranksep * 1.2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawPorts(node, nodeId, g, color) {\r\n  g.append(\"rect\")\r\n    .attr(\"id\", nodeId)\r\n    .attr(\"x\", node.x - node.width / 2)\r\n    .attr(\"y\", node.y - node.height / 2)\r\n    .attr(\"width\", node.width)\r\n    .attr(\"height\", node.height)\r\n    .style(\"fill\", \"white\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 2);\r\n    if (node.label !== undefined){\r\n      g.append(\"text\") // 添加节点的label\r\n      .attr(\"x\", node.x)\r\n      .attr(\"y\", node.y)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"dominant-baseline\", \"middle\")\r\n      .style(\"font-size\", \"27px\")\r\n      .text(node.label);\r\n    }\r\n}\r\n\r\nfunction drawOuterBoxFull(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n  .attr(\"id\", \"frame\" + body_num)\r\n  .attr(\"x\", bbox.x - padding)\r\n  .attr(\"y\", bbox.y - padding + ranksep)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"width\", width - padding * 2)\r\n  .attr(\"height\", height - padding * 2 - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5)\r\n  .lower();\r\n}\r\n\r\nfunction drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding - ranksep / 10)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxTop(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding + ranksep * 2)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawBox.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, drawLinesDashArrow, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel } from \"./utilities\";\r\nimport * as flextree from \"d3-flextree\"\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClickCond(fnS, cond, body_if, body_else, body_num, sourceid, color, clicked) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('g').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(cond);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  const layoutCond = getBoxLayout(fnS[cond-1]);\r\n  const layoutIf = getBoxLayout(fnS[body_if-1]);\r\n  const layoutElse = getBoxLayout(fnS[body_else-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\r\n  const newLabelIf = String(newLabelCond) + '-' + String(body_if); // new body_num for if\r\n  const newLabelElse = String(newLabelCond) + '-' + String(body_else); // new body_num for else\r\n  drawBox(layoutCond, fnS, newLabelCond);\r\n  drawBox(layoutIf, fnS, newLabelIf);\r\n  drawBox(layoutElse, fnS, newLabelElse);\r\n  var hierarchies = {};\r\n  const childrens = [];\r\n  const gs = d3.selectAll('g').each(function(d, i){\r\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !== 2) {\r\n      const routes = nodeID.split(\"-\");\r\n      const currentID = routes[routes.length - 1];\r\n      if (currentID==='0') {\r\n          hierarchies.name = Number(currentID);\r\n          hierarchies.oName = nodeID;\r\n          hierarchies.path = routes;\r\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n      } else {\r\n          const temp = {}\r\n          temp.name = Number(currentID);\r\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n          temp.path = routes;\r\n          temp.oName = nodeID;\r\n          childrens.push(temp);\r\n      }\r\n    }\r\n  })\r\n  childrens.sort(function(a,b){\r\n    return a.path.length - b.path.length;\r\n  })\r\n  getChildren(hierarchies, childrens);\r\n  loopOverHierarchy(hierarchies, d => {\r\n    if (Array.isArray(d.size)) {\r\n      if (!d._size) d._size = d.size.slice();\r\n      d.size = d._size.slice().reverse();\r\n    }\r\n  });\r\n  const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  console.log(hierarchies);\r\n  const tree = flexLayout.hierarchy(hierarchies);\r\n  var treeData = flexLayout(tree);\r\n  treeData.each(d => {\r\n    const x = d.x;\r\n    d.x = d.y;\r\n    d.y = x;\r\n  });\r\n  var treeLayout = {};\r\n  treeData.each(d => {\r\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  console.log()\r\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabelCond][1] - treeLayout[newLabelCond][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color);\r\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelIf, \"black\", \"TRUE\");\r\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelElse, \"black\", \"FALSE\");\r\n\r\n  // console.log(locationTransform);\r\n  d3.selectAll('g').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          // .transition()\r\n          // .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    } else {\r\n      if (nodeID === newLabelCond || nodeID === newLabelElse || nodeID === newLabelIf) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  }\r\n  )\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/clickCond.js","<template>\r\n  <div class=\"container\">\r\n  <div class=\"d-flex justify-content-start\">\r\n    <!-- <button class=\"btn btn-primary\" @click=\"fetchData\">upload</button> -->\r\n    <div class=\"button-spacing\"></div> <!-- 添加间距 -->\r\n    <select v-model=\"selectedOption\" @change=\"fetchData\" class=\"my-select\" placeholder=\"Select\">\r\n      <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">\r\n        {{ option.text }}\r\n      </option>\r\n    </select>\r\n    <div><p> Or </p></div>\r\n    <input type=\"text\" v-model=\"url\" class=\"url-input\" placeholder=\"Input URL of JSON file here.\"/>\r\n    <button class=\"btn btn-primary\" @click=\"submitUrl\">Submit</button>\r\n    <button class=\"btn btn-primary download-button\" @click=\"downloadSVG\" >downloadSVG</button>\r\n  </div>\r\n    <div class=\"row\">\r\n      <div id=\"svg-container\" :style=\"blockStyle\">\r\n        <div class=\"version-text\">\r\n          Current Supported Skema Version:\r\n          <span class=\"highlight\">0.1.6</span>\r\n        </div>\r\n        <div class=\"version-text\">\r\n          Current File Version:\r\n          <span class=\"highlight\">{{ skemaVersion }}</span>\r\n        </div>\r\n        <svg id=\"mainsvg\" width=\"2000\" height=\"2000\"></svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport { getBoxLayout } from '../utils/layout';\r\nimport { drawBox } from '../utils/drawBox';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      skemaVersion: '',\r\n      url: '',\r\n      blockStyle: {\r\n        backgroundColor: 'rgba(255, 255, 120, 0.5)',\r\n        height: '90vh',\r\n        width: '100%',\r\n      },\r\n      selectedOption: null,\r\n      options: [\r\n        { text: 'cond1', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/cond1--Gromet-FN-auto.json' },\r\n        { text: 'fun1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun1/FN_0.1.6/fun1--Gromet-FN-auto.json' },\r\n        { text: 'fun4', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun4/FN_0.1.6/fun4--Gromet-FN-auto.json' },\r\n        { text: 'exp1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp1/FN_0.1.6/exp1--Gromet-FN-auto.json' },\r\n        { text: 'exp2', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp2/FN_0.1.6/exp2--Gromet-FN-auto.json' },\r\n        { text: 'exp3', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp3/FN_0.1.6/exp3--Gromet-FN-auto.json' },\r\n        { text: 'fun_default1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun_default1/FN_0.1.6/fun_default1--Gromet-FN-auto.json' },\r\n        { text: 'assign_operator1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/assign_operator1/FN_0.1.6/assign_operator1--Gromet-FN-auto.json' },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      d3.selectAll('g').remove();\r\n      axios.get(this.selectedOption)\r\n        .then((response) => {\r\n          const jsonData = response.data;\r\n          this.skemaVersion = jsonData.schema_version;\r\n          const graphData = jsonData.modules[0];\r\n          const fn0 = graphData.fn;\r\n          const fnS = graphData.fn_array;\r\n          const layout = getBoxLayout(fn0);\r\n          drawBox(layout, fnS, 0);\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n        });\r\n    },\r\n    downloadSVG() {\r\n      // 获取 SVG 元素\r\n      const svgElement = document.getElementById('mainsvg');\r\n      // 获取 SVG 的内容\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      // 创建一个 Blob 对象\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      // 创建一个指向 Blob 的 URL\r\n      const svgUrl = URL.createObjectURL(svgBlob);\r\n      // 创建一个链接并通过该链接下载 SVG 文件\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = svgUrl;\r\n      downloadLink.download = 'mainsvg.svg';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    },\r\n    submitUrl() {\r\n      this.excuteFunction(this.url);\r\n    },\r\n    excuteFunction(url) {\r\n      axios.get(url)\r\n        .then((response) => {\r\n          const jsonData = response.data;\r\n          this.skemaVersion = jsonData.schema_version;\r\n          const graphData = jsonData.modules[0];\r\n          const fn0 = graphData.fn;\r\n          const fnS = graphData.fn_array;\r\n          const layout = getBoxLayout(fn0);\r\n          drawBox(layout, fnS, 0);\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.svg-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n.my-select {\r\n    /* 下拉框的样式 */\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    margin-right: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\r\n}\r\n\r\n.url-input {\r\n    /* 输入框的样式 */\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    width: 400px;\r\n    overflow-x: auto;\r\n    margin-left: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\r\n}\r\n\r\np {\r\n  margin-bottom: -10px;\r\n  font-size: 27px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.download-button {\r\n  margin-left: 300px;\r\n}\r\n\r\n.version-text {\r\n  font-size: 27px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.highlight {\r\n  color: red;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Moviz.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"button-spacing\"}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],staticClass:\"my-select\",attrs:{\"placeholder\":\"Select\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.fetchData]}},_vm._l((_vm.options),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.value}},[_vm._v(\"\\n      \"+_vm._s(option.text)+\"\\n    \")])}),0),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.url),expression:\"url\"}],staticClass:\"url-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Input URL of JSON file here.\"},domProps:{\"value\":(_vm.url)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.url=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.submitUrl}},[_vm._v(\"Submit\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary download-button\",on:{\"click\":_vm.downloadSVG}},[_vm._v(\"downloadSVG\")])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{style:(_vm.blockStyle),attrs:{\"id\":\"svg-container\"}},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current File Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(_vm._s(_vm.skemaVersion))])]),_vm._v(\" \"),_c('svg',{attrs:{\"id\":\"mainsvg\",\"width\":\"2000\",\"height\":\"2000\"}})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\" Or \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current Supported Skema Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(\"0.1.6\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-69d9e310\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Moviz.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-69d9e310\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Moviz.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-69d9e310\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Moviz.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-69d9e310\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Moviz.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport Moviz from '@/components/Moviz';\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Moviz',\r\n      component: Moviz,\r\n    },\r\n  ],\r\n  mode: 'hash',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Vue from 'vue';\r\nimport App from './App';\r\nimport router from './router';\r\n\r\nVue.config.productionTip = false;\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  components: { App },\r\n  template: '<App/>',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"d3-flextree\",\"version\":\"2.1.2\",\"main\":\"build/d3-flextree.js\",\"module\":\"index\",\"jsnext:main\":\"index\",\"author\":{\"name\":\"Chris Maloney\",\"url\":\"http://chrismaloney.org\"},\"description\":\"Flexible tree layout algorithm that allows for variable node sizes.\",\"keywords\":[\"d3\",\"d3-module\",\"layout\",\"tree\",\"hierarchy\",\"d3-hierarchy\",\"plugin\",\"d3-plugin\",\"infovis\",\"visualization\",\"2d\"],\"homepage\":\"https://github.com/klortho/d3-flextree\",\"license\":\"WTFPL\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/klortho/d3-flextree.git\"},\"scripts\":{\"clean\":\"rm -rf build demo test\",\"build:demo\":\"rollup -c --environment BUILD:demo\",\"build:dev\":\"rollup -c --environment BUILD:dev\",\"build:prod\":\"rollup -c --environment BUILD:prod\",\"build:test\":\"rollup -c --environment BUILD:test\",\"build\":\"rollup -c\",\"lint\":\"eslint index.js src\",\"test:main\":\"node test/bundle.js\",\"test:browser\":\"node test/browser-tests.js\",\"test\":\"npm-run-all test:*\",\"prepare\":\"npm-run-all clean build lint test\"},\"dependencies\":{\"d3-hierarchy\":\"^1.1.5\"},\"devDependencies\":{\"babel-plugin-external-helpers\":\"^6.22.0\",\"babel-preset-es2015-rollup\":\"^3.0.0\",\"d3\":\"^4.13.0\",\"d3-selection-multi\":\"^1.0.1\",\"eslint\":\"^4.19.1\",\"jsdom\":\"^11.6.2\",\"npm-run-all\":\"^4.1.2\",\"rollup\":\"^0.55.3\",\"rollup-plugin-babel\":\"^2.7.1\",\"rollup-plugin-commonjs\":\"^8.0.2\",\"rollup-plugin-copy\":\"^0.2.3\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.2\",\"rollup-plugin-uglify\":\"^3.0.0\",\"uglify-es\":\"^3.3.9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-flextree/package.json\n// module id = p+Xa\n// module chunks = 1"],"sourceRoot":""}