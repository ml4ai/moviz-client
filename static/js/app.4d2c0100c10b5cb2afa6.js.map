{"version":3,"sources":["webpack:///./src/utils/layout.js","webpack:///./src/utils/drawlines.js","webpack:///./src/utils/utilities.js","webpack:///./src/utils/flextree.js","webpack:///./src/utils/multitree.js","webpack:///./src/utils/click.js","webpack:///./src/utils/clickCond.js","webpack:///./src/utils/drawBox.js","webpack:///src/App.vue","webpack:///./src/App.vue?b958","webpack:///./src/App.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./node_modules/d3-flextree/package.json"],"names":["getBoxLayout","data","graph","dagre","Graph","compound","setGraph","setDefaultEdgeLabel","i","bf","length","node","nodeId","label","name","type","function_type","value","body","setNode","auxLabel","width","height","pif","setParent","box","pof","opo","opi","wff","edge","srcNodeId","src","tgtNodeId","tgt","setEdge","wfopi","wfopo","wopio","bc","condition","body_if","body_else","pic","poc","wfc","wcf","wcc","wcopi","wcopo","bl","pre","post","pil","pol","wfl","wcl","wlopi","wll","wlf","wlc","wlopo","nodeID","auxID","predecessors","successors","nodes","filter","startsWith","ranksep","rankdir","console","log","layout","edges","forEach","x","y","push","id","source","v","target","w","_loop","bfNodeId","pofNode","find","pifNode","fullBox","_loop2","bcNodeId","pocNode","picNode","_loop3","blNodeId","polNode","pilNode","meta","b","identifier","metadata","UnionFind","elements","_this","this","classCallCheck_default","parent","e","parentX","parentY","drawLines","sourceid","targetid","locationTransform","body_num_source","body_num_target","color","direction","sourceX","Number","d3","select","attr","sourceY","targetX1","targetX2","targetY1","targetY2","dx1","dy1","dx2","dy2","controlPoint11","controlPoint12","controlPoint21","controlPoint22","g","append","String","data1","data2","lineGenerator","d","curve","pathString1","pathElement1","document","createElementNS","setAttribute","pathString2","pathElement2","totalLength1","getTotalLength","totalLength2","points1","point","getPointAtLength","points2","xScale1","domain","range","bisect1","left","xScale2","bisect2","area1","y0","xValue","indexOfNode","invert","pointBefore","pointAfter","slope","Math","abs","linewidth","pow","sqrt","y1","area2","x0","yValue","x1","datum","selectAll","each","currentNode","currentNodeBody","undefined","split","sourceXforSL","sourceYforSL","targetXforSL","targetYforSL","updateLines","lineID","transition","duration","drawLinesDashArrow","treeLayout","sourceID","targetID","sourceFrame","dx","dy","targetX","targetY","style","midX","midY","text","updateLinesDashArrow","arraysAreEqual","array1","array2","loopOverHierarchy","callback","children","c","_children","getChildren","hierarchies","childrens","element","zoomin","path","filterChild","item","hasOwnProperty","sort","a","aNums","oName","map","bNums","getHierarchy","spaceY","replace","routes","currentID","size","temp","Array","isArray","_size","slice","reverse","defaults","freeze_default","nodeSize","spacing","flextree","options","opts","assign_default","accessor","opt","tree","FlexNode","wtree","wrap","getFlexNode","_FlexNode","_class","_this2","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","relX","prelim","shift","change","lExt","lExtRelX","lThr","rExt","rExtRelX","rThr","inherits_default","createClass_default","key","oNode","layoutChildren","resolveX","get","set","update","_hierarchy$prototype$","constructor","descendants","ySize","xSize","ancs","ancestors","hasChildren","noChildren","numChildren","reduce","acc","kid","maxExtents","extents","nodeExtents","top","bottom","right","e0","e1","min","max","hierarchy","prototype","FlexClass","treeData","_wrap","depth","kidsData","kd","hl","arg","arguments","kids","dump","_dump","i0","i1","i2","kdumps","join","_acc","slicedToArray_default","lastLows","lowY","separate","updateLows","shiftChange","positionRoot","prevSum","sum","k","child","_acc2","lastShiftSum","lastChangeSum","shiftSum","changeSum","lows","lSib","curSubtree","rContour","rSumMods","lContour","lSumMods","isFirst","next","dist","moveSubtree","distributeExtra","index","rightBottom","leftBottom","nextRContour","nextLContour","setLThr","setRThr","subtree","distance","curSubtreeI","leftSibI","n","delta","firstChild","lastChild","diff","k0","kf","getMultiTree","subtrees","findAllSubtrees","currentLayout","toConsumableArray_default","down","mix","mergedCL","obj","extends_default","hasProperties","sharedNodes","getSharedKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","nodeL","childrenRect","keyPre","nodeLPre","oldBoundingBox","findBoundingBox","differenceX1","differenceY1","err","return","copyNonDuplicateProperties","cloneDeep","obj1","obj2","sharedKeys","processTree","root","parentNodesRight","set_default","parentNodesDown","setParents","dfs","isSameDirection","checkProperties","add","parentNodesMix","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","has","delete","from_default","clone","removeDownChildren","clonex","flexLayout","newBoundingbox","removeRightChildren","cloneRight","cloneDown","flexLayoutDown","flexLayoutRight","treeDown","treeRight","cloneRightx","cloneDownx","treeDataDown","treeDataRight","treeLayoutDown","treeLayoutRight","differenceX","differenceY","mergedLayout","rectanglesObj","minX","Infinity","minY","maxX","maxY","rectangle","rectX","rectY","x2","y2","handleClick","fnS","body_num","clicked","openFlag","GID","deleteParts","deleteFlag","node1","node2","node1Parts","node2Parts","end","then","remove","firstNParts","stringify_default","GIDParts","newLabel","drawBox","keys_default","padding","sourceGID","targetGID","sourceTransString","targetTransString","newTransArray","transformArray","locationTransformForThis","a01","a02","a04","a05","line_label","handleClickCond","cond","layoutElse","layoutCond","layoutIf","newLabelCond","newLabelIf","newLabelElse","currentDirection","handleClickLoop","newLabelPre","newLabelBody","newLabelPost","directionO","opoNodeFlag","opiNodeFlag","minValue","apply","values_default","maxValue","_nodeId$split","_nodeId$split2","isOpoNode","_nodeId$split3","_nodeId$split4","minXofAllNodes","minYofAllNodes","_key$split","_key$split2","bbox","shapes","isPofNode","isPifNode","isOpiNode","isPocNode","isPicNode","isPolNode","isPilNode","computeBoundingRectangle","realOuterBox","getOuterBox","_nodeId2$split","_nodeId2$split2","isBcNode","isBlNode","drawBFs_full","drawLiteral_full","drawLPrimitive_full","drawBFs_nfull","drawLiteral_nfull","drawLPrimitive_nfull","drawBCs_full","drawBCs_nfull","drawBLs_full","drawBLs_nfull","drawPorts","sourceNode","targetNode","sourceType","targetType","drawOuterBoxFull","drawOuterBoxBottom","drawOuterBoxTop","drawOuterBoxEmpty","getBBox","node_body","outerRight","outerBottom","selection","on","node_body_cond","insert","lower","App","components","VueJsonPretty","vue_json_pretty_default","skemaVersion","url","selectedDeep","possibleDepths","blockStyle","backgroundColor","selectedFile","selectedOption","gromet","highlightedJson","selectedNode","highlightNode","mounted","$refs","svgMoviz","addEventListener","handleMouseOverDelegate","beforeDestroy","removeEventListener","created","asyncToGenerator_default","regenerator_default","mark","_callee","grometUrl","response","_context","prev","$route","query","gromet_url","axios","sent","schema_version","modules","metadata_collection","drawMoviz","t0","error","stop","methods","svg","zoom","transform","graphData","fn0","fn","fn_array","fetchData","_callee2","_context2","triggerFileInput","fileInput","click","handleFileChange","event","_this3","files","reader","FileReader","onload","JSON","parse","result","readAsText","handleMouseOver","tagName","numberMatch","pop","match","increasedWidth","baseVal","increasedHeight","parentNode","downloadSVG","svgElement","getElementById","svgData","XMLSerializer","serializeToString","svgBlob","Blob","svgUrl","URL","createObjectURL","downloadLink","createElement","href","download","appendChild","removeChild","submitUrl","_this4","_callee3","_context3","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","_v","staticStyle","white-space","font-weight","directives","rawName","expression","placeholder","$event","$$selectedVal","o","selected","_value","multiple","_l","option","domProps","_s","input","composing","ref","display","margin","border","for","num","editable","highlight-array","deep","overflow","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","Vue","use","Router","router","component","mode","config","productionTip","el","template","module","exports","version","main","jsnext:main","author","description","keywords","homepage","license","repository","scripts","clean","build:demo","build:dev","build:prod","build:test","build","lint","test:main","test:browser","test","prepare","dependencies","d3-hierarchy","devDependencies","babel-plugin-external-helpers","babel-preset-es2015-rollup","d3-selection-multi","eslint","jsdom","npm-run-all","rollup","rollup-plugin-babel","rollup-plugin-commonjs","rollup-plugin-copy","rollup-plugin-json","rollup-plugin-node-resolve","rollup-plugin-uglify","uglify-es"],"mappings":"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","file":"static/js/app.4d2c0100c10b5cb2afa6.js","sourcesContent":["/* eslint-disable */\r\nimport * as dagre from 'dagre';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nexport function getBoxLayout(data) {\r\n  let graph = new dagre.graphlib.Graph({ compound: true });\r\n  graph.setGraph({});\r\n  // eslint-disable-next-line\r\n  graph.setDefaultEdgeLabel(() => { return {}; });\r\n  // get bf for all\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bf[i];\r\n      const nodeId = `bf-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const body = node.body;\r\n      graph.setNode(nodeId, { label, value, type, body });\r\n      // add auxi node for each bf\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // get pif\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const node = data.pif[i];\r\n      const nodeId = `pif-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get pof\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const node = data.pof[i];\r\n      const nodeId = `pof-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opo\r\n  if ('opo' in data) {\r\n    for (let i = 0; i < data.opo.length; i += 1) {\r\n      const node = data.opo[i];\r\n      const nodeId = `opo-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opi\r\n  if ('opi' in data) {\r\n    for (let i = 0; i < data.opi.length; i += 1) {\r\n      const node = data.opi[i];\r\n      const nodeId = `opi-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set edges wff\r\n  if ('wff' in data) {\r\n    for (let i = 0; i < data.wff.length; i += 1) {\r\n      const edge = data.wff[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopi\r\n  if ('wfopi' in data) {\r\n    for (let i = 0; i < data.wfopi.length; i += 1) {\r\n      const edge = data.wfopi[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopo\r\n  if ('wfopo' in data) {\r\n    for (let i = 0; i < data.wfopo.length; i += 1) {\r\n      const edge = data.wfopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wopio\r\n  if ('wopio' in data) {\r\n    for (let i = 0; i < data.wopio.length; i += 1) {\r\n      const edge = data.wopio[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set bc\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bc.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bc[i];\r\n      const nodeId = `bc-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const condition = node.condition;\r\n      const body_if = node.body_if;\r\n      const body_else = node.body_else;\r\n      graph.setNode(nodeId, { label, value, type, condition, body_if, body_else });\r\n      // add auxi node for each bc\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // set pic\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const node = data.pic[i];\r\n      const nodeId = `pic-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set poc\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const node = data.poc[i];\r\n      const nodeId = `poc-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set wfc\r\n  if ('wfc' in data) {\r\n    for (let i = 0; i < data.wfc.length; i += 1) {\r\n      const edge = data.wfc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcf\r\n  if ('wcf' in data) {\r\n    for (let i = 0; i < data.wcf.length; i += 1) {\r\n      const edge = data.wcf[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcc\r\n  if ('wcc' in data) {\r\n    for (let i = 0; i < data.wcc.length; i += 1) {\r\n      const edge = data.wcc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopi\r\n  if ('wcopi' in data) {\r\n    for (let i = 0; i < data.wcopi.length; i += 1) {\r\n      const edge = data.wcopi[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopo\r\n  if ('wcopo' in data) {\r\n    for (let i = 0; i < data.wcopo.length; i += 1) {\r\n      const edge = data.wcopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  if ('bl' in data) {\r\n    for (let i = 0; i < data.bl.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bl[i];\r\n      const nodeId = `bl-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const condition = node.condition;\r\n      const pre = node.pre;\r\n      const body = node.body;\r\n      const post = node.post;\r\n      graph.setNode(nodeId, { label, value, type, condition, pre, body, post });\r\n      // add auxi node for each bl\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // set pil\r\n  if ('pil' in data) {\r\n    for (let i = 0; i < data.pil.length; i += 1) {\r\n      const node = data.pil[i];\r\n      const nodeId = `pil-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set pol\r\n  if ('pol' in data) {\r\n    for (let i = 0; i < data.pol.length; i += 1) {\r\n      const node = data.pol[i];\r\n      const nodeId = `pol-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set wfl\r\n  if ('wfl' in data) {\r\n    for (let i = 0; i < data.wfl.length; i += 1) {\r\n      const edge = data.wfl[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcl\r\n  if ('wcl' in data) {\r\n    for (let i = 0; i < data.wcl.length; i += 1) {\r\n      const edge = data.wcl[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlopi\r\n  if ('wlopi' in data) {\r\n    for (let i = 0; i < data.wlopi.length; i += 1) {\r\n      const edge = data.wlopi[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wll\r\n  if ('wll' in data) {\r\n    for (let i = 0; i < data.wll.length; i += 1) {\r\n      const edge = data.wll[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlf\r\n  if ('wlf' in data) {\r\n    for (let i = 0; i < data.wlf.length; i += 1) {\r\n      const edge = data.wlf[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlc\r\n  if ('wlc' in data) {\r\n    for (let i = 0; i < data.wlc.length; i += 1) {\r\n      const edge = data.wlc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlopo\r\n  if ('wlopo' in data) {\r\n    for (let i = 0; i < data.wlopo.length; i += 1) {\r\n      const edge = data.wlopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // add auxi edges\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const nodeID = `pif-${i}`;\r\n      const pifNode = data.pif[i];\r\n      const auxID = `aux-bf-${pifNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const nodeID = `pof-${i}`;\r\n      const pofNode = data.pof[i];\r\n      const auxID = `aux-bf-${pofNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const nodeID = `pic-${i}`;\r\n      const picNode = data.pic[i];\r\n      const auxID = `aux-bc-${picNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const nodeID = `poc-${i}`;\r\n      const pocNode = data.poc[i];\r\n      const auxID = `aux-bc-${pocNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  if ('pil' in data) {\r\n    for (let i = 0; i < data.pil.length; i += 1) {\r\n      const nodeID = `pil-${i}`;\r\n      const pilNode = data.pil[i];\r\n      const auxID = `aux-bl-${pilNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('pol' in data) {\r\n    for (let i = 0; i < data.pol.length; i += 1) {\r\n      const nodeID = `pol-${i}`;\r\n      const polNode = data.pol[i];\r\n      const auxID = `aux-bl-${polNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  const bfNodes = graph.nodes().filter(node => node.startsWith('bf'));\r\n  const bcNodes = graph.nodes().filter(node => node.startsWith('bc'));\r\n  const blNodes = graph.nodes().filter(node => node.startsWith('bl'));\r\n  const opoNodes = graph.nodes().filter(node => node.startsWith('opo'));\r\n  const opiNodes = graph.nodes().filter(node => node.startsWith('opi'));\r\n  // const parentNodes = [...bcNodes, ...bfNodes, ...blNodes];\r\n  // const graph_aux = cloneDeep(graph);\r\n  // const superNodes = groupParentNodes(graph_aux, parentNodes);\r\n  // if (Object.keys(superNodes).length>1) {\r\n  //   graph = graph_aux;\r\n  // }\r\n  // console.log(graph);\r\n  // eslint-disable-next-line\r\n  // console.log(graph);\r\n  // execute layout calculation\r\n  graph.setGraph({ ranksep: 30, rankdir: 'BT' });\r\n  dagre.layout(graph);\r\n  console.log(graph);\r\n  // console.log(superNodes);\r\n  // if (Object.keys(superNodes).length>1000) {\r\n  //   arrangeSuperNodes(graph,superNodes);\r\n  // }\r\n\r\n  // get layout result\r\n  const layout = {\r\n    nodes: {},\r\n    edges: [],\r\n  };\r\n  console.log(data);\r\n  graph.nodes().forEach((nodeId) => {\r\n    const node = graph.node(nodeId);\r\n    layout.nodes[nodeId] = {\r\n      x: node.x,\r\n      y: node.y,\r\n      width: node.width,\r\n      height: node.height,\r\n      label: node.label,\r\n      type: node.type,\r\n      value: node.value,\r\n      body: node.body,\r\n      condition: node.condition,\r\n      body_if: node.body_if,\r\n      body_else: node.body_else,\r\n      pre: node.pre,\r\n      post: node.post\r\n    };\r\n  });\r\n  graph.edges().forEach((edge, i) => {\r\n    layout.edges.push({\r\n      id: i,\r\n      source: edge.v,\r\n      target: edge.w,\r\n    });\r\n  });\r\n  // console.log(layout);\r\n  // set attributes for bf\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      const bfNodeId = `bf-${i}`;\r\n      if (('pif' in data) && ('pof' in data)) {\r\n        const pofNode = data.pof.find(node => node.box === i + 1);\r\n        const pifNode = data.pif.find(node => node.box === i + 1);\r\n        if (pofNode && pifNode) {\r\n          layout.nodes[bfNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bfNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bfNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bc.length; i += 1) {\r\n      const bcNodeId = `bc-${i}`;\r\n      if (('pic' in data) && ('poc' in data)) {\r\n        const pocNode = data.poc.find(node => node.box === i + 1);\r\n        const picNode = data.pic.find(node => node.box === i + 1);\r\n        if (pocNode && picNode) {\r\n          layout.nodes[bcNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bcNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bcNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n  if ('bl' in data) {\r\n    for (let i = 0; i < data.bl.length; i += 1) {\r\n      const blNodeId = `bl-${i}`;\r\n      if (('pil' in data) && ('pol' in data)) {\r\n        const polNode = data.pol.find(node => node.box === i + 1);\r\n        const pilNode = data.pil.find(node => node.box === i + 1);\r\n        if (polNode && pilNode) {\r\n          layout.nodes[blNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[blNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[blNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set meta data for layout\r\n  layout.meta = {};\r\n  layout.meta.name = data.b[0].name;\r\n  layout.meta.identifier = `${data.b[0].function_type}-${data.b[0].metadata}`;\r\n  layout.meta.type = data.b[0].function_type;\r\n  return layout;\r\n}\r\n\r\nclass UnionFind {\r\n  constructor(elements) {\r\n    this.parent = {};\r\n    elements.forEach(e => this.parent[e] = e);\r\n  }\r\n\r\n  find(x) {\r\n    if(this.parent[x] !== x) {\r\n      this.parent[x] = this.find(this.parent[x]);\r\n    }\r\n    return this.parent[x];\r\n  }\r\n\r\n  union(x, y) {\r\n    const parentX = this.find(x);\r\n    const parentY = this.find(y);\r\n    if(parentX !== parentY) {\r\n      this.parent[parentY] = parentX;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n  let nodes1 = [];\r\n  let nodes2 = [];\r\n\r\n  if (parentNode1.startsWith(\"opo\") || parentNode1.startsWith(\"opi\")) {\r\n    nodes1.push(parentNode1);\r\n  } else {\r\n    nodes1 = graph.children(parentNode1);\r\n  }\r\n\r\n  if (parentNode2.startsWith(\"opo\") || parentNode2.startsWith(\"opi\")) {\r\n    nodes2.push(parentNode2);\r\n  } else {\r\n    nodes2 = graph.children(parentNode2);\r\n  }\r\n\r\n  for (const node1 of nodes1) {\r\n    for (const node2 of nodes2) {\r\n      if (graph.edge(node1, node2) || graph.edge(node2, node1)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction groupParentNodes(graph, parentNodes) {\r\n  const uf = new UnionFind(parentNodes);\r\n  for(let i = 0; i < parentNodes.length; i++) {\r\n    for(let j = i+1; j < parentNodes.length; j++) {\r\n      if(isEdgeBetweenChildNodes(graph, parentNodes[i], parentNodes[j])) {\r\n        uf.union(parentNodes[i], parentNodes[j]);\r\n      }\r\n    }\r\n  }\r\n  const groups = {};\r\n  parentNodes.forEach(node => {\r\n    const root = uf.find(node);\r\n    if(!groups[root]) {\r\n      groups[root] = [];\r\n    }\r\n    groups[root].push(node);\r\n  });\r\n\r\n  let superNodeCounter = 0;\r\n  const superNodes = {};\r\n  let previousSuperNodeId = null;\r\n  for (let root in groups) {\r\n    const superNodeId = `aux-super-${superNodeCounter}`;\r\n    const label = `aux-super`;\r\n    const virtual = true;\r\n    graph.setNode(superNodeId, { label, virtual });\r\n    groups[root].forEach(node => graph.setParent(node, superNodeId));\r\n    superNodes[superNodeId] = groups[root];\r\n    \r\n    // Now there is a bug of dagre, it can not set an edge between group nodes\r\n    if (previousSuperNodeId) {\r\n      // graph.setEdge(previousSuperNodeId, superNodeId);\r\n    }\r\n    previousSuperNodeId = superNodeId;\r\n    superNodeCounter++;\r\n  }\r\n\r\n  return superNodes;\r\n}\r\n\r\nfunction adjustChildNodesPosition(graph, parentNodeId, deltaX, deltaY) {\r\n  const children = graph.children(parentNodeId);\r\n  children.forEach(childId => {\r\n    const childNode = graph.node(childId);\r\n    \r\n    childNode.x += deltaX;\r\n    childNode.y += deltaY;\r\n\r\n    if (graph.children(childId).length>0){\r\n      adjustChildNodesPosition(graph, childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bf\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bc\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bl\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n  });\r\n}\r\n\r\nfunction adjustAuxNodesPosition(graph, auxNodeId, deltaX, deltaY) {\r\n  const auxNode = graph.node(auxNodeId);\r\n  auxNode.x += deltaX;\r\n  auxNode.y += deltaY;\r\n}\r\n\r\nfunction arrangeSuperNodes(graph, superNodes) {\r\n  const nodeSpacing = 50; // 超级节点之间的间距\r\n  let currentY = 0;\r\n  console.log(graph);\r\n  // 根据超级节点创建顺序进行排序\r\n  const superNodeIds = Object.keys(superNodes);\r\n  superNodeIds.sort((a, b) => parseInt(a.split('-')[2]) - parseInt(b.split('-')[2]));\r\n\r\n  // 获取第一个超级节点，保持其位置不变\r\n  const firstSuperNode = graph.node(superNodeIds[0]);\r\n  const firstSuperNodeCenterX = firstSuperNode.x + 100;\r\n  firstSuperNode.x += 100;\r\n  currentY = firstSuperNode.y;\r\n  adjustChildNodesPosition(graph, superNodeIds[0], 100, 0);\r\n\r\n  // 从第二个超级节点开始遍历，调整其位置\r\n  for (let i = 1; i < superNodeIds.length; i++) {\r\n    \r\n    const superNodeId = superNodeIds[i];\r\n    const preSuperNode = graph.node(superNodeIds[i-1]);\r\n    const superNode = graph.node(superNodeId);\r\n    currentY += nodeSpacing + superNode.height / 2 + preSuperNode.height / 2;\r\n\r\n    // 计算移动距离\r\n    const deltaX = firstSuperNodeCenterX - superNode.x;\r\n    const deltaY = currentY - superNode.y;\r\n\r\n    // 将超级节点移动到新的中心点\r\n    superNode.x += deltaX;\r\n    superNode.y += deltaY;\r\n\r\n    const moveFlag = false;\r\n    // graph.children(superNodeId).forEach(childId => {\r\n    //   if (childId.split)\r\n    // })\r\n    // 更新超级节点的子节点的坐标\r\n    adjustChildNodesPosition(graph, superNodeId, deltaX, deltaY);\r\n\r\n    // 更新下一个超级节点的y坐标\r\n    // currentY += superNode.height + nodeSpacing;\r\n  }\r\n}\r\n\r\n\r\n\r\n// function isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n//   // 获取父节点的子节点\r\n//   const children1 = graph.children(parentNode1);\r\n//   const children2 = graph.children(parentNode2);\r\n\r\n//   // 遍历每一对子节点，检查它们之间是否存在边缘\r\n//   for (const child1 of children1) {\r\n//     for (const child2 of children2) {\r\n//       if (graph.edge(child1, child2) || graph.edge(child2, child1)) {\r\n//         // 如果找到了边缘，返回true\r\n//         return true;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 如果没有找到边缘，返回false\r\n//   return false;\r\n// }\r\n\r\n// function groupParentNodesWithConnectedChildren(graph, parentNodeIds) {\r\n//   // 为每个父节点创建一个集合\r\n//   const sets = new Map(parentNodeIds.map(id => [id, new Set([id])]));\r\n\r\n//   // 超级父节点计数器\r\n//   let superParentCounter = 0;\r\n\r\n//   // 对每一对父节点进行迭代\r\n//   for (let i = 0; i < parentNodeIds.length; i++) {\r\n//     for (let j = i + 1; j < parentNodeIds.length; j++) {\r\n//       // 检查父节点的子节点之间是否存在连接\r\n//       if (isEdgeBetweenChildNodes(graph, parentNodeIds[i], parentNodeIds[j])) {\r\n//         // 如果存在连接，将这两个节点的集合合并\r\n//         const set1 = sets.get(parentNodeIds[i]);\r\n//         const set2 = sets.get(parentNodeIds[j]);\r\n\r\n//         const newSet = new Set([...set1, ...set2]);\r\n\r\n//         // 更新集合映射\r\n//         newSet.forEach(id => sets.set(id, newSet));\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 创建超级父节点\r\n//   const visited = new Set();\r\n//   const superParentNodes = [];\r\n\r\n//   sets.forEach((set, id) => {\r\n//     // 忽略已经访问过的节点\r\n//     if (visited.has(id)) return;\r\n\r\n//     const superParentNodeId = `aux-super-${superParentCounter++}`;\r\n\r\n//     // 设置超级父节点的子节点\r\n//     set.forEach(id => {\r\n//       graph.setParent(id, superParentNodeId);\r\n//       visited.add(id);\r\n//     });\r\n\r\n//     superParentNodes.push(superParentNodeId);\r\n//   });\r\n\r\n//   return superParentNodes;\r\n// }\r\n\r\n\r\nexport function getTreeLayout(data) {\r\n  const g = new dagre.graphlib.Graph({ compound: true });\r\n  g.setGraph({});\r\n  // eslint-disable-next-line\r\n  g.setDefaultEdgeLabel(() => { return {}; });\r\n\r\n  g.setGraph(data.graph);\r\n\r\n  data.subgraphs.forEach((subgraph) => {\r\n    const filteredAttributes = {};\r\n    Object.keys(subgraph.attributes).forEach((key) => {\r\n      if (key === 'label') {\r\n        filteredAttributes[key] = subgraph.attributes[key];\r\n      }\r\n    });\r\n    g.setNode(subgraph.name, filteredAttributes);\r\n    subgraph.nodes.forEach((node) => {\r\n      const filteredAttributesN = {};\r\n      Object.keys(node.attributes).forEach((key) => {\r\n        if (key === 'label') {\r\n          filteredAttributesN[key] = node.attributes[key];\r\n        }\r\n      });\r\n      g.setNode(node.name, filteredAttributesN);\r\n      g.setParent(node.name, subgraph.name);\r\n    });\r\n  });\r\n\r\n  data.edges.forEach((edge) => {\r\n    g.setEdge(edge.source, edge.target);\r\n  });\r\n\r\n  dagre.layout(g);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/layout.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\n\r\nexport function drawLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color, direction) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n  \r\n    // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n    let sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    let sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    let targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    let targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    let targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    let targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    let dx1 = targetX1 - sourceX;\r\n    let dy1 = targetY1 - sourceY;\r\n    let dx2 = targetX2 - sourceX;\r\n    let dy2 = targetY2 - sourceY;\r\n    let controlPoint11 = {};\r\n    let controlPoint12 = {};\r\n    let controlPoint21 = {};\r\n    let controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n\r\n    if (direction === \"down\") {\r\n      sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width')) / 2;\r\n      sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height'));\r\n      targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n      targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0] + Number(d3.select(\"#\" + targetid).attr('width'));\r\n      targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n      targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n      dx1 = targetX1 - sourceX;\r\n      dy1 = targetY1 - sourceY;\r\n      dx2 = targetX2 - sourceX;\r\n      dy2 = targetY2 - sourceY;\r\n      controlPoint11 = {};\r\n      controlPoint12 = {};\r\n      controlPoint21 = {};\r\n      controlPoint22 = {};\r\n      controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n      controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n      controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n      controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n      controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n      controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n      controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n      controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n    }\r\n  \r\n    const g = d3.select('svg').select('#sumGroup').append(\"g\").attr('id', 'line' + String(body_num_source) + '_' + String(body_num_target)).attr('class', 'drawer');\r\n  \r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n      .attr(\"targetid\", targetid)\r\n      .attr(\"locationTransform\", locationTransform)\r\n      .attr(\"body_num_source\", body_num_source)\r\n      .attr(\"body_num_target\", body_num_target)\r\n      .attr(\"color\", color);\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    if (direction===\"down\") {\r\n      data1 = [\r\n        {x: sourceX, y: sourceY},\r\n        {x: controlPoint11.x, y: controlPoint11.y},\r\n        {x: controlPoint12.x, y: controlPoint12.y},\r\n        {x: targetX1 + paddingL, y: targetY1}\r\n      ];\r\n  \r\n      data2 = [\r\n        {x: sourceX, y: sourceY},\r\n        {x: controlPoint21.x, y: controlPoint21.y},\r\n        {x: controlPoint22.x, y: controlPoint22.y},\r\n        {x: targetX2 - paddingL, y: targetY2}\r\n      ];\r\n    }\r\n    console.log(data1,data2);\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    if (direction===\"down\") {\r\n      // 创建一个线性比例尺来对应y值\r\n      xScale1 = d3.scaleLinear()\r\n      .domain(d3.extent(data1, function(d) { return d.y; }))\r\n      .range([0, dy1]);\r\n\r\n      // 根据y值找到相应的数据点\r\n      bisect1 = d3.bisector(function(d) { return d.y; }).left;\r\n\r\n      // 创建一个线性比例尺来对应y值\r\n      xScale2 = d3.scaleLinear()\r\n      .domain(d3.extent(data2, function(d) { return d.y; }))\r\n      .range([0, dy1]);\r\n\r\n      // 根据y值找到相应的数据点\r\n      bisect2 = d3.bisector(function(d) { return d.y; }).left;\r\n    }\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx2), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx2), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    if (direction===\"down\") {\r\n      area1 = d3.area()\r\n        .y(function(d) { return d.y; })\r\n        .x0( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect1(points1, xScale1.invert(yValue));\r\n          if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points1[indexOfNode - 1];\r\n          let pointAfter = points1[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy1), 0.38);\r\n          return d.x - Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .x1( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect1(points1, xScale1.invert(yValue));\r\n          if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points1[indexOfNode - 1];\r\n          let pointAfter = points1[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy1), 0.38);\r\n          return d.x + Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .curve(d3.curveBasis);\r\n\r\n      area2 = d3.area()\r\n        .y(function(d) { return d.y; })\r\n        .x0( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect2(points2, xScale2.invert(yValue));\r\n          if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points2[indexOfNode - 1];\r\n          let pointAfter = points2[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy2), 0.38);\r\n          return d.x - Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .x1(d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect2(points2, xScale2.invert(yValue));\r\n          if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points2[indexOfNode - 1];\r\n          let pointAfter = points2[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy2), 0.38);\r\n          return d.x + Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .curve(d3.curveBasis);\r\n    }\r\n    // console.log(area1,area2);\r\n\r\n    let path1 = g.append(\"path\")\r\n    .datum(data1)\r\n    .attr(\"d\", area1)\r\n    .attr('id', 'path1')\r\n    .attr(\"fill\", color);\r\n  \r\n    let path2 = g.append(\"path\")\r\n    .datum(data2)\r\n    .attr(\"d\", area2)\r\n    .attr('id', 'path2')\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          currentNode.attr(\"data-opened\", true);\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.append(\"circle\")\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.append(\"line\")\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  \r\nexport function updateLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color, lineID, direction) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n\r\n    let sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    let sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    let targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    let targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    let targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    let targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    let dx1 = targetX1 - sourceX;\r\n    let dy1 = targetY1 - sourceY;\r\n    let dx2 = targetX2 - sourceX;\r\n    let dy2 = targetY2 - sourceY;\r\n    let controlPoint11 = {};\r\n    let controlPoint12 = {};\r\n    let controlPoint21 = {};\r\n    let controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n    if (direction === \"down\") {\r\n      sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width')) / 2;\r\n      sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height'));\r\n      targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n      targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0] + Number(d3.select(\"#\" + targetid).attr('width'));\r\n      targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n      targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n      dx1 = targetX1 - sourceX;\r\n      dy1 = targetY1 - sourceY;\r\n      dx2 = targetX2 - sourceX;\r\n      dy2 = targetY2 - sourceY;\r\n      controlPoint11 = {};\r\n      controlPoint12 = {};\r\n      controlPoint21 = {};\r\n      controlPoint22 = {};\r\n      controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n      controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n      controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n      controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n      controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n      controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n      controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n      controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n    }\r\n    const g = d3.select('#' + lineID);\r\n\r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n        .attr(\"targetid\", targetid)\r\n        .attr(\"locationTransform\", locationTransform)\r\n        .attr(\"body_num_source\", body_num_source)\r\n        .attr(\"body_num_target\", body_num_target)\r\n        .attr(\"color\", color);\r\n\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    if (direction===\"down\") {\r\n      data1 = [\r\n        {x: sourceX, y: sourceY},\r\n        {x: controlPoint11.x, y: controlPoint11.y},\r\n        {x: controlPoint12.x, y: controlPoint12.y},\r\n        {x: targetX1 + paddingL, y: targetY1}\r\n      ];\r\n  \r\n      data2 = [\r\n        {x: sourceX, y: sourceY},\r\n        {x: controlPoint21.x, y: controlPoint21.y},\r\n        {x: controlPoint22.x, y: controlPoint22.y},\r\n        {x: targetX2 - paddingL, y: targetY2}\r\n      ];\r\n    }\r\n\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    if (direction===\"down\") {\r\n      // 创建一个线性比例尺来对应y值\r\n      xScale1 = d3.scaleLinear()\r\n      .domain(d3.extent(data1, function(d) { return d.y; }))\r\n      .range([0, dy1]);\r\n\r\n      // 根据y值找到相应的数据点\r\n      bisect1 = d3.bisector(function(d) { return d.y; }).left;\r\n\r\n      // 创建一个线性比例尺来对应y值\r\n      xScale2 = d3.scaleLinear()\r\n      .domain(d3.extent(data2, function(d) { return d.y; }))\r\n      .range([0, dy1]);\r\n\r\n      // 根据y值找到相应的数据点\r\n      bisect2 = d3.bisector(function(d) { return d.y; }).left;\r\n    }\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    if (direction===\"down\") {\r\n      area1 = d3.area()\r\n        .y(function(d) { return d.y; })\r\n        .x0( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect1(points1, xScale1.invert(yValue));\r\n          if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points1[indexOfNode - 1];\r\n          let pointAfter = points1[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy1), 0.38);\r\n          return d.x - Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .x1( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect1(points1, xScale1.invert(yValue));\r\n          if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points1[indexOfNode - 1];\r\n          let pointAfter = points1[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy1), 0.38);\r\n          return d.x + Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .curve(d3.curveBasis);\r\n\r\n      area2 = d3.area()\r\n        .y(function(d) { return d.y; })\r\n        .x0( d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect2(points2, xScale2.invert(yValue));\r\n          if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points2[indexOfNode - 1];\r\n          let pointAfter = points2[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy2), 0.38);\r\n          return d.x - Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .x1(d => {\r\n          const yValue = d.y;\r\n          let indexOfNode = bisect2(points2, xScale2.invert(yValue));\r\n          if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n          if(indexOfNode < 1) indexOfNode = 1;\r\n          let pointBefore = points2[indexOfNode - 1];\r\n          let pointAfter = points2[indexOfNode + 1];\r\n          let slope = Math.abs((pointAfter.x - pointBefore.x) / (pointAfter.y - pointBefore.y));\r\n          // let slope = 0;\r\n          let linewidth = 6 * Math.pow(((d.y - sourceY + 2) / dy2), 0.38);\r\n          return d.x + Math.sqrt(1+slope**2) * linewidth;\r\n        })\r\n        .curve(d3.curveBasis);\r\n    }\r\n    let path1 = g.select(\"#path1\")\r\n    .datum(data1)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area1)\r\n    .attr(\"fill\", color);\r\n\r\n    let path2 = g.select(\"#path2\")\r\n    .datum(data2)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area2)\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.select(\"circle\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.select(\"line\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n      \r\n    })\r\n}\r\n\r\nexport function drawLinesDashArrow(treeLayout, sourceID, targetID, color, label, direction) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  const sourceFrame = \"frame\" + sourceID;\r\n  const targetFrame = \"frame\" + targetID;\r\n  let dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  let dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  let sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  let sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  let targetX = sourceX + dx;\r\n  let targetY = sourceY + dy;\r\n  if (direction===\"down\") {\r\n    sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width')) / 2;\r\n    sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height'));\r\n    dx = treeLayout[targetID][0] - treeLayout[sourceID][0];\r\n    dy = treeLayout[targetID][1] - treeLayout[sourceID][1] - Number(d3.select(\"#\" + sourceFrame).attr('height'));\r\n    targetX = sourceX + dx;\r\n    targetY = sourceY + dy;\r\n  }\r\n  const g = d3.select('svg').select('#sumGroup').append(\"g\").attr('id', 'line' + String(sourceID) + '_' + String(targetID)).attr(\"line-type\", \"dashed\").attr('class', 'drawer');\r\n  const paddingL = 17;\r\n  g.append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"markerWidth\", 5)  // 原来的一半\r\n    .attr(\"markerHeight\", 3.5)  // 原来的一半\r\n    .attr(\"refX\", 5)  // 调整参考点以适应新的大小\r\n    .attr(\"refY\", 1.75)  // 调整参考点以适应新的大小\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,0 L5,1.75 L0,3.5 Z\")  // 缩小箭头的路径\r\n  .style(\"fill\", \"gray\");\r\n  g.append(\"line\")\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.append(\"text\")\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\r\n\r\nexport function updateLinesDashArrow(treeLayout, sourceID, targetID, color, label, lineID, direction) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  let sourceFrame = \"frame\" + sourceID;\r\n  let targetFrame = \"frame\" + targetID;\r\n  let dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  let dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  let sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  let sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  let targetX = sourceX + dx;\r\n  let targetY = sourceY + dy;\r\n  if (direction===\"down\") {\r\n    sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width')) / 2;\r\n    sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height'));\r\n    dx = treeLayout[targetID][0] - treeLayout[sourceID][0];\r\n    dy = treeLayout[targetID][1] - treeLayout[sourceID][1] - Number(d3.select(\"#\" + sourceFrame).attr('height'));\r\n    targetX = sourceX + dx;\r\n    targetY = sourceY + dy;\r\n  }\r\n  const g = d3.select('svg').select('#sumGroup').select(\"#\" + lineID);\r\n  g.select(\"line\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.select(\"text\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawlines.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\n\r\nexport function arraysAreEqual(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < array1.length; i++) {\r\n        if (array1[i] !== array2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function loopOverHierarchy(d, callback) {\r\n    callback(d);\r\n    if (d.children) d.children.forEach(c => loopOverHierarchy(c, callback));\r\n    if (d._children) d._children.forEach(c => loopOverHierarchy(c, callback));\r\n  }\r\n\r\nfunction getChildren(hierarchies, childrens) {\r\n  console.log(childrens);\r\n  childrens.forEach(function(element){\r\n    var children = hierarchies;\r\n    var zoomin = 2;\r\n    element.path.forEach(function(node){\r\n        if (Number(node) !== 0) {\r\n            if (zoomin <= element.path.length - 1) {\r\n                // debugger\r\n                const filterChild = children.children.filter(function(item){\r\n                    return Number(item.name) === Number(node);\r\n                })[0]\r\n                zoomin += 1\r\n                children = filterChild;\r\n            }\r\n            else if (node === element.path[element.path.length - 1]) {\r\n                // debugger\r\n                if (children.hasOwnProperty(\"children\")) {\r\n                    children.children.push(element);\r\n                    sortByOName(children.children);\r\n                } else {\r\n                    children.children = [ element ];\r\n                }\r\n            }\r\n        }\r\n  })\r\n})\r\n}\r\n\r\nexport function findChildrenAtSameLevel(arr) {\r\n  const paths = {};\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const path = arr[i];\r\n    const lastIndex = path.lastIndexOf('-');\r\n\r\n    if (lastIndex !== -1) {\r\n      const parentPath = path.slice(0, lastIndex);\r\n\r\n      if (!paths[parentPath]) {\r\n        paths[parentPath] = [];\r\n      }\r\n\r\n      paths[parentPath].push(path);\r\n    }\r\n  }\r\n\r\n  const similarPaths = Object.values(paths).filter(pathGroup => pathGroup.length > 1);\r\n\r\n  return similarPaths;\r\n}\r\n\r\nfunction sortByOName(arr) {\r\n    return arr.sort((a, b) => {\r\n        const aNums = a.oName.split('-').map(Number);\r\n        const bNums = b.oName.split('-').map(Number);\r\n\r\n        // 根据数字依次进行比较\r\n        for(let i = 0; i < aNums.length; i++) {\r\n            if (aNums[i] < bNums[i]) {\r\n                return -1;\r\n            } else if (aNums[i] > bNums[i]) {\r\n                return 1;\r\n            }\r\n            // 如果相等，继续比较下一个数字\r\n        }\r\n\r\n        // 如果所有数字都相等，返回0表示不需要改变顺序\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport function autoTranslate() {\r\n    let gs = d3.select('svg').selectAll('g');\r\n\r\n    let tops = [], lefts = [], rights = [], bottoms = [];\r\n    \r\n    gs.each(function() {\r\n        let rect = this.getBoundingClientRect();\r\n    \r\n        tops.push(rect.top);\r\n        lefts.push(rect.left);\r\n        rights.push(rect.right);\r\n        bottoms.push(rect.bottom);\r\n    });\r\n    \r\n    // 计算缩放前的矩形大小\r\n    let initialWidth = Math.max(...rights) - Math.min(...lefts);\r\n    let initialHeight = Math.max(...bottoms) - Math.min(...tops);\r\n    \r\n    // 设置你想要的矩形大小\r\n    let desiredWidth = 2000;  // 请替换为你想要的宽度\r\n    let desiredHeight = 2000;  // 请替换为你想要的高度\r\n    \r\n    // 计算缩放因子，这里使用相同的缩放因子以保持长宽比不变\r\n    let scale = Math.min(desiredWidth / initialWidth, desiredHeight / initialHeight);\r\n    \r\n    // 应用缩放\r\n    gs.attr('transform', (d, i, nodes) => {\r\n        // 获取原有的 transform 值\r\n        let originalTransform = d3.select(nodes[i]).attr('transform');\r\n        let translateValues = originalTransform.match(/translate\\(([^)]+)\\)/);\r\n    \r\n        let originalX = 0, originalY = 0;\r\n    \r\n        if (translateValues) {\r\n            [originalX, originalY] = translateValues[1].split(',').map(Number);\r\n        }\r\n    \r\n        // 保持平移不变，应用缩放\r\n        return `translate(${originalX}, ${originalY})`;\r\n    });\r\n}\r\n\r\nexport function computeBoundingRectangle(shapes) {\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    const ranksep = 37;\r\n    \r\n    for (const key in shapes) {\r\n        const node = shapes[key];\r\n        const [type, index] = key.split(\"-\");\r\n        const isBfNode = (type === \"bf\");\r\n        const isPofNode = (type === \"pof\");\r\n        const isPifNode = (type === \"pif\");\r\n        const isAuxNode = (type === \"aux\");\r\n        const isOpoNode = (type === 'opo');\r\n        const isOpiNode = (type === 'opi');\r\n        const isBcNode = (type === \"bc\");\r\n        const isPocNode = (type === \"poc\");\r\n        const isPicNode = (type === \"pic\");\r\n        const isBlNode = (type === \"bl\");\r\n        const isPolNode = (type === \"pol\");\r\n        const isPilNode = (type === \"pil\");\r\n        if (isBfNode||isBcNode||isBlNode) {\r\n            if(node.width===undefined || node.height===undefined){\r\n                continue;\r\n            }\r\n            if (node.type == \"LITERAL\") {\r\n                if (node.fullBox) {\r\n                    minX = Math.min(minX, node.x - node.width / 2);\r\n                    minY = Math.min(minY, node.y - node.height / 2 + ranksep);\r\n                    maxX = Math.max(maxX, node.x + node.width / 2);\r\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\r\n                } else {\r\n                    minX = Math.min(minX, node.x - node.width / 2 + ranksep / 2);\r\n                    minY = Math.min(minY, node.y - node.height / 2 - ranksep);\r\n                    maxX = Math.max(maxX, node.x + node.width / 2 - ranksep / 2);\r\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\r\n                }\r\n            } else {\r\n                if (node.fullBox) {\r\n                    minX = Math.min(minX, node.x - node.width / 2);\r\n                    minY = Math.min(minY, node.y - node.height / 2 + ranksep);\r\n                    maxX = Math.max(maxX, node.x + node.width / 2);\r\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\r\n                } else {\r\n                    minX = Math.min(minX, node.x - node.width / 2);\r\n                    minY = Math.min(minY, node.y - node.height / 2 - ranksep);\r\n                    maxX = Math.max(maxX, node.x + node.width / 2);\r\n                    maxY = Math.max(maxY, node.y + node.height / 2 - ranksep);\r\n                }\r\n            }\r\n        } else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode || isPilNode || isPolNode) {\r\n            minX = Math.min(minX, node.x - node.width / 2);\r\n            minY = Math.min(minY, node.y - node.height / 2);\r\n            maxX = Math.max(maxX, node.x + node.width / 2);\r\n            maxY = Math.max(maxY, node.y + node.height / 2);\r\n        }\r\n    }\r\n    return {\r\n        x: minX,\r\n        y: minY,\r\n        width: maxX - minX,\r\n        height: maxY - minY\r\n    };\r\n}\r\n\r\nexport function getOuterBox(bbox, padding, ranksep, nodes) {\r\n    let x;\r\n    let y;\r\n    let width;\r\n    let height;\r\n    if ('opo-0' in nodes && 'opi-0' in nodes){\r\n        // full\r\n        x = bbox.x - padding;\r\n        y = bbox.y - padding + ranksep;\r\n        width = bbox.width + 2 * padding;\r\n        height = bbox.height + 2 * padding - 2* ranksep;\r\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\r\n        // bottom\r\n        x = bbox.x - padding;\r\n        y = bbox.y - padding - ranksep / 10;\r\n        width = bbox.width + 2 * padding;\r\n        height = bbox.height + 2 * padding - ranksep;\r\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\r\n        // top\r\n        x = bbox.x - padding;\r\n        y = bbox.y - padding + ranksep * 2;\r\n        width = bbox.width + 2 * padding;\r\n        height = bbox.height + 2 * padding - ranksep;\r\n    } else {\r\n        // empty\r\n        x = bbox.x - padding;\r\n        y = bbox.y - padding;\r\n        width = bbox.width + 2 * padding;\r\n        height = bbox.height + 2 * padding;\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function getHierarchy(spaceY) {\r\n    var hierarchies = {};\r\n    const childrens = [];\r\n    const gs = d3.selectAll('.drawer').each(function(d, i){\r\n        const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n        const direction = d3.select(this).attr('direction');\r\n        if (nodeID.split('_').length !== 2) {\r\n        const routes = nodeID.split(\"-\");\r\n        const currentID = routes[routes.length - 1];\r\n        if (currentID==='0') {\r\n            hierarchies.name = Number(currentID);\r\n            hierarchies.oName = nodeID;\r\n            hierarchies.path = routes;\r\n            hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n            hierarchies.direction = direction;\r\n        } else {\r\n            const temp = {}\r\n            temp.name = Number(currentID);\r\n            temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n            temp.path = routes;\r\n            temp.oName = nodeID;\r\n            temp.direction = direction;\r\n            childrens.push(temp);\r\n        }\r\n        }\r\n    })\r\n    childrens.sort(function(a,b){\r\n        return a.path.length - b.path.length;\r\n    })\r\n    getChildren(hierarchies, childrens);\r\n    loopOverHierarchy(hierarchies, d => {\r\n        if (Array.isArray(d.size)) {\r\n        if (!d._size) d._size = d.size.slice();\r\n        d.size = d._size.slice().reverse();\r\n        }\r\n    });\r\n    return hierarchies;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utilities.js","/* eslint-disable */\r\nimport {hierarchy} from 'd3-hierarchy';\r\n\r\nconst defaults = Object.freeze({\r\n  children: data => data.children,\r\n  nodeSize: node => node.data.size,\r\n  spacing: 0,\r\n});\r\n\r\n// Create a layout function with customizable options. Per D3-style, the\r\n// options can be set at any time using setter methods. The layout function\r\n// will compute the tree node positions based on the options in effect at the\r\n// time it is called.\r\nexport default function flextree(options) {\r\n  const opts = Object.assign({}, defaults, options);\r\n  function accessor(name) {\r\n    const opt = opts[name];\r\n    return typeof opt === 'function' ? opt : () => opt;\r\n  }\r\n\r\n  function layout(tree) {\r\n    const wtree = wrap(getWrapper(), tree, node=>node.children);\r\n    wtree.update();\r\n    return wtree.data;\r\n  }\r\n\r\n  function getFlexNode() {\r\n    const nodeSize = accessor('nodeSize');\r\n    const spacing = accessor('spacing');\r\n    return class FlexNode extends hierarchy.prototype.constructor {\r\n      constructor(data) {\r\n        super(data);\r\n      }\r\n      copy() {\r\n        const c = wrap(this.constructor, this, node=>node.children);\r\n        c.each(node => node.data = node.data.data);\r\n        return c;\r\n      }\r\n      get size() { return nodeSize(this); }\r\n      spacing(oNode) { return spacing(this, oNode); }\r\n      get nodes() { return this.descendants(); }\r\n      get xSize() { return this.size[0]; }\r\n      get ySize() { return this.size[1]; }\r\n      get top() { return this.y; }\r\n      get bottom() { return this.y + this.ySize; }\r\n      get left() { return this.x - this.xSize / 2; }\r\n      get right() { return this.x + this.xSize / 2; }\r\n      get root() {\r\n        const ancs = this.ancestors();\r\n        return ancs[ancs.length - 1];\r\n      }\r\n      get numChildren() {\r\n        return this.hasChildren ? this.children.length : 0;\r\n      }\r\n      get hasChildren() { return !this.noChildren; }\r\n      get noChildren() { return this.children === null; }\r\n      get firstChild() {\r\n        return this.hasChildren ? this.children[0] : null;\r\n      }\r\n      get lastChild() {\r\n        return this.hasChildren ? this.children[this.numChildren - 1] : null;\r\n      }\r\n      get extents() {\r\n        return (this.children || []).reduce(\r\n          (acc, kid) => FlexNode.maxExtents(acc, kid.extents),\r\n          this.nodeExtents);\r\n      }\r\n      get nodeExtents() {\r\n        return {\r\n          top: this.top,\r\n          bottom: this.bottom,\r\n          left: this.left,\r\n          right: this.right,\r\n        };\r\n      }\r\n      static maxExtents(e0, e1) {\r\n        return {\r\n          top: Math.min(e0.top, e1.top),\r\n          bottom: Math.max(e0.bottom, e1.bottom),\r\n          left: Math.min(e0.left, e1.left),\r\n          right: Math.max(e0.right, e1.right),\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n  function getWrapper() {\r\n    const FlexNode = getFlexNode();\r\n    const nodeSize = accessor('nodeSize');\r\n    const spacing = accessor('spacing');\r\n    return class extends FlexNode {\r\n      constructor(data) {\r\n        super(data);\r\n        Object.assign(this, {\r\n          x: 0, y: 0,\r\n          relX: 0, prelim: 0, shift: 0, change: 0,\r\n          lExt: this, lExtRelX: 0, lThr: null,\r\n          rExt: this, rExtRelX: 0, rThr: null,\r\n        });\r\n      }\r\n      get size() { return nodeSize(this.data); }\r\n      spacing(oNode) { return spacing(this.data, oNode.data); }\r\n      get x() { return this.data.x; }\r\n      set x(v) { this.data.x = v; }\r\n      get y() { return this.data.y; }\r\n      set y(v) { this.data.y = v; }\r\n      update() {\r\n        layoutChildren(this);\r\n        resolveX(this);\r\n        return this;\r\n      }\r\n    };\r\n  }\r\n\r\n  function wrap(FlexClass, treeData, children) {\r\n    const _wrap = (data, parent) => {\r\n      const node = new FlexClass(data);\r\n      Object.assign(node, {\r\n        parent,\r\n        depth: parent === null ? 0 : parent.depth + 1,\r\n        height: 0,\r\n        length: 1,\r\n      });\r\n      const kidsData = children(data) || [];\r\n      node.children = kidsData.length === 0 ? null\r\n        : kidsData.map(kd => _wrap(kd, node));\r\n      if (node.children) {\r\n        Object.assign(node, node.children.reduce(\r\n          (hl, kid) => ({\r\n            height: Math.max(hl.height, kid.height + 1),\r\n            length: hl.length + kid.length,\r\n          }), node\r\n        ));\r\n      }\r\n      return node;\r\n    };\r\n    return _wrap(treeData, null);\r\n  }\r\n\r\n\r\n  Object.assign(layout, {\r\n    nodeSize(arg) {\r\n      return arguments.length ? (opts.nodeSize = arg, layout) : opts.nodeSize;\r\n    },\r\n    spacing(arg) {\r\n      return arguments.length ? (opts.spacing = arg, layout) : opts.spacing;\r\n    },\r\n    children(arg) {\r\n      return arguments.length ? (opts.children = arg, layout) : opts.children;\r\n    },\r\n    hierarchy(treeData, children) {\r\n      const kids = typeof children === 'undefined' ? opts.children : children;\r\n      return wrap(getFlexNode(), treeData, kids);\r\n    },\r\n    dump(tree) {\r\n      const nodeSize = accessor('nodeSize');\r\n      const _dump = i0 => node => {\r\n        const i1 = i0 + '  ';\r\n        const i2 = i0 + '    ';\r\n        const {x, y} = node;\r\n        const size = nodeSize(node);\r\n        const kids = (node.children || []);\r\n        const kdumps = (kids.length === 0) ? ' ' :\r\n          `,${i1}children: [${i2}${kids.map(_dump(i2)).join(i2)}${i1}],${i0}`;\r\n        return `{ size: [${size.join(', ')}],${i1}x: ${x}, y: ${y}${kdumps}},`;\r\n      };\r\n      return _dump('\\n')(tree);\r\n    },\r\n  });\r\n  return layout;\r\n}\r\n\r\nconst layoutChildren = (w, y = 0) => {\r\n  w.y = y;\r\n  (w.children || []).reduce((acc, kid) => {\r\n    const [i, lastLows] = acc;\r\n    layoutChildren(kid, w.y + w.ySize);\r\n    // The lowest vertical coordinate while extreme nodes still point\r\n    // in current subtree.\r\n    const lowY = (i === 0 ? kid.lExt : kid.rExt).bottom;\r\n    if (i !== 0) separate(w, i, lastLows);\r\n    const lows = updateLows(lowY, i, lastLows);\r\n    return [i + 1, lows];\r\n  }, [0, null]);\r\n  shiftChange(w);\r\n  positionRoot(w);\r\n  return w;\r\n};\r\n\r\n// Resolves the relative coordinate properties - relX and prelim --\r\n// to set the final, absolute x coordinate for each node. This also sets\r\n// `prelim` to 0, so that `relX` for each node is its x-coordinate relative\r\n// to its parent.\r\nconst resolveX = (w, prevSum, parentX) => {\r\n  // A call to resolveX without arguments is assumed to be for the root of\r\n  // the tree. This will set the root's x-coord to zero.\r\n  if (typeof prevSum === 'undefined') {\r\n    prevSum = -w.relX - w.prelim;\r\n    parentX = 0;\r\n  }\r\n  const sum = prevSum + w.relX;\r\n  w.relX = sum + w.prelim - parentX;\r\n  w.prelim = 0;\r\n  w.x = parentX + w.relX;\r\n  (w.children || []).forEach(k => resolveX(k, sum, w.x));\r\n  return w;\r\n};\r\n\r\n// Process shift and change for all children, to add intermediate spacing to\r\n// each child's modifier.\r\nconst shiftChange = w => {\r\n  (w.children || []).reduce((acc, child) => {\r\n    const [lastShiftSum, lastChangeSum] = acc;\r\n    const shiftSum = lastShiftSum + child.shift;\r\n    const changeSum = lastChangeSum + shiftSum + child.change;\r\n    child.relX += changeSum;\r\n    return [shiftSum, changeSum];\r\n  }, [0, 0]);\r\n};\r\n\r\n// Separates the latest child from its previous sibling\r\n/* eslint-disable complexity */\r\nconst separate = (w, i, lows) => {\r\n  const lSib = w.children[i - 1];\r\n  const curSubtree = w.children[i];\r\n  let rContour = lSib;\r\n  let rSumMods = lSib.relX;\r\n  let lContour = curSubtree;\r\n  let lSumMods = curSubtree.relX;\r\n  let isFirst = true;\r\n  while (rContour && lContour) {\r\n    if (rContour.bottom > lows.lowY) lows = lows.next;\r\n    // How far to the left of the right side of rContour is the left side\r\n    // of lContour? First compute the center-to-center distance, then add\r\n    // the \"spacing\"\r\n    const dist =\r\n      (rSumMods + rContour.prelim) - (lSumMods + lContour.prelim) +\r\n      rContour.xSize / 2 + lContour.xSize / 2 +\r\n      rContour.spacing(lContour);\r\n    if (dist > 0 || (dist < 0 && isFirst)) {\r\n      lSumMods += dist;\r\n      // Move subtree by changing relX.\r\n      moveSubtree(curSubtree, dist);\r\n      distributeExtra(w, i, lows.index, dist);\r\n    }\r\n    isFirst = false;\r\n    // Advance highest node(s) and sum(s) of modifiers\r\n    const rightBottom = rContour.bottom;\r\n    const leftBottom = lContour.bottom;\r\n    if (rightBottom <= leftBottom) {\r\n      rContour = nextRContour(rContour);\r\n      if (rContour) rSumMods += rContour.relX;\r\n    }\r\n    if (rightBottom >= leftBottom) {\r\n      lContour = nextLContour(lContour);\r\n      if (lContour) lSumMods += lContour.relX;\r\n    }\r\n  }\r\n  // Set threads and update extreme nodes. In the first case, the\r\n  // current subtree is taller than the left siblings.\r\n  if (!rContour && lContour) setLThr(w, i, lContour, lSumMods);\r\n  // In the next case, the left siblings are taller than the current subtree\r\n  else if (rContour && !lContour) setRThr(w, i, rContour, rSumMods);\r\n};\r\n/* eslint-enable complexity */\r\n\r\n// Move subtree by changing relX.\r\nconst moveSubtree = (subtree, distance) => {\r\n  subtree.relX += distance;\r\n  subtree.lExtRelX += distance;\r\n  subtree.rExtRelX += distance;\r\n};\r\n\r\nconst distributeExtra = (w, curSubtreeI, leftSibI, dist) => {\r\n  const curSubtree = w.children[curSubtreeI];\r\n  const n = curSubtreeI - leftSibI;\r\n  // Are there intermediate children?\r\n  if (n > 1) {\r\n    const delta = dist / n;\r\n    w.children[leftSibI + 1].shift += delta;\r\n    curSubtree.shift -= delta;\r\n    curSubtree.change -= dist - delta;\r\n  }\r\n};\r\n\r\nconst nextLContour = w => {\r\n  return w.hasChildren ? w.firstChild : w.lThr;\r\n};\r\n\r\nconst nextRContour = w => {\r\n  return w.hasChildren ? w.lastChild : w.rThr;\r\n};\r\n\r\nconst setLThr = (w, i, lContour, lSumMods) => {\r\n  const firstChild = w.firstChild;\r\n  const lExt = firstChild.lExt;\r\n  const curSubtree = w.children[i];\r\n  lExt.lThr = lContour;\r\n  // Change relX so that the sum of modifier after following thread is correct.\r\n  const diff = lSumMods - lContour.relX - firstChild.lExtRelX;\r\n  lExt.relX += diff;\r\n  // Change preliminary x coordinate so that the node does not move.\r\n  lExt.prelim -= diff;\r\n  // Update extreme node and its sum of modifiers.\r\n  firstChild.lExt = curSubtree.lExt;\r\n  firstChild.lExtRelX = curSubtree.lExtRelX;\r\n};\r\n\r\n// Mirror image of setLThr.\r\nconst setRThr = (w, i, rContour, rSumMods) => {\r\n  const curSubtree = w.children[i];\r\n  const rExt = curSubtree.rExt;\r\n  const lSib = w.children[i - 1];\r\n  rExt.rThr = rContour;\r\n  const diff = rSumMods - rContour.relX - curSubtree.rExtRelX;\r\n  rExt.relX += diff;\r\n  rExt.prelim -= diff;\r\n  curSubtree.rExt = lSib.rExt;\r\n  curSubtree.rExtRelX = lSib.rExtRelX;\r\n};\r\n\r\n// Position root between children, taking into account their modifiers\r\nconst positionRoot = w => {\r\n  if (w.hasChildren) {\r\n    const k0 = w.firstChild;\r\n    const kf = w.lastChild;\r\n    const prelim = (k0.prelim + k0.relX - k0.xSize / 2 +\r\n      kf.relX + kf.prelim + kf.xSize / 2 ) / 2;\r\n    Object.assign(w, {\r\n      prelim,\r\n      lExt: k0.lExt, lExtRelX: k0.lExtRelX,\r\n      rExt: kf.rExt, rExtRelX: kf.rExtRelX,\r\n    });\r\n  }\r\n};\r\n\r\n// Make/maintain a linked list of the indexes of left siblings and their\r\n// lowest vertical coordinate.\r\nconst updateLows = (lowY, index, lastLows) => {\r\n  // Remove siblings that are hidden by the new subtree.\r\n  while (lastLows !== null && lowY >= lastLows.lowY)\r\n    lastLows = lastLows.next;\r\n  // Prepend the new subtree.\r\n  return {\r\n    lowY,\r\n    index,\r\n    next: lastLows,\r\n  };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils/flextree.js","/* eslint-disable */\r\nimport { tree } from \"d3\";\r\nimport flextree from \"./flextree\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport { layout } from \"dagre\";\r\nimport { loopOverHierarchy } from \"./utilities\";\r\n\r\nexport default function getMultiTree(hierarchies) {\r\n    let hierarchies_copy = cloneDeep(hierarchies);\r\n    const Layout = processTree(hierarchies_copy);\r\n    return Layout;\r\n}\r\n\r\nfunction processTree(hierarchies) {\r\n    let treeLayout = {};\r\n    do {\r\n        let subtrees = findAllSubtrees(hierarchies);\r\n        let currentLayout = [...subtrees.right, ...subtrees.down, ...subtrees.mix];\r\n        // console.log(currentLayout, \"current\");\r\n        // console.log(treeLayout, \"currentT\");\r\n        let mergedCL = currentLayout.reduce((acc, obj) => ({...acc, ...obj}), {});\r\n        if (hasProperties(treeLayout)) {\r\n            const sharedNodes = getSharedKeys(treeLayout, mergedCL);\r\n            // console.log(sharedNodes)\r\n            for (let key of sharedNodes) {\r\n                const nodeL = mergedCL[key];\r\n                const childrenRect = {};\r\n                for (let keyPre  in treeLayout) {\r\n                    const nodeLPre = treeLayout[keyPre];\r\n                    if (keyPre.startsWith(key)) {\r\n                        childrenRect[keyPre] = nodeLPre;                   \r\n                    }\r\n                }\r\n                const oldBoundingBox = findBoundingBox(childrenRect);\r\n                // debugger\r\n                // console.log(oldBoundingBox)\r\n                // console.log(nodeL)\r\n                const differenceX1 = nodeL[0] - oldBoundingBox.x;\r\n                const differenceY1 = nodeL[1] - oldBoundingBox.y;\r\n                for (let keyPre  in treeLayout) {\r\n                    const nodeLPre = treeLayout[keyPre];\r\n                    if (keyPre.startsWith(key)) {\r\n                        nodeLPre[0] += differenceX1;\r\n                        nodeLPre[1] += differenceY1;\r\n                    }\r\n                }\r\n            }\r\n            copyNonDuplicateProperties(treeLayout, mergedCL);\r\n        } else {\r\n            treeLayout = cloneDeep(mergedCL);\r\n        }\r\n    } while ('children' in hierarchies);\r\n    // console.log(treeLayout, \"layout\")\r\n    return treeLayout;\r\n    function hasProperties(obj) {\r\n        for (let key in obj) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getSharedKeys(obj1, obj2) {\r\n        let sharedKeys = [];\r\n    \r\n        for (let key in obj1) {\r\n            if (obj1.hasOwnProperty(key) && obj2.hasOwnProperty(key)) {\r\n                sharedKeys.push(key);\r\n            }\r\n        }\r\n    \r\n        return sharedKeys;\r\n    }\r\n    function copyNonDuplicateProperties(obj1, obj2) {\r\n        for (let key in obj2) {\r\n            if (obj2.hasOwnProperty(key) && !obj1.hasOwnProperty(key)) {\r\n                obj1[key] = obj2[key];\r\n            }\r\n        }\r\n    }\r\n  }\r\n\r\n  function findAllSubtrees(root) {\r\n    let parentNodesRight = new Set();\r\n    let parentNodesDown = new Set();\r\n    const spacing = 100;\r\n    setParents(root, null);\r\n    dfs(root, parentNodesRight, parentNodesDown);\r\n    const parentNodesMix = new Set();\r\n    for (const item of parentNodesRight) {\r\n        if (parentNodesDown.has(item)) {\r\n            parentNodesMix.add(item);\r\n            parentNodesRight.delete(item);\r\n            parentNodesDown.delete(item);\r\n        }\r\n    }\r\n    const result = {\r\n        right: Array.from(parentNodesRight).map(node => {\r\n            let clone = cloneDeep(node);\r\n            delete node.children;\r\n            removeDownChildren(clone);\r\n            if (node.direction===\"down\") {\r\n                const clonex = clone.size[0];\r\n                clone.size[0] = clone.size[1];\r\n                clone.size[1] = clonex;\r\n            }\r\n            loopOverHierarchy(clone, d => {\r\n                if (Array.isArray(d.size)) {\r\n                d.size[1] += spacing;\r\n                }\r\n            });\r\n            const flexLayout = flextree({ spacing: 80 });\r\n            const tree = flexLayout.hierarchy(clone);\r\n            var treeData = flexLayout(tree);\r\n            treeData.each(d => {\r\n                const x = d.x;\r\n                d.x = d.y;\r\n                d.y = x;\r\n              });\r\n            var treeLayout = {};\r\n            treeData.each(d => {\r\n                treeLayout[d.data.oName] = [d.x, d.y - d.data.size[0] / 2, d.data.size[1], d.data.size[0] * 1];\r\n            });\r\n            const newBoundingbox = findBoundingBox(treeLayout);\r\n            node._size = [newBoundingbox.width, newBoundingbox.height];\r\n            node.size = [newBoundingbox.height, newBoundingbox.width];\r\n            // console.log(treeLayout, \"test\");\r\n            return treeLayout;\r\n        }),\r\n        down: Array.from(parentNodesDown).map(node => {\r\n            let clone = cloneDeep(node);\r\n            delete node.children;\r\n            removeRightChildren(clone);\r\n            loopOverHierarchy(clone, d => {\r\n                if (Array.isArray(d.size)) {\r\n                if (!d._size) d._size = d.size.slice();\r\n                d.size = [d.size[1], d.size[0]];\r\n                }\r\n            });\r\n            loopOverHierarchy(clone, d => {\r\n                if (Array.isArray(d.size)) {\r\n                d.size[1] += spacing;\r\n                }\r\n            });\r\n            if (node.direction===\"down\") {\r\n                const clonex = clone.size[0];\r\n                clone.size[0] = clone.size[1];\r\n                clone.size[1] = clonex;\r\n            }\r\n            const flexLayout = flextree({ spacing: 120 });\r\n            const tree = flexLayout.hierarchy(clone);\r\n            var treeData = flexLayout(tree);\r\n            var treeLayout = {};\r\n            treeData.each(d => {\r\n                treeLayout[d.data.oName] = [d.x - d.data.size[0] / 2, d.y, d.data.size[0] * 1, d.data.size[1]];\r\n            });\r\n            const newBoundingbox = findBoundingBox(treeLayout);\r\n            node._size = [newBoundingbox.width, newBoundingbox.height];\r\n            node.size = [newBoundingbox.height, newBoundingbox.width];\r\n            \r\n            return treeLayout;\r\n        }),\r\n        mix: Array.from(parentNodesMix).map(node => {\r\n            let cloneRight = cloneDeep(node);\r\n            delete node.children;\r\n            let cloneDown = cloneDeep(cloneRight);\r\n            loopOverHierarchy(cloneDown, d => {\r\n                if (Array.isArray(d.size)) {\r\n                if (!d._size) d._size = d.size.slice();\r\n                d.size = [d.size[1], d.size[0]];\r\n                }\r\n            });\r\n            loopOverHierarchy(cloneDown, d => {\r\n                if (Array.isArray(d.size)) {\r\n                d.size[1] += spacing;\r\n                }\r\n            });\r\n            loopOverHierarchy(cloneRight, d => {\r\n                if (Array.isArray(d.size)) {\r\n                d.size[1] += spacing;\r\n                }\r\n            });\r\n            removeRightChildren(cloneDown);\r\n            removeDownChildren(cloneRight);\r\n            const flexLayoutDown = flextree({ spacing: 120 });\r\n            const flexLayoutRight = flextree({ spacing: 80 });\r\n            const treeDown = flexLayoutDown.hierarchy(cloneDown);\r\n            const treeRight = flexLayoutRight.hierarchy(cloneRight);\r\n            // if (node.direction===\"right\") {\r\n            //     const cloneDownx = cloneDown.size[0];\r\n            //     cloneDown.size[0] = cloneDown.size[1];\r\n            //     cloneDown.size[1] = cloneDownx;\r\n            // }\r\n            if (node.direction===\"down\") {\r\n                const cloneRightx = cloneRight.size[0];\r\n                cloneRight.size[0] = cloneRight.size[1];\r\n                cloneRight.size[1] = cloneRightx;\r\n                const cloneDownx = cloneDown.size[0];\r\n                cloneDown.size[0] = cloneDown.size[1];\r\n                cloneDown.size[1] = cloneDownx;\r\n            }\r\n            var treeDataDown = flexLayoutDown(treeDown);\r\n            var treeDataRight = flexLayoutDown(treeRight);\r\n            treeDataRight.each(d => {\r\n                const x = d.x;\r\n                d.x = d.y;\r\n                d.y = x;\r\n              });\r\n            var treeLayoutDown = {};\r\n            treeDataDown.each(d => {\r\n                treeLayoutDown[d.data.oName] = [d.x - d.data.size[0] / 2, d.y, d.data.size[0], d.data.size[1] * 1];\r\n            });\r\n            var treeLayoutRight = {};\r\n            treeDataRight.each(d => {\r\n                treeLayoutRight[d.data.oName] = [d.x, d.y - d.data.size[0] / 2, d.data.size[1], d.data.size[0] * 1];\r\n            });\r\n            const differenceX = treeLayoutRight[node.oName][0] - treeLayoutDown[node.oName][0];\r\n            const differenceY = treeLayoutRight[node.oName][1] - treeLayoutDown[node.oName][1];\r\n            for (const key in treeLayoutDown) {\r\n                treeLayoutDown[key][0] += differenceX;\r\n                treeLayoutDown[key][1] += differenceY;\r\n            }\r\n            const mergedLayout = { ...treeLayoutRight, ...treeLayoutDown };\r\n            const newBoundingbox = findBoundingBox(mergedLayout);\r\n            node._size = [newBoundingbox.width, newBoundingbox.height];\r\n            node.size = [newBoundingbox.height, newBoundingbox.width];\r\n            // console.log(newBoundingbox, \"test\");\r\n            return mergedLayout;\r\n        }),\r\n    };\r\n    return result;\r\n\r\n    function setParents(node, parent) {\r\n        node.parent = parent;\r\n        if (node.children) {\r\n            node.children.forEach(child => setParents(child, node));\r\n        }\r\n    }\r\n\r\n    function dfs(node, parentNodesRight, parentNodesDown) {\r\n        let isSameDirection = true;\r\n    \r\n        checkProperties(node);\r\n    \r\n        if (isSameDirection) {\r\n            if (node.direction === 'right') {\r\n                if (node.parent!==null) {\r\n                    parentNodesRight.add(node.parent);\r\n                } else {\r\n                    parentNodesRight.add(node);\r\n                }\r\n            } else if (node.direction === 'down') {\r\n                if (node.parent!==null) {\r\n                    parentNodesDown.add(node.parent);\r\n                } else {\r\n                    parentNodesDown.add(node.parent);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    \r\n        if (node.children) {\r\n            node.children.forEach(child => dfs(child, parentNodesRight, parentNodesDown));\r\n        }\r\n    \r\n        return false;\r\n    \r\n        function checkProperties(currentNode) {\r\n            if (currentNode.direction !== node.direction) {\r\n                isSameDirection = false;\r\n            }\r\n    \r\n            if (currentNode.children) {\r\n                currentNode.children.forEach(checkProperties);\r\n            }\r\n        }\r\n    }\r\n    function removeRightChildren(node) {\r\n        if (node.children) {\r\n            node.children = node.children.filter(child => child.direction !== 'right');\r\n            node.children.forEach(removeRightChildren);\r\n        }\r\n    }\r\n    \r\n    function removeDownChildren(node) {\r\n        if (node.children) {\r\n            node.children = node.children.filter(child => child.direction !== 'down');\r\n            node.children.forEach(removeDownChildren);\r\n        }\r\n    }\r\n}\r\n\r\nfunction findBoundingBoxCentral(rectanglesObj) {\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n\r\n    for (let key in rectanglesObj) {\r\n        let rectangle = rectanglesObj[key];\r\n        let centerX = rectangle[0];\r\n        let centerY = rectangle[1];\r\n        let width = rectangle[2];\r\n        let height = rectangle[3];\r\n\r\n        let x1 = centerX - width / 2;\r\n        let y1 = centerY - height / 2;\r\n        let x2 = centerX + width / 2;\r\n        let y2 = centerY + height / 2;\r\n\r\n        minX = Math.min(minX, x1);\r\n        minY = Math.min(minY, y1);\r\n        maxX = Math.max(maxX, x2);\r\n        maxY = Math.max(maxY, y2);\r\n    }\r\n\r\n    return {\r\n        x: (minX + maxX) / 2,\r\n        y: (minY + maxY) / 2,\r\n        width: maxX - minX,\r\n        height: maxY - minY\r\n    };\r\n}\r\n\r\nfunction findBoundingBox(rectanglesObj) {\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n\r\n    for (let key in rectanglesObj) {\r\n        let rectangle = rectanglesObj[key];\r\n        let rectX = rectangle[0];\r\n        let rectY = rectangle[1];\r\n        let width = rectangle[2];\r\n        let height = rectangle[3];\r\n\r\n        let x1 = rectX;\r\n        let y1 = rectY;\r\n        let x2 = rectX + width;\r\n        let y2 = rectY + height;\r\n\r\n        minX = Math.min(minX, x1);\r\n        minY = Math.min(minY, y1);\r\n        maxX = Math.max(maxX, x2);\r\n        maxY = Math.max(maxY, y2);\r\n    }\r\n\r\n    return {\r\n        x: minX,\r\n        y: minY,\r\n        width: maxX - minX,\r\n        height: maxY - minY\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/multitree.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, getHierarchy, findChildrenAtSameLevel, autoTranslate } from \"./utilities\";\r\nimport flextree from \"./flextree\";\r\nimport getMultiTree from \"./multitree\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClick(fnS, body, body_num, sourceid, color, clicked, direction) {\r\n  console.log(direction, \"direction\");\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  // console.log(openFlag.attr(\"data-opened\"));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(body);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  const layout = getBoxLayout(fnS[body-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 0;\r\n  const padding = 90;\r\n  const newLabel = String(body_num) + '-' + String(body); // new body_num\r\n  drawBox(layout, fnS, newLabel, direction);\r\n  var hierarchies = getHierarchy(spaceY);\r\n  var treeLayout = {};\r\n  treeLayout = getMultiTree(hierarchies);\r\n  // console.log(hierarchies, \"hierarchies\");\r\n  // const flexLayout = flextree({ spacing: spaceX });\r\n  // const tree = flexLayout.hierarchy(hierarchies);\r\n  // var treeData = flexLayout(tree);\r\n  // treeData.each(d => {\r\n  //   const x = d.x;\r\n  //   d.x = d.y;\r\n  //   d.y = x;\r\n  // });\r\n  // var treeLayout = {};\r\n  // treeData.each(d => {\r\n  //   treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  // });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  let differenceX = treeLayout[newLabel][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabel][1] - (treeLayout[body_num][1]);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabel, locationTransform, body_num, newLabel, color, direction);\r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !==2) {\r\n      if (nodeID === newLabel) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5})`);\r\n      }\r\n    }\r\n  })\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1])];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1])];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 ];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5})`);\r\n      }\r\n    }\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/click.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, drawLinesDashArrow, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, findChildrenAtSameLevel, autoTranslate, getHierarchy } from \"./utilities\";\r\nimport * as flextree from \"d3-flextree\"\r\nimport getMultiTree from \"./multitree\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClickCond(fnS, cond, body_if, body_else, body_num, sourceid, color, clicked, direction) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(cond);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  let layoutElse;\r\n  const layoutCond = getBoxLayout(fnS[cond-1]);\r\n  const layoutIf = getBoxLayout(fnS[body_if-1]);\r\n  if (body_else!==undefined) {\r\n    layoutElse = getBoxLayout(fnS[body_else-1]);\r\n  }\r\n  const spaceX = 80;\r\n  const spaceY = 0;\r\n  const padding = 90;\r\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\r\n  const newLabelIf = String(newLabelCond) + '-' + String(body_if); // new body_num for if\r\n  const newLabelElse = String(newLabelCond) + '-' + String(body_else); // new body_num for else\r\n  drawBox(layoutCond, fnS, newLabelCond, direction);\r\n  drawBox(layoutIf, fnS, newLabelIf, direction);\r\n  if (body_else!==undefined) {\r\n    drawBox(layoutElse, fnS, newLabelElse, direction);\r\n  }\r\n  var hierarchies = getHierarchy(spaceY);\r\n  // const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  // console.log(hierarchies);\r\n  // const tree = flexLayout.hierarchy(hierarchies);\r\n  // var treeData = flexLayout(tree);\r\n  // treeData.each(d => {\r\n  //   const x = d.x;\r\n  //   d.x = d.y;\r\n  //   d.y = x;\r\n  // });\r\n  // var treeLayout = {};\r\n  // treeData.each(d => {\r\n  //   treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  // });\r\n  var treeLayout = {};\r\n  treeLayout = getMultiTree(hierarchies);\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  console.log()\r\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabelCond][1] - (treeLayout[body_num][1]);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color, direction);\r\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelIf, \"black\", \"TRUE\", direction);\r\n  if (layoutElse!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelElse, \"black\", \"FALSE\", direction);\r\n  }\r\n  \r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1] )];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 ];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1])];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 ];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            const currentDirection = d3.select(\"#boxid\" + targetGID).attr(\"direction\");\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID, currentDirection);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 ];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            const currentDirection = d3.select(\"#boxid\" + targetGID).attr(\"direction\");\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID, currentDirection);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          // .transition()\r\n          // .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`);\r\n      }\r\n    } else {\r\n      if (nodeID === newLabelCond || nodeID === newLabelElse || nodeID === newLabelIf) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`);\r\n      }\r\n    }\r\n  }\r\n  )\r\n  // autoTranslate();\r\n}\r\n\r\nexport function handleClickLoop(fnS, cond, pre, body, post, body_num, sourceid, color, clicked, direction) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(cond);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  let layoutCond;\r\n  let layoutPre;\r\n  let layoutBody;\r\n  let layoutPost;\r\n  // const layoutPost = getBoxLayout(fnS[post-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\r\n  const newLabelPre = String(newLabelCond) + '-' + String(pre); // new body_num for pre\r\n  const newLabelBody = String(newLabelCond) + '-' + String(body); // new body_num for body\r\n  const newLabelPost = String(newLabelCond) + '-' + String(post); // new body_num for post\r\n  if (cond!==undefined) {\r\n    layoutCond = getBoxLayout(fnS[cond-1]);\r\n    drawBox(layoutCond, fnS, newLabelCond, direction);\r\n  }\r\n  if (pre!==undefined) {\r\n    layoutPre = getBoxLayout(fnS[pre-1]);\r\n    drawBox(layoutPre, fnS, newLabelPre, direction);\r\n  }\r\n  if (body!==undefined) {\r\n    layoutBody = getBoxLayout(fnS[body-1]);\r\n    drawBox(layoutBody, fnS, newLabelBody, direction);\r\n  }\r\n  if (post!==undefined) {\r\n    layoutPost = getBoxLayout(fnS[post-1]);\r\n    drawBox(layoutPost, fnS, newLabelPost, direction);\r\n  }\r\n  \r\n  \r\n  // drawBox(layoutPost, fnS, newLabelPost);\r\n  var hierarchies = getHierarchy(spaceY);\r\n  // const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  // console.log(hierarchies);\r\n  // const tree = flexLayout.hierarchy(hierarchies);\r\n  // var treeData = flexLayout(tree);\r\n  // treeData.each(d => {\r\n  //   const x = d.x;\r\n  //   d.x = d.y;\r\n  //   d.y = x;\r\n  // });\r\n  // var treeLayout = {};\r\n  // treeData.each(d => {\r\n  //   treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  // });\r\n  var treeLayout = {};\r\n  treeLayout = getMultiTree(hierarchies);\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  console.log()\r\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabelCond][1] - (treeLayout[body_num][1] );\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color, direction);\r\n  if (pre!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPre, \"black\", \"PRE\", direction);\r\n  }\r\n  if (body!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelBody, \"black\", \"WHILE TRUE\", direction);\r\n  }\r\n  if (post!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPost, \"black\", \"POST\", direction);\r\n  }\r\n\r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 ];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1] )];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - (treeLayout[sourceGID][1])];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            const currentDirection = d3.select(\"#boxid\" + a05).attr(\"direction\");\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID, currentDirection);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 ];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            const currentDirection = d3.select(\"#boxid\" + targetGID).attr(\"direction\");\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID, currentDirection);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 ];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            const currentDirection = d3.select(\"#boxid\" + targetGID).attr(\"direction\");\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID, currentDirection);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          // .transition()\r\n          // .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`);\r\n      }\r\n    } else {\r\n      if (nodeID === newLabelCond || nodeID === newLabelPre || nodeID === newLabelBody || nodeID === newLabelPost) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 })`);\r\n      }\r\n    }\r\n  }\r\n  )\r\n  // autoTranslate();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/clickCond.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\nimport { handleClick } from \"./click\";\r\nimport { handleClickCond, handleClickLoop } from \"./clickCond\";\r\nimport { computeBoundingRectangle, getOuterBox } from \"./utilities\"\r\n\r\nexport function drawBox(layout, fnS, body_num, directionO = \"right\") {\r\n    // 创建SVG元素\r\n    // debugger\r\n    const svg = d3.select(\"#mainsvg\").select(\"#sumGroup\");\r\n    const g = svg.append(\"g\").attr('id', \"boxid\" + String(body_num)).attr(\"class\", \"drawer\").attr(\"direction\", directionO);\r\n    const ranksep = 37;\r\n    const padding = 22.5; // 设置padding的大小\r\n    // 绘制节点\r\n    const nodes = layout.nodes;\r\n    let opoNodeFlag = false;\r\n    let opiNodeFlag = false;\r\n    const minValue = Math.min(...Object.values(layout.nodes).map(obj => obj.y));\r\n    const maxValue = Math.max(...Object.values(layout.nodes).map(obj => obj.y));\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      if (isOpiNode) {\r\n        if (node.y === minValue){\r\n          // node.y = minValue - 50 - ranksep;\r\n          opiNodeFlag = true;\r\n        }\r\n      }\r\n\r\n      if (isOpoNode) {\r\n        if (node.y === maxValue){\r\n          // node.y = maxValue + 50 + ranksep;\r\n          opoNodeFlag = true;\r\n        }\r\n      }\r\n    }\r\n    // console.log(nodes);\r\n    for (const nodeId in nodes) {\r\n      // const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      \r\n      if (isOpiNode) {\r\n        // debugger\r\n        if (opiNodeFlag){\r\n          nodes[nodeId].y = minValue;\r\n        } else {\r\n          nodes[nodeId].y = minValue - 50 - ranksep;\r\n        }\r\n      }\r\n      if (isOpoNode) {\r\n        if (opoNodeFlag){\r\n          nodes[nodeId].y = maxValue;\r\n        } else {\r\n          nodes[nodeId].y = maxValue + 50 + ranksep;\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // 获取 x 和 y 的最小值\r\n    let minXofAllNodes = Infinity;\r\n    let minYofAllNodes = Infinity;\r\n    for (const key in nodes) {\r\n      const [type, index] = key.split(\"-\");\r\n      const isAuxNode = (type === \"aux\");\r\n      // if (!isAuxNode) {\r\n        if (nodes[key].x < minXofAllNodes) {\r\n          minXofAllNodes = nodes[key].x;\r\n        }\r\n        if (nodes[key].y < minYofAllNodes) {\r\n          minYofAllNodes = nodes[key].y;\r\n        }\r\n      // }\r\n    }\r\n\r\n    // 更新每一个子对象的 x 和 y 属性\r\n    for (const key in nodes) {\r\n      nodes[key].x = nodes[key].x - minXofAllNodes;\r\n      nodes[key].y -= minYofAllNodes;\r\n    }\r\n    const bbox = computeBoundingRectangle(nodes);\r\n    const realOuterBox = getOuterBox(bbox, padding, ranksep, nodes);\r\n    // console.log(bbox,\"bbox\");\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isBfNode = (type === \"bf\");\r\n      const isPofNode = (type === \"pof\");\r\n      const isPifNode = (type === \"pif\");\r\n      const isAuxNode = (type === \"aux\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      const isBcNode = (type === \"bc\");\r\n      const isPocNode = (type === \"poc\");\r\n      const isPicNode = (type === \"pic\");\r\n      const isBlNode = (type === \"bl\");\r\n      const isPolNode = (type === \"pol\");\r\n      const isPilNode = (type === \"pil\");\r\n  \r\n      if (isAuxNode) {\r\n        continue; // 不绘制aux前缀的节点\r\n      }\r\n      const bboxO = bbox;\r\n      if (isBfNode) {\r\n        if (node.fullBox){\r\n            if (node.type == \"FUNCTION\") {\r\n              drawBFs_full(node, nodeId, g, \"green\", ranksep, fnS, body_num, realOuterBox);\r\n            } else if (node.type == \"EXPRESSION\") {\r\n              drawBFs_full(node, nodeId, g, \"purple\", ranksep, fnS, body_num, realOuterBox);\r\n            } else if (node.type == \"LITERAL\") {\r\n              drawLiteral_full(node, nodeId, g, \"red\", ranksep);\r\n            } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n              drawLPrimitive_full(node, nodeId, g, \"red\", ranksep);\r\n            }\r\n        } else {\r\n          if (node.type == \"FUNCTION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"green\", ranksep, fnS, body_num, realOuterBox);\r\n          } else if (node.type == \"EXPRESSION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"purple\", ranksep, fnS, body_num, realOuterBox);\r\n          } else if (node.type == \"LITERAL\") {\r\n            drawLiteral_nfull(node, nodeId, g, \"red\", ranksep);\r\n          } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n            drawLPrimitive_nfull(node, nodeId, g, \"red\", ranksep);\r\n          }\r\n        }\r\n      } else if (isBcNode) {\r\n        if (node.fullBox){\r\n          drawBCs_full(node, nodeId, g, \"orange\", ranksep, fnS, body_num, realOuterBox);\r\n        } else {\r\n          drawBCs_nfull(node, nodeId, g, \"orange\", ranksep, fnS, body_num, realOuterBox);\r\n        }\r\n      } else if (isBlNode) {\r\n        if (node.fullBox){\r\n          drawBLs_full(node, nodeId, g, \"blue\", ranksep, fnS, body_num, realOuterBox);\r\n        } else {\r\n          drawBLs_nfull(node, nodeId, g, \"blue\", ranksep, fnS, body_num, realOuterBox);\r\n        }\r\n      }\r\n      else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode || isPilNode || isPolNode) {\r\n        drawPorts(node, nodeId, g, \"black\");\r\n      }\r\n    }\r\n    // 绘制箭头\r\n    g.append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", \"arrowhead\")\r\n      .attr(\"markerWidth\", 10)\r\n      .attr(\"markerHeight\", 7)\r\n      .attr(\"refX\", 10)\r\n      .attr(\"refY\", 3.5)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M0,0 L10,3.5 L0,7 Z\")\r\n      .style(\"fill\", \"gray\");\r\n  \r\n    // 绘制边\r\n    const edges = layout.edges;\r\n    edges.forEach((edge) => {\r\n      const sourceNode = nodes[edge.source];\r\n      const targetNode = nodes[edge.target];\r\n      const sourceType = edge.source.split(\"-\")[0];\r\n      const targetType = edge.target.split(\"-\")[0];\r\n      const isAuxEdge = (sourceType === \"aux\" || targetType === \"aux\");\r\n\r\n      if (!isAuxEdge) {\r\n        g.append(\"line\")\r\n          .attr(\"x1\", sourceNode.x)\r\n          .attr(\"y1\", sourceNode.y - sourceNode.height / 2)\r\n          .attr(\"x2\", targetNode.x)\r\n          .attr(\"y2\", targetNode.y + targetNode.height / 2)\r\n          .style(\"stroke\", \"gray\")\r\n          .style(\"stroke-width\", 2.2)\r\n          .attr(\"marker-end\", \"url(#arrowhead)\");\r\n      }\r\n    });\r\n\r\n    // 调整SVG大小\r\n\r\n    const width = bbox.width + padding * 4;\r\n    const height = bbox.height + padding * 4;\r\n\r\n    if ('opo-0' in nodes && 'opi-0' in nodes){\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    }\r\n    g.attr(\"width\", g.node().getBBox().width)\r\n      .attr(\"height\", g.node().getBBox().height)\r\n    if (body_num === 0){\r\n      g.attr(\"transform\", `translate(${padding * 4},${padding * 30 - g.node().getBBox().height / 2 * 1})`);\r\n    }\r\n  }\r\n\r\nfunction drawBFs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\r\n  let clicked = false;\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  // console.log(outerRight, \"outerRight\");\r\n  // console.log(outerBottom, \"outerBottom\");\r\n  // console.log(innerBottom, \"innerBottom\");\r\n  // console.log(innerRight, \"innerRight\");\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBFs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox = \"right\") {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\r\n  let clicked = false;\r\n  let node_body_cond = null;\r\n  if (node.condition !== undefined) {\r\n    node_body_cond = node.condition;\r\n  }\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body_cond)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.condition !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBLs_full(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\r\n  let clicked = false;\r\n  let node_body_cond = null;\r\n  if (node.condition !== undefined) {\r\n    node_body_cond = node.condition;\r\n  }\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body_cond)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.condition !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickLoop(fnS, node.condition, node.pre, node.body, node.post, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBLs_nfull(node, nodeId, g, color, ranksep, fnS, body_num, bbox) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const outerRight = bbox.x + bbox.width;\r\n  const outerBottom = bbox.y + bbox.height;\r\n  const innerRight = node.x + node.width / 2;\r\n  const innerBottom = node.y + node.height / 2 - ranksep;\r\n  let direction = \"right\";\r\n  if ( (outerRight - innerRight) > (outerBottom - innerBottom) + 120) {\r\n    direction = \"down\";\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickLoop(fnS, node.body, body_num, nodeId, color, clicked, direction);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawLiteral_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"20px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLiteral_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2 + ranksep / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width - ranksep)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - ranksep * 1.2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawPorts(node, nodeId, g, color) {\r\n  g.append(\"rect\")\r\n    .attr(\"id\", nodeId)\r\n    .attr(\"x\", node.x - node.width / 2)\r\n    .attr(\"y\", node.y - node.height / 2)\r\n    .attr(\"width\", node.width)\r\n    .attr(\"height\", node.height)\r\n    .style(\"fill\", \"white\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 2);\r\n    if (node.label !== undefined){\r\n      g.append(\"text\") // 添加节点的label\r\n      .attr(\"x\", node.x)\r\n      .attr(\"y\", node.y)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"dominant-baseline\", \"middle\")\r\n      .style(\"font-size\", \"27px\")\r\n      .text(node.label);\r\n    }\r\n}\r\n\r\nfunction drawOuterBoxFull(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.insert(\"rect\", \":first-child\")\r\n  .attr(\"id\", \"frame\" + body_num)\r\n  .attr(\"x\", bbox.x - padding)\r\n  .attr(\"y\", bbox.y - padding + ranksep)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"width\", width - padding * 2)\r\n  .attr(\"height\", height - padding * 2 - ranksep * 2)\r\n  .style(\"fill\", \"transparent\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5)\r\n  .lower();\r\n}\r\n\r\nfunction drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.insert(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding - ranksep / 10)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"transparent\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxTop(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.insert(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding + ranksep * 2)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"transparent\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.insert(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2)\r\n    .style(\"fill\", \"transparent\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawBox.js","<template>\r\n  <div id=\"app\">\r\n    <div class=\"menu\">\r\n      Current Supported Skema Version:\r\n      <span style=\"white-space:pre; color: tomato; font-weight: bold;\">0.1.7         </span>\r\n      <select v-model=\"selectedOption\" @change=\"fetchData\" class=\"my-select\" placeholder=\"Select\">\r\n        <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"url\" class=\"url-input\"\r\n      placeholder=\"Input URL of JSON file here.\"/>\r\n      <!-- <button @click=\"changeSvgContent\">Draw</button> -->\r\n      <button @click=\"submitUrl\">Submit</button>\r\n      <input\r\n        type=\"file\"\r\n        ref=\"fileInput\"\r\n        @change=\"handleFileChange\"\r\n        style=\"display: none;\"\r\n      />\r\n      <button\r\n      :style=\"{ margin: '0 30px', backgroundColor: 'tomato', color: 'white', border: 'none' }\"\r\n      class=\"btn btn-primary\" @click=\"triggerFileInput\">\r\n          Choose File\r\n      </button>\r\n      <button class=\"btn btn-primary download-button\" @click=\"downloadSVG\" >downloadSVG</button>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div class=\"editor-box\">\r\n        <!-- <textarea v-model=\"inputText\" placeholder=\"Input Gromet JSON here...\"\r\n        @input=\"validateJson\">\r\n        </textarea> -->\r\n        <!-- <p v-if=\"!isValidJson\" class=\"error\">Invalid JSON format!</p> -->\r\n        <!-- <pre contenteditable=\"true\"\r\n        v-html=\"highlightedJson\" ref=\"jsonEditor\"></pre> -->\r\n        <label for=\"deep-select\">Select Display Depth: </label>\r\n        <select id=\"deep-select\" v-model=\"selectedDeep\">\r\n          <option v-for=\"num in possibleDepths\" :key=\"num\" :value=\"num\">\r\n            {{ num }}\r\n          </option>\r\n        </select>\r\n        <vue-json-pretty\r\n          :data=\"highlightedJson\"\r\n          :editable=\"true\"\r\n          :highlight-array=\"highlightNode\"\r\n          :deep=\"selectedDeep\">\r\n        </vue-json-pretty>\r\n      </div>\r\n      <div class=\"svg-container\">\r\n        <!-- <svg width=\"100\" height=\"100\">\r\n          <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" :fill=\"svgColor\"/>\r\n        </svg> -->\r\n        <svg id=\"mainsvg\" width=\"1200\" height=\"1000\" overflow=\"visible\" ref=\"svgMoviz\">\r\n          <g id=\"sumGroup\"></g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport VueJsonPretty from 'vue-json-pretty-highlight-row';\r\nimport 'vue-json-pretty-highlight-row/lib/styles.css';\r\nimport { getBoxLayout } from './utils/layout';\r\nimport { drawBox } from './utils/drawBox';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    VueJsonPretty,\r\n  },\r\n  data() {\r\n    return {\r\n      skemaVersion: '',\r\n      url: '',\r\n      selectedDeep: 2,\r\n      possibleDepths: [1, 2, 3, 4, 5, 6, 7],\r\n      blockStyle: {\r\n        backgroundColor: 'rgba(255, 255, 120, 0)',\r\n        height: '90vh',\r\n        width: '100%',\r\n      },\r\n      selectedFile: null,\r\n      selectedOption: null,\r\n      gromet: null,\r\n      path: 'res',\r\n      highlightedJson: null,\r\n      selectedNode: null,\r\n      highlightNode: null,\r\n      options: [\r\n        { text: 'Clay1', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/get_beta--Gromet-FN-auto2.json' },\r\n        { text: 'core_dynamics', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/core_dynamics_pack2.json' },\r\n        { text: 'while1', value: 'https://raw.githubusercontent.com/ml4ai/skema/adarshp/nom_error_handling/data/gromet/python/while1/FN_0.1.6/while1--Gromet-FN-auto.json' },\r\n        { text: 'cond1', value: 'https://raw.githubusercontent.com/ml4ai/skema/adarshp/nom_error_handling/data/gromet/python/cond1/FN_0.1.6/cond1--Gromet-FN-auto.json' },\r\n        { text: 'fun1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun1/FN_0.1.6/fun1--Gromet-FN-auto.json' },\r\n        { text: 'fun4', value: 'https://raw.githubusercontent.com/ml4ai/skema/adarshp/nom_error_handling/data/gromet/python/fun4/FN_0.1.6/fun4--Gromet-FN-auto.json' },\r\n        { text: 'exp1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp1/FN_0.1.6/exp1--Gromet-FN-auto.json' },\r\n        { text: 'exp2', value: 'https://gist.githubusercontent.com/jastier/76f7566ac44265707d892a252d8f85ab/raw/2be498c5fb369635725e9e6b493732a5c181ac65/first_matlab.json' },\r\n        { text: 'exp3', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp3/FN_0.1.6/exp3--Gromet-FN-auto.json' },\r\n        { text: 'fun_default1', value: 'https://raw.githubusercontent.com/ml4ai/skema/adarshp/nom_error_handling/data/gromet/python/fun_default1/FN_0.1.6/fun_default1--Gromet-FN-auto.json' },\r\n        { text: 'assign_operator1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/assign_operator1/FN_0.1.6/assign_operator1--Gromet-FN-auto.json' },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$refs.svgMoviz.addEventListener('mouseover', this.handleMouseOverDelegate);\r\n  },\r\n  beforeDestroy() {\r\n    this.$refs.svgMoviz.removeEventListener('mouseover', this.handleMouseOverDelegate);\r\n  },\r\n  async created() {\r\n      const grometUrl = this.$route.query.gromet_url;\r\n      if (grometUrl) {\r\n        try {\r\n          const response = await axios.get(grometUrl);\r\n          this.gromet = response.data;\r\n          this.skemaVersion = this.gromet.schema_version;\r\n          this.highlightedJson = this.gromet.modules[0];\r\n          delete this.highlightedJson.metadata_collection;\r\n          delete this.highlightedJson.metadata;\r\n          this.drawMoviz();\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    },\r\n  methods: {\r\n    drawMoviz() {\r\n      d3.selectAll('g').remove();\r\n      function handleZoom(e) {\r\n        d3.select('svg g')\r\n          .attr('transform', e.transform);\r\n      }\r\n      const svg = d3.select('svg');\r\n      svg.append('g').attr('id', 'sumGroup');\r\n      const zoom = d3.zoom()\r\n        .on('zoom', handleZoom);\r\n      svg.call(zoom);\r\n      const graphData = this.gromet.modules[0];\r\n      const fn0 = graphData.fn;\r\n      const fnS = graphData.fn_array;\r\n      const layout = getBoxLayout(fn0);\r\n      drawBox(layout, fnS, 0);\r\n    },\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get(this.selectedOption);\r\n        this.gromet = response.data;\r\n        this.skemaVersion = this.gromet.schema_version;\r\n        this.highlightedJson = this.gromet.modules[0];\r\n        delete this.highlightedJson.metadata_collection;\r\n        delete this.highlightedJson.metadata;\r\n        this.drawMoviz();\r\n      } catch (error) {\r\n        // eslint-disable-next-line\r\n        console.error(error);\r\n      }\r\n    },\r\n    triggerFileInput() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    handleFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n\r\n      if (this.selectedFile) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          try {\r\n            this.gromet = JSON.parse(e.target.result);\r\n            this.skemaVersion = this.gromet.schema_version;\r\n            this.highlightedJson = this.gromet.modules[0];\r\n            delete this.highlightedJson.metadata_collection;\r\n            delete this.highlightedJson.metadata;\r\n            this.drawMoviz();\r\n          } catch (error) {\r\n            // eslint-disable-next-line\r\n            console.error('Error parsing JSON:', error);\r\n          }\r\n        };\r\n        reader.readAsText(this.selectedFile); // 读取文件内容为文本\r\n      }\r\n    },\r\n    handleMouseOver(event) {\r\n      if (event.target.tagName === 'g' && event.target.id.startsWith('boxid')) {\r\n        const parts = event.target.id.split('-');\r\n        const lastPart = parts.pop();\r\n        const numberMatch = lastPart.match(/\\d+$/); // Matches the last number in a string\r\n        if (numberMatch) {\r\n          this.selectedNode = numberMatch[0];\r\n        } else {\r\n          this.selectedNode = null;\r\n        }\r\n      }\r\n      // eslint-disable-next-line\r\n      console.log(this.selectedNode);\r\n    },\r\n    handleMouseOverDelegate(event) {\r\n      const target = event.target;\r\n      if (target.id && target.id.startsWith('frame')) {\r\n        const parts = target.id.split('-');\r\n        const lastPart = parts.pop();\r\n        const numberMatch = lastPart.match(/\\d+$/);\r\n        const svgContainer = d3.select('#mainsvg');\r\n        svgContainer.selectAll(\"#highlightRect\").remove();\r\n        if (numberMatch) {\r\n          this.selectedNode = numberMatch[0];\r\n        } else {\r\n          this.selectedNode = null;\r\n        }\r\n        if (this.selectedNode === 0 || this.selectedNode === '0') {\r\n          this.highlightNode = ['res.fn'];\r\n        } else {\r\n          this.highlightNode = [`res.fn_array[${this.selectedNode - 1}]`];\r\n        }\r\n        if (this.selectedNode !== null) {\r\n          const increasedWidth = target.width.baseVal.value + 7;\r\n          const increasedHeight = target.height.baseVal.value + 7;\r\n\r\n          const parentD3Selection = d3.select(target.parentNode);\r\n          const rectSelection = parentD3Selection.append('rect');\r\n          rectSelection\r\n            .attr('id', 'highlightRect')\r\n            .attr('x', target.x.baseVal.value - 3.5)\r\n            .attr('y', target.y.baseVal.value - 3.5)\r\n            .attr('rx', 5)\r\n            .attr('ry', 5)\r\n            .attr('width', increasedWidth)\r\n            .attr('height', increasedHeight)\r\n            .style(\"fill\", \"none\")\r\n            .style(\"stroke\", \"red\")\r\n            .style(\"stroke-width\", 38)\r\n            .style(\"stroke-opacity\", 0.2);\r\n\r\n          // Add event listener to remove the rectangle on mouseout using D3\r\n          // d3.select(target).on('mouseout', () => {\r\n          //   parentD3Selection.select('#highlightRect').remove();\r\n          // });\r\n        }\r\n      }\r\n    },\r\n    downloadSVG() {\r\n      const svgElement = document.getElementById('mainsvg');\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      const svgUrl = URL.createObjectURL(svgBlob);\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = svgUrl;\r\n      downloadLink.download = 'mainsvg.svg';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    },\r\n    async submitUrl() {\r\n      try {\r\n        const response = await axios.get(this.url);\r\n        this.gromet = response.data;\r\n        this.skemaVersion = this.gromet.schema_version;\r\n        this.highlightedJson = this.gromet.modules[0];\r\n        delete this.highlightedJson.metadata_collection;\r\n        delete this.highlightedJson.metadata;\r\n        this.drawMoviz();\r\n      } catch (error) {\r\n        // eslint-disable-next-line\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  #app {\r\n    font-family: Avenir, Helvetica, Arial, sans-serif;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    margin-top: 60px;\r\n  }\r\n  .menu {\r\n    margin-bottom: 20px;\r\n  }\r\n  .content {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    height: 90vh;\r\n  }\r\n  .editor-box {\r\n    border: 5px solid #4b4a4a;\r\n    padding: 20px;\r\n    margin: 10px;\r\n    width: 35%;\r\n    border-radius: 10px;\r\n    height: 80vh;\r\n    /* overflow: hidden; */\r\n    overflow: auto;\r\n  }\r\n  .svg-container {\r\n    border: 5px solid #4b4a4a;\r\n    padding: 20px;\r\n    margin: 10px;\r\n    width: 60%;\r\n    border-radius: 10px;\r\n    height: 80vh;\r\n    overflow: hidden;\r\n  }\r\n  .error {\r\n    color: red;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .my-select {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    margin-right: 20px;\r\n}\r\n\r\n.url-input {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    width: 400px;\r\n    overflow-x: auto;\r\n    margin-left: 20px;\r\n}\r\n\r\npre {\r\n    overflow-x: auto;\r\n    overflow-y: auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    white-space: nowrap;\r\n}\r\n\r\nspan {\r\n    text-align: left !important;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"menu\"},[_vm._v(\"\\n    Current Supported Skema Version:\\n    \"),_c('span',{staticStyle:{\"white-space\":\"pre\",\"color\":\"tomato\",\"font-weight\":\"bold\"}},[_vm._v(\"0.1.7         \")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],staticClass:\"my-select\",attrs:{\"placeholder\":\"Select\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.fetchData]}},_vm._l((_vm.options),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.value}},[_vm._v(\"\\n        \"+_vm._s(option.text)+\"\\n      \")])}),0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.url),expression:\"url\"}],staticClass:\"url-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Input URL of JSON file here.\"},domProps:{\"value\":(_vm.url)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.url=$event.target.value}}}),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.submitUrl}},[_vm._v(\"Submit\")]),_vm._v(\" \"),_c('input',{ref:\"fileInput\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\"},on:{\"change\":_vm.handleFileChange}}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",style:({ margin: '0 30px', backgroundColor: 'tomato', color: 'white', border: 'none' }),on:{\"click\":_vm.triggerFileInput}},[_vm._v(\"\\n        Choose File\\n    \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary download-button\",on:{\"click\":_vm.downloadSVG}},[_vm._v(\"downloadSVG\")])]),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"editor-box\"},[_c('label',{attrs:{\"for\":\"deep-select\"}},[_vm._v(\"Select Display Depth: \")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedDeep),expression:\"selectedDeep\"}],attrs:{\"id\":\"deep-select\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedDeep=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.possibleDepths),function(num){return _c('option',{key:num,domProps:{\"value\":num}},[_vm._v(\"\\n          \"+_vm._s(num)+\"\\n        \")])}),0),_vm._v(\" \"),_c('vue-json-pretty',{attrs:{\"data\":_vm.highlightedJson,\"editable\":true,\"highlight-array\":_vm.highlightNode,\"deep\":_vm.selectedDeep}})],1),_vm._v(\" \"),_c('div',{staticClass:\"svg-container\"},[_c('svg',{ref:\"svgMoviz\",attrs:{\"id\":\"mainsvg\",\"width\":\"1200\",\"height\":\"1000\",\"overflow\":\"visible\"}},[_c('g',{attrs:{\"id\":\"sumGroup\"}})])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-95369628\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-95369628\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-95369628\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-95369628\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport App from '@/App';\r\n// import Moviz from '@/components/Moviz';\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      // path: '/',\r\n      // name: 'Moviz',\r\n      // component: Moviz,\r\n      path: '/',\r\n      name: 'Moviz',\r\n      component: App,\r\n    },\r\n  ],\r\n  mode: 'hash',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Vue from 'vue';\r\nimport App from './App';\r\nimport router from './router';\r\n\r\nVue.config.productionTip = false;\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  components: { App },\r\n  template: '<App/>',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"d3-flextree\",\"version\":\"2.1.2\",\"main\":\"build/d3-flextree.js\",\"module\":\"index\",\"jsnext:main\":\"index\",\"author\":{\"name\":\"Chris Maloney\",\"url\":\"http://chrismaloney.org\"},\"description\":\"Flexible tree layout algorithm that allows for variable node sizes.\",\"keywords\":[\"d3\",\"d3-module\",\"layout\",\"tree\",\"hierarchy\",\"d3-hierarchy\",\"plugin\",\"d3-plugin\",\"infovis\",\"visualization\",\"2d\"],\"homepage\":\"https://github.com/klortho/d3-flextree\",\"license\":\"WTFPL\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/klortho/d3-flextree.git\"},\"scripts\":{\"clean\":\"rm -rf build demo test\",\"build:demo\":\"rollup -c --environment BUILD:demo\",\"build:dev\":\"rollup -c --environment BUILD:dev\",\"build:prod\":\"rollup -c --environment BUILD:prod\",\"build:test\":\"rollup -c --environment BUILD:test\",\"build\":\"rollup -c\",\"lint\":\"eslint index.js src\",\"test:main\":\"node test/bundle.js\",\"test:browser\":\"node test/browser-tests.js\",\"test\":\"npm-run-all test:*\",\"prepare\":\"npm-run-all clean build lint test\"},\"dependencies\":{\"d3-hierarchy\":\"^1.1.5\"},\"devDependencies\":{\"babel-plugin-external-helpers\":\"^6.22.0\",\"babel-preset-es2015-rollup\":\"^3.0.0\",\"d3\":\"^4.13.0\",\"d3-selection-multi\":\"^1.0.1\",\"eslint\":\"^4.19.1\",\"jsdom\":\"^11.6.2\",\"npm-run-all\":\"^4.1.2\",\"rollup\":\"^0.55.3\",\"rollup-plugin-babel\":\"^2.7.1\",\"rollup-plugin-commonjs\":\"^8.0.2\",\"rollup-plugin-copy\":\"^0.2.3\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.2\",\"rollup-plugin-uglify\":\"^3.0.0\",\"uglify-es\":\"^3.3.9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-flextree/package.json\n// module id = p+Xa\n// module chunks = 1"],"sourceRoot":""}