{"version":3,"sources":["webpack:///./src/App.vue?0e87","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/utils/layout.js","webpack:///./src/utils/drawlines.js","webpack:///./src/utils/utilities.js","webpack:///./src/utils/click.js","webpack:///./src/utils/clickCond.js","webpack:///./src/utils/drawBox.js","webpack:///src/components/Moviz.vue","webpack:///./src/components/Moviz.vue?e3a1","webpack:///./src/components/Moviz.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./node_modules/d3-flextree/package.json"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","getBoxLayout","data","graph","dagre","Graph","compound","setGraph","setDefaultEdgeLabel","i","bf","length","node","nodeId","label","type","function_type","value","body","setNode","auxLabel","width","height","pif","setParent","box","pof","opo","opi","wff","edge","srcNodeId","src","tgtNodeId","tgt","setEdge","wfopi","wfopo","wopio","bc","condition","body_if","body_else","pic","poc","wfc","wcf","wcc","wcopi","wcopo","bl","pre","post","pil","pol","wfl","wcl","wlopi","wll","wlf","wlc","wlopo","nodeID","auxID","predecessors","successors","bfNodes","nodes","filter","startsWith","bcNodes","blNodes","parentNodes","toConsumableArray_default","graph_aux","cloneDeep","superNodes","uf","UnionFind","j","isEdgeBetweenChildNodes","union","groups","forEach","root","find","push","superNodeCounter","_loop4","superNodeId","virtual","groupParentNodes","keys_default","ranksep","rankdir","console","log","currentY","superNodeIds","sort","a","b","parseInt","split","firstSuperNode","firstSuperNodeCenterX","x","y","adjustChildNodesPosition","preSuperNode","superNode","deltaX","deltaY","arrangeSuperNodes","layout","edges","source","v","target","w","_loop","bfNodeId","pofNode","pifNode","fullBox","_loop2","bcNodeId","pocNode","picNode","_loop3","blNodeId","polNode","pilNode","meta","identifier","metadata","elements","_this","classCallCheck_default","parent","e","parentX","parentY","parentNode1","parentNode2","nodes1","nodes2","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","node1","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","node2","err","return","parentNodeId","childId","childNode","adjustAuxNodesPosition","auxNodeId","auxNode","drawLines","sourceid","targetid","locationTransform","body_num_source","body_num_target","color","sourceX","Number","d3","select","attr","sourceY","targetX1","targetX2","targetY1","targetY2","dx1","dy1","dx2","dy2","controlPoint11","controlPoint12","controlPoint21","controlPoint22","g","append","String","data1","data2","lineGenerator","d","curve","pathString1","pathElement1","document","createElementNS","setAttribute","pathString2","pathElement2","totalLength1","getTotalLength","totalLength2","points1","point","getPointAtLength","points2","xScale1","domain","range","bisect1","left","xScale2","bisect2","area1","y0","xValue","indexOfNode","invert","pointBefore","pointAfter","slope","Math","abs","linewidth","pow","sqrt","y1","area2","datum","selectAll","each","currentNode","currentNodeBody","sourceXforSL","sourceYforSL","targetXforSL","targetYforSL","updateLines","lineID","transition","duration","drawLinesDashArrow","treeLayout","sourceID","targetID","sourceFrame","dx","dy","targetX","targetY","style","midX","midY","text","updateLinesDashArrow","arraysAreEqual","array1","array2","loopOverHierarchy","callback","c","_children","getChildren","hierarchies","childrens","element","zoomin","path","filterChild","item","hasOwnProperty","aNums","oName","map","bNums","autoTranslate","gs","tops","lefts","rights","bottoms","rect","getBoundingClientRect","top","right","bottom","initialWidth","max","apply","min","initialHeight","translateValues","match","originalX","originalY","_translateValues$1$sp","_translateValues$1$sp2","slicedToArray_default","handleClick","fnS","body_num","clicked","openFlag","GID","replace","deleteParts","deleteFlag","node1Parts","node2Parts","end","then","remove","firstNParts","slice","stringify_default","GIDParts","newLabel","drawBox","routes","currentID","size","temp","Array","isArray","_size","reverse","flexLayout","flextree","spacing","treeData","hierarchy","differenceX","differenceY","padding","sourceGID","targetGID","sourceTransString","targetTransString","newTransArray","transformArray","locationTransformForThis","line_label","handleClickLoop","cond","_this2","newLabelCond","newLabelPre","newLabelBody","newLabelPost","a01","a02","opoNodeFlag","opiNodeFlag","minValue","values_default","obj","maxValue","_nodeId$split","_nodeId$split2","isOpoNode","_nodeId$split3","_nodeId$split4","minXofAllNodes","Infinity","minYofAllNodes","key","_key$split","_key$split2","_nodeId2$split","_nodeId2$split2","isPofNode","isPifNode","isOpiNode","isBcNode","isPocNode","isPicNode","isBlNode","isPolNode","isPilNode","drawBFs_full","drawLiteral_full","drawLPrimitive_full","drawBFs_nfull","drawLiteral_nfull","drawLPrimitive_nfull","drawBCs_full","drawBCs_nfull","drawBLs_full","drawBLs_nfull","drawPorts","sourceNode","targetNode","sourceType","targetType","bbox","getBBox","drawOuterBoxFull","drawOuterBoxBottom","drawOuterBoxTop","drawOuterBoxEmpty","node_body","selection","on","node_body_cond","layoutCond","layoutIf","layoutElse","newLabelIf","newLabelElse","handleClickCond","lower","Moviz","skemaVersion","url","blockStyle","backgroundColor","selectedOption","options","methods","fetchData","axios","get","response","jsonData","schema_version","graphData","modules","fn0","fn","fn_array","catch","error","downloadSVG","svgElement","getElementById","svgData","XMLSerializer","serializeToString","svgBlob","Blob","svgUrl","URL","createObjectURL","downloadLink","createElement","href","download","appendChild","click","removeChild","submitUrl","excuteFunction","components_Moviz","_vm","staticClass","_v","directives","rawName","expression","placeholder","change","$event","$$selectedVal","prototype","call","o","selected","_value","multiple","_l","option","domProps","_s","_m","input","composing","viewBox","src_components_Moviz","Moviz_normalizeComponent","Vue","use","Router","router","component","mode","config","productionTip","el","components","App","template","module","exports","version","main","jsnext:main","author","description","keywords","homepage","license","repository","scripts","clean","build:demo","build:dev","build:prod","build:test","build","lint","test:main","test:browser","test","prepare","dependencies","d3-hierarchy","devDependencies","babel-plugin-external-helpers","babel-preset-es2015-rollup","d3-selection-multi","eslint","jsdom","npm-run-all","rollup","rollup-plugin-babel","rollup-plugin-commonjs","rollup-plugin-copy","rollup-plugin-json","rollup-plugin-node-resolve","rollup-plugin-uglify","uglify-es"],"mappings":"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","file":"static/js/app.7733ce5b96bac2fc72fc.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bee6a19a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-bee6a19a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bee6a19a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"app\">\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.container {\r\n  align-items: center;\r\n}\r\n\r\n.button-spacing {\r\n  width: 2vh; /* 定义间距的宽度 */\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/* eslint-disable */\r\nimport * as dagre from 'dagre';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nexport function getBoxLayout(data) {\r\n  let graph = new dagre.graphlib.Graph({ compound: true });\r\n  graph.setGraph({});\r\n  // eslint-disable-next-line\r\n  graph.setDefaultEdgeLabel(() => { return {}; });\r\n  // get bf for all\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bf[i];\r\n      const nodeId = `bf-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const body = node.body;\r\n      graph.setNode(nodeId, { label, value, type, body });\r\n      // add auxi node for each bf\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // get pif\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const node = data.pif[i];\r\n      const nodeId = `pif-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get pof\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const node = data.pof[i];\r\n      const nodeId = `pof-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opo\r\n  if ('opo' in data) {\r\n    for (let i = 0; i < data.opo.length; i += 1) {\r\n      const node = data.opo[i];\r\n      const nodeId = `opo-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // get opi\r\n  if ('opi' in data) {\r\n    for (let i = 0; i < data.opi.length; i += 1) {\r\n      const node = data.opi[i];\r\n      const nodeId = `opi-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      // graph.setParent(nodeId, `bf-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set edges wff\r\n  if ('wff' in data) {\r\n    for (let i = 0; i < data.wff.length; i += 1) {\r\n      const edge = data.wff[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopi\r\n  if ('wfopi' in data) {\r\n    for (let i = 0; i < data.wfopi.length; i += 1) {\r\n      const edge = data.wfopi[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wfopo\r\n  if ('wfopo' in data) {\r\n    for (let i = 0; i < data.wfopo.length; i += 1) {\r\n      const edge = data.wfopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wopio\r\n  if ('wopio' in data) {\r\n    for (let i = 0; i < data.wopio.length; i += 1) {\r\n      const edge = data.wopio[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set bc\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bc.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bc[i];\r\n      const nodeId = `bc-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const condition = node.condition;\r\n      const body_if = node.body_if;\r\n      const body_else = node.body_else;\r\n      graph.setNode(nodeId, { label, value, type, condition, body_if, body_else });\r\n      // add auxi node for each bc\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // set pic\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const node = data.pic[i];\r\n      const nodeId = `pic-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set poc\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const node = data.poc[i];\r\n      const nodeId = `poc-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bc-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set wfc\r\n  if ('wfc' in data) {\r\n    for (let i = 0; i < data.wfc.length; i += 1) {\r\n      const edge = data.wfc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcf\r\n  if ('wcf' in data) {\r\n    for (let i = 0; i < data.wcf.length; i += 1) {\r\n      const edge = data.wcf[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcc\r\n  if ('wcc' in data) {\r\n    for (let i = 0; i < data.wcc.length; i += 1) {\r\n      const edge = data.wcc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopi\r\n  if ('wcopi' in data) {\r\n    for (let i = 0; i < data.wcopi.length; i += 1) {\r\n      const edge = data.wcopi[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set edges wcopo\r\n  if ('wcopo' in data) {\r\n    for (let i = 0; i < data.wcopo.length; i += 1) {\r\n      const edge = data.wcopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  if ('bl' in data) {\r\n    for (let i = 0; i < data.bl.length; i += 1) {\r\n      // eslint-disable-next-line\r\n      const node = data.bl[i];\r\n      const nodeId = `bl-${i}`;\r\n      const label = node.name;\r\n      const type = node.function_type;\r\n      const value = node.value;\r\n      const condition = node.condition;\r\n      const pre = node.pre;\r\n      const body = node.body;\r\n      const post = node.post;\r\n      graph.setNode(nodeId, { label, value, type, condition, pre, body, post });\r\n      // add auxi node for each bl\r\n      const auxLabel = 'aux';\r\n      const width = 1;\r\n      const height = 1;\r\n      graph.setNode(`aux-${nodeId}`, { auxLabel, width, height });\r\n      // graph.setParent(`aux-${nodeId}`, nodeId);\r\n    }\r\n  }\r\n\r\n  // set pil\r\n  if ('pil' in data) {\r\n    for (let i = 0; i < data.pil.length; i += 1) {\r\n      const node = data.pil[i];\r\n      const nodeId = `pil-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set pol\r\n  if ('pol' in data) {\r\n    for (let i = 0; i < data.pol.length; i += 1) {\r\n      const node = data.pol[i];\r\n      const nodeId = `pol-${i}`;\r\n      const label = node.name;\r\n      const width = 50;\r\n      const height = 50;\r\n      graph.setNode(nodeId, { label, width, height });\r\n      graph.setParent(nodeId, `bl-${node.box - 1}`);\r\n    }\r\n  }\r\n\r\n  // set wfl\r\n  if ('wfl' in data) {\r\n    for (let i = 0; i < data.wfl.length; i += 1) {\r\n      const edge = data.wfl[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `pof-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wcl\r\n  if ('wcl' in data) {\r\n    for (let i = 0; i < data.wcl.length; i += 1) {\r\n      const edge = data.wcl[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `poc-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlopi\r\n  if ('wlopi' in data) {\r\n    for (let i = 0; i < data.wlopi.length; i += 1) {\r\n      const edge = data.wlopi[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `opi-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wll\r\n  if ('wll' in data) {\r\n    for (let i = 0; i < data.wll.length; i += 1) {\r\n      const edge = data.wll[i];\r\n      const srcNodeId = `pil-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlf\r\n  if ('wlf' in data) {\r\n    for (let i = 0; i < data.wlf.length; i += 1) {\r\n      const edge = data.wlf[i];\r\n      const srcNodeId = `pif-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlc\r\n  if ('wlc' in data) {\r\n    for (let i = 0; i < data.wlc.length; i += 1) {\r\n      const edge = data.wlc[i];\r\n      const srcNodeId = `pic-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // set wlopo\r\n  if ('wlopo' in data) {\r\n    for (let i = 0; i < data.wlopo.length; i += 1) {\r\n      const edge = data.wlopo[i];\r\n      const srcNodeId = `opo-${edge.src - 1}`;\r\n      const tgtNodeId = `pol-${edge.tgt - 1}`;\r\n      graph.setEdge(srcNodeId, tgtNodeId);\r\n    }\r\n  }\r\n\r\n  // add auxi edges\r\n  if ('pif' in data) {\r\n    for (let i = 0; i < data.pif.length; i += 1) {\r\n      const nodeID = `pif-${i}`;\r\n      const pifNode = data.pif[i];\r\n      const auxID = `aux-bf-${pifNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('pof' in data) {\r\n    for (let i = 0; i < data.pof.length; i += 1) {\r\n      const nodeID = `pof-${i}`;\r\n      const pofNode = data.pof[i];\r\n      const auxID = `aux-bf-${pofNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  if ('pic' in data) {\r\n    for (let i = 0; i < data.pic.length; i += 1) {\r\n      const nodeID = `pic-${i}`;\r\n      const picNode = data.pic[i];\r\n      const auxID = `aux-bc-${picNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('poc' in data) {\r\n    for (let i = 0; i < data.poc.length; i += 1) {\r\n      const nodeID = `poc-${i}`;\r\n      const pocNode = data.poc[i];\r\n      const auxID = `aux-bc-${pocNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  if ('pil' in data) {\r\n    for (let i = 0; i < data.pil.length; i += 1) {\r\n      const nodeID = `pil-${i}`;\r\n      const pilNode = data.pil[i];\r\n      const auxID = `aux-bl-${pilNode.box - 1}`;\r\n      const hasIncomingEdges = graph.predecessors(nodeID).length > 0;\r\n      if (!hasIncomingEdges) {\r\n        graph.setEdge(auxID, nodeID);\r\n      }\r\n    }\r\n  }\r\n  if ('pol' in data) {\r\n    for (let i = 0; i < data.pol.length; i += 1) {\r\n      const nodeID = `pol-${i}`;\r\n      const polNode = data.pol[i];\r\n      const auxID = `aux-bl-${polNode.box - 1}`;\r\n      const hasOutgoingEdges = graph.successors(nodeID).length > 0;\r\n      if (!hasOutgoingEdges) {\r\n        graph.setEdge(nodeID, auxID);\r\n      }\r\n    }\r\n  }\r\n  const bfNodes = graph.nodes().filter(node => node.startsWith('bf'));\r\n  const bcNodes = graph.nodes().filter(node => node.startsWith('bc'));\r\n  const blNodes = graph.nodes().filter(node => node.startsWith('bl'));\r\n  const opoNodes = graph.nodes().filter(node => node.startsWith('opo'));\r\n  const opiNodes = graph.nodes().filter(node => node.startsWith('opi'));\r\n  const parentNodes = [...bcNodes, ...bfNodes, ...blNodes];\r\n  const graph_aux = cloneDeep(graph);\r\n  const superNodes = groupParentNodes(graph_aux, parentNodes);\r\n  if (Object.keys(superNodes).length>1) {\r\n    graph = graph_aux;\r\n  }\r\n  // console.log(graph);\r\n  // eslint-disable-next-line\r\n  // console.log(graph);\r\n  // execute layout calculation\r\n  graph.setGraph({ ranksep: 30, rankdir: 'BT' });\r\n  dagre.layout(graph);\r\n  console.log(graph);\r\n  console.log(superNodes);\r\n  if (Object.keys(superNodes).length>1) {\r\n    arrangeSuperNodes(graph,superNodes);\r\n  }\r\n\r\n  // get layout result\r\n  const layout = {\r\n    nodes: {},\r\n    edges: [],\r\n  };\r\n  console.log(data);\r\n  graph.nodes().forEach((nodeId) => {\r\n    const node = graph.node(nodeId);\r\n    layout.nodes[nodeId] = {\r\n      x: node.x,\r\n      y: node.y,\r\n      width: node.width,\r\n      height: node.height,\r\n      label: node.label,\r\n      type: node.type,\r\n      value: node.value,\r\n      body: node.body,\r\n      condition: node.condition,\r\n      body_if: node.body_if,\r\n      body_else: node.body_else,\r\n      pre: node.pre,\r\n      post: node.post\r\n    };\r\n  });\r\n  graph.edges().forEach((edge, i) => {\r\n    layout.edges.push({\r\n      id: i,\r\n      source: edge.v,\r\n      target: edge.w,\r\n    });\r\n  });\r\n  // console.log(layout);\r\n  // set attributes for bf\r\n  if ('bf' in data) {\r\n    for (let i = 0; i < data.bf.length; i += 1) {\r\n      const bfNodeId = `bf-${i}`;\r\n      if (('pif' in data) && ('pof' in data)) {\r\n        const pofNode = data.pof.find(node => node.box === i + 1);\r\n        const pifNode = data.pif.find(node => node.box === i + 1);\r\n        if (pofNode && pifNode) {\r\n          layout.nodes[bfNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bfNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bfNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n  if ('bc' in data) {\r\n    for (let i = 0; i < data.bc.length; i += 1) {\r\n      const bcNodeId = `bc-${i}`;\r\n      if (('pic' in data) && ('poc' in data)) {\r\n        const pocNode = data.poc.find(node => node.box === i + 1);\r\n        const picNode = data.pic.find(node => node.box === i + 1);\r\n        if (pocNode && picNode) {\r\n          layout.nodes[bcNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[bcNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[bcNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n  if ('bl' in data) {\r\n    for (let i = 0; i < data.bl.length; i += 1) {\r\n      const blNodeId = `bl-${i}`;\r\n      if (('pil' in data) && ('pol' in data)) {\r\n        const polNode = data.pol.find(node => node.box === i + 1);\r\n        const pilNode = data.pil.find(node => node.box === i + 1);\r\n        if (polNode && pilNode) {\r\n          layout.nodes[blNodeId].fullBox = true;\r\n        } else {\r\n          layout.nodes[blNodeId].fullBox = false;\r\n        }\r\n      } else {\r\n        layout.nodes[blNodeId].fullBox = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set meta data for layout\r\n  layout.meta = {};\r\n  layout.meta.name = data.b[0].name;\r\n  layout.meta.identifier = `${data.b[0].function_type}-${data.b[0].metadata}`;\r\n  layout.meta.type = data.b[0].function_type;\r\n  return layout;\r\n}\r\n\r\nclass UnionFind {\r\n  constructor(elements) {\r\n    this.parent = {};\r\n    elements.forEach(e => this.parent[e] = e);\r\n  }\r\n\r\n  find(x) {\r\n    if(this.parent[x] !== x) {\r\n      this.parent[x] = this.find(this.parent[x]);\r\n    }\r\n    return this.parent[x];\r\n  }\r\n\r\n  union(x, y) {\r\n    const parentX = this.find(x);\r\n    const parentY = this.find(y);\r\n    if(parentX !== parentY) {\r\n      this.parent[parentY] = parentX;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n  let nodes1 = [];\r\n  let nodes2 = [];\r\n\r\n  if (parentNode1.startsWith(\"opo\") || parentNode1.startsWith(\"opi\")) {\r\n    nodes1.push(parentNode1);\r\n  } else {\r\n    nodes1 = graph.children(parentNode1);\r\n  }\r\n\r\n  if (parentNode2.startsWith(\"opo\") || parentNode2.startsWith(\"opi\")) {\r\n    nodes2.push(parentNode2);\r\n  } else {\r\n    nodes2 = graph.children(parentNode2);\r\n  }\r\n\r\n  for (const node1 of nodes1) {\r\n    for (const node2 of nodes2) {\r\n      if (graph.edge(node1, node2) || graph.edge(node2, node1)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction groupParentNodes(graph, parentNodes) {\r\n  const uf = new UnionFind(parentNodes);\r\n  for(let i = 0; i < parentNodes.length; i++) {\r\n    for(let j = i+1; j < parentNodes.length; j++) {\r\n      if(isEdgeBetweenChildNodes(graph, parentNodes[i], parentNodes[j])) {\r\n        uf.union(parentNodes[i], parentNodes[j]);\r\n      }\r\n    }\r\n  }\r\n  const groups = {};\r\n  parentNodes.forEach(node => {\r\n    const root = uf.find(node);\r\n    if(!groups[root]) {\r\n      groups[root] = [];\r\n    }\r\n    groups[root].push(node);\r\n  });\r\n\r\n  let superNodeCounter = 0;\r\n  const superNodes = {};\r\n  let previousSuperNodeId = null;\r\n  for (let root in groups) {\r\n    const superNodeId = `aux-super-${superNodeCounter}`;\r\n    const label = `aux-super`;\r\n    const virtual = true;\r\n    graph.setNode(superNodeId, { label, virtual });\r\n    groups[root].forEach(node => graph.setParent(node, superNodeId));\r\n    superNodes[superNodeId] = groups[root];\r\n    \r\n    // Now there is a bug of dagre, it can not set an edge between group nodes\r\n    if (previousSuperNodeId) {\r\n      // graph.setEdge(previousSuperNodeId, superNodeId);\r\n    }\r\n    previousSuperNodeId = superNodeId;\r\n    superNodeCounter++;\r\n  }\r\n\r\n  return superNodes;\r\n}\r\n\r\nfunction adjustChildNodesPosition(graph, parentNodeId, deltaX, deltaY) {\r\n  const children = graph.children(parentNodeId);\r\n  children.forEach(childId => {\r\n    const childNode = graph.node(childId);\r\n    \r\n    childNode.x += deltaX;\r\n    childNode.y += deltaY;\r\n\r\n    if (graph.children(childId).length>0){\r\n      adjustChildNodesPosition(graph, childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bf\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bc\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n\r\n    if (childId.split('-')[0]===\"bl\") {\r\n      // console.log(\"aux-\" + childId);\r\n      adjustAuxNodesPosition(graph, \"aux-\" + childId, deltaX, deltaY);\r\n    }\r\n  });\r\n}\r\n\r\nfunction adjustAuxNodesPosition(graph, auxNodeId, deltaX, deltaY) {\r\n  const auxNode = graph.node(auxNodeId);\r\n  auxNode.x += deltaX;\r\n  auxNode.y += deltaY;\r\n}\r\n\r\nfunction arrangeSuperNodes(graph, superNodes) {\r\n  const nodeSpacing = 50; // 超级节点之间的间距\r\n  let currentY = 0;\r\n  console.log(graph);\r\n  // 根据超级节点创建顺序进行排序\r\n  const superNodeIds = Object.keys(superNodes);\r\n  superNodeIds.sort((a, b) => parseInt(a.split('-')[2]) - parseInt(b.split('-')[2]));\r\n\r\n  // 获取第一个超级节点，保持其位置不变\r\n  const firstSuperNode = graph.node(superNodeIds[0]);\r\n  const firstSuperNodeCenterX = firstSuperNode.x + 100;\r\n  firstSuperNode.x += 100;\r\n  currentY = firstSuperNode.y;\r\n  adjustChildNodesPosition(graph, superNodeIds[0], 100, 0);\r\n\r\n  // 从第二个超级节点开始遍历，调整其位置\r\n  for (let i = 1; i < superNodeIds.length; i++) {\r\n    \r\n    const superNodeId = superNodeIds[i];\r\n    const preSuperNode = graph.node(superNodeIds[i-1]);\r\n    const superNode = graph.node(superNodeId);\r\n    currentY += nodeSpacing + superNode.height / 2 + preSuperNode.height / 2;\r\n\r\n    // 计算移动距离\r\n    const deltaX = firstSuperNodeCenterX - superNode.x;\r\n    const deltaY = currentY - superNode.y;\r\n\r\n    // 将超级节点移动到新的中心点\r\n    superNode.x += deltaX;\r\n    superNode.y += deltaY;\r\n\r\n    const moveFlag = false;\r\n    // graph.children(superNodeId).forEach(childId => {\r\n    //   if (childId.split)\r\n    // })\r\n    // 更新超级节点的子节点的坐标\r\n    adjustChildNodesPosition(graph, superNodeId, deltaX, deltaY);\r\n\r\n    // 更新下一个超级节点的y坐标\r\n    // currentY += superNode.height + nodeSpacing;\r\n  }\r\n}\r\n\r\n\r\n\r\n// function isEdgeBetweenChildNodes(graph, parentNode1, parentNode2) {\r\n//   // 获取父节点的子节点\r\n//   const children1 = graph.children(parentNode1);\r\n//   const children2 = graph.children(parentNode2);\r\n\r\n//   // 遍历每一对子节点，检查它们之间是否存在边缘\r\n//   for (const child1 of children1) {\r\n//     for (const child2 of children2) {\r\n//       if (graph.edge(child1, child2) || graph.edge(child2, child1)) {\r\n//         // 如果找到了边缘，返回true\r\n//         return true;\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 如果没有找到边缘，返回false\r\n//   return false;\r\n// }\r\n\r\n// function groupParentNodesWithConnectedChildren(graph, parentNodeIds) {\r\n//   // 为每个父节点创建一个集合\r\n//   const sets = new Map(parentNodeIds.map(id => [id, new Set([id])]));\r\n\r\n//   // 超级父节点计数器\r\n//   let superParentCounter = 0;\r\n\r\n//   // 对每一对父节点进行迭代\r\n//   for (let i = 0; i < parentNodeIds.length; i++) {\r\n//     for (let j = i + 1; j < parentNodeIds.length; j++) {\r\n//       // 检查父节点的子节点之间是否存在连接\r\n//       if (isEdgeBetweenChildNodes(graph, parentNodeIds[i], parentNodeIds[j])) {\r\n//         // 如果存在连接，将这两个节点的集合合并\r\n//         const set1 = sets.get(parentNodeIds[i]);\r\n//         const set2 = sets.get(parentNodeIds[j]);\r\n\r\n//         const newSet = new Set([...set1, ...set2]);\r\n\r\n//         // 更新集合映射\r\n//         newSet.forEach(id => sets.set(id, newSet));\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   // 创建超级父节点\r\n//   const visited = new Set();\r\n//   const superParentNodes = [];\r\n\r\n//   sets.forEach((set, id) => {\r\n//     // 忽略已经访问过的节点\r\n//     if (visited.has(id)) return;\r\n\r\n//     const superParentNodeId = `aux-super-${superParentCounter++}`;\r\n\r\n//     // 设置超级父节点的子节点\r\n//     set.forEach(id => {\r\n//       graph.setParent(id, superParentNodeId);\r\n//       visited.add(id);\r\n//     });\r\n\r\n//     superParentNodes.push(superParentNodeId);\r\n//   });\r\n\r\n//   return superParentNodes;\r\n// }\r\n\r\n\r\nexport function getTreeLayout(data) {\r\n  const g = new dagre.graphlib.Graph({ compound: true });\r\n  g.setGraph({});\r\n  // eslint-disable-next-line\r\n  g.setDefaultEdgeLabel(() => { return {}; });\r\n\r\n  g.setGraph(data.graph);\r\n\r\n  data.subgraphs.forEach((subgraph) => {\r\n    const filteredAttributes = {};\r\n    Object.keys(subgraph.attributes).forEach((key) => {\r\n      if (key === 'label') {\r\n        filteredAttributes[key] = subgraph.attributes[key];\r\n      }\r\n    });\r\n    g.setNode(subgraph.name, filteredAttributes);\r\n    subgraph.nodes.forEach((node) => {\r\n      const filteredAttributesN = {};\r\n      Object.keys(node.attributes).forEach((key) => {\r\n        if (key === 'label') {\r\n          filteredAttributesN[key] = node.attributes[key];\r\n        }\r\n      });\r\n      g.setNode(node.name, filteredAttributesN);\r\n      g.setParent(node.name, subgraph.name);\r\n    });\r\n  });\r\n\r\n  data.edges.forEach((edge) => {\r\n    g.setEdge(edge.source, edge.target);\r\n  });\r\n\r\n  dagre.layout(g);\r\n  // eslint-disable-next-line\r\n  // console.log(g);\r\n  // // eslint-disable-next-line\r\n  // console.log(g.edges());\r\n\r\n  // const svg = d3.select('.svg-container').append('svg');\r\n  // // eslint-disable-next-line\r\n  // const inner = svg.append('g');\r\n  // // eslint-disable-next-line\r\n  // const render = new dagreD3.render();\r\n  // // eslint-disable-next-line\r\n  // render(inner, g);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/layout.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\n\r\nexport function drawLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n  \r\n    // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    const dx1 = targetX1 - sourceX;\r\n    const dy1 = targetY1 - sourceY;\r\n    const dx2 = targetX2 - sourceX;\r\n    const dy2 = targetY2 - sourceY;\r\n    const controlPoint11 = {};\r\n    const controlPoint12 = {};\r\n    const controlPoint21 = {};\r\n    const controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n  \r\n    const g = d3.select('svg').append(\"g\").attr('id', 'line' + String(body_num_source) + '_' + String(body_num_target)).attr('class', 'drawer');\r\n  \r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n      .attr(\"targetid\", targetid)\r\n      .attr(\"locationTransform\", locationTransform)\r\n      .attr(\"body_num_source\", body_num_source)\r\n      .attr(\"body_num_target\", body_num_target)\r\n      .attr(\"color\", color);\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let path1 = g.append(\"path\")\r\n    .datum(data1)\r\n    .attr(\"d\", area1)\r\n    .attr('id', 'path1')\r\n    .attr(\"fill\", color);\r\n  \r\n    let path2 = g.append(\"path\")\r\n    .datum(data2)\r\n    .attr(\"d\", area2)\r\n    .attr('id', 'path2')\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          currentNode.attr(\"data-opened\", true);\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.append(\"circle\")\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.append(\"line\")\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  \r\nexport function updateLines(sourceid, targetid, locationTransform, body_num_source, body_num_target, color, lineID) {\r\n    // console.log(\"sourceid, \", sourceid);\r\n    // console.log(\"targetid, \", targetid);\r\n    // console.log(\"locationTransform, \", locationTransform);\r\n    // console.log(\"body_num_source, \", body_num_source);\r\n    // console.log(\"body_num_target, \", body_num_target);\r\n    // console.log(\"color, \", color);\r\n\r\n    const sourceX = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('x')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('width'));\r\n    const sourceY = Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('y')) + Number(d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr('height')) / 2;\r\n    const targetX1 = Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetX2= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n    const targetY1 = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1];\r\n    const targetY2 = Number(d3.select(\"#\" + targetid).attr('y')) + Number(d3.select(\"#\" + targetid).attr('height')) + locationTransform[1];\r\n    const dx1 = targetX1 - sourceX;\r\n    const dy1 = targetY1 - sourceY;\r\n    const dx2 = targetX2 - sourceX;\r\n    const dy2 = targetY2 - sourceY;\r\n    const controlPoint11 = {};\r\n    const controlPoint12 = {};\r\n    const controlPoint21 = {};\r\n    const controlPoint22 = {};\r\n    controlPoint11.x = sourceX + 0.25 * 1.5 * dx1;\r\n    controlPoint11.y = sourceY + 0.25 * 1.2 * dy1;\r\n    controlPoint12.x = sourceX + 0.75 * 0.8 * dx1;\r\n    controlPoint12.y = sourceY + 0.75 * 1.0 * dy1;\r\n    controlPoint21.x = sourceX + 0.25 * 1.5 * dx2;\r\n    controlPoint21.y = sourceY + 0.25 * 1.2 * dy2;\r\n    controlPoint22.x = sourceX + 0.75 * 0.8 * dx2;\r\n    controlPoint22.y = sourceY + 0.75 * 1.0 * dy2;\r\n\r\n    const g = d3.select('#' + lineID);\r\n\r\n    const paddingL = 17;\r\n\r\n    g.attr(\"sourceid\", sourceid)\r\n        .attr(\"targetid\", targetid)\r\n        .attr(\"locationTransform\", locationTransform)\r\n        .attr(\"body_num_source\", body_num_source)\r\n        .attr(\"body_num_target\", body_num_target)\r\n        .attr(\"color\", color);\r\n\r\n\r\n    let data1 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint11.x, y: controlPoint11.y},\r\n      {x: controlPoint12.x, y: controlPoint12.y},\r\n      {x: targetX1, y: targetY1 + paddingL}\r\n    ];\r\n\r\n    let data2 = [\r\n      {x: sourceX, y: sourceY},\r\n      {x: controlPoint21.x, y: controlPoint21.y},\r\n      {x: controlPoint22.x, y: controlPoint22.y},\r\n      {x: targetX2, y: targetY2 - paddingL}\r\n    ];\r\n\r\n    let lineGenerator = d3.line()\r\n      .x(function(d) { return d.x; })\r\n      .y(function(d) { return d.y; })\r\n      .curve(d3.curveBasis);\r\n  \r\n    let pathString1 = lineGenerator(data1);\r\n    let pathElement1 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement1.setAttribute('d', pathString1);\r\n\r\n    let pathString2 = lineGenerator(data2);\r\n    let pathElement2 = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    pathElement2.setAttribute('d', pathString2);\r\n    \r\n    let totalLength1 = pathElement1.getTotalLength();\r\n    let totalLength2 = pathElement2.getTotalLength();\r\n\r\n    const numPoints = 500;\r\n\r\n    let points1 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement1.getPointAtLength(i * totalLength1 / (numPoints - 1));\r\n        points1.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    let points2 = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        let point = pathElement2.getPointAtLength(i * totalLength2 / (numPoints - 1));\r\n        points2.push({x: point.x, y: point.y});\r\n    }\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale1 = d3.scaleLinear()\r\n    .domain(d3.extent(data1, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect1 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    // 创建一个线性比例尺来对应x值\r\n    let xScale2 = d3.scaleLinear()\r\n    .domain(d3.extent(data2, function(d) { return d.x; }))\r\n    .range([0, dx1]); // 假设width是你的SVG宽度\r\n\r\n    // 根据x值找到相应的数据点\r\n    let bisect2 = d3.bisector(function(d) { return d.x; }).left;\r\n\r\n    let area1 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect1(points1, xScale1.invert(xValue));\r\n        if(indexOfNode >= points1.length - 1) indexOfNode = points1.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points1[indexOfNode - 1];\r\n        let pointAfter = points1[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let area2 = d3.area()\r\n      .x(function(d) { return d.x; })\r\n      .y0( d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y - Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .y1(d => {\r\n        const xValue = d.x;\r\n        let indexOfNode = bisect2(points2, xScale2.invert(xValue));\r\n        if(indexOfNode >= points2.length - 1) indexOfNode = points2.length - 2;\r\n        if(indexOfNode < 1) indexOfNode = 1;\r\n        let pointBefore = points2[indexOfNode - 1];\r\n        let pointAfter = points2[indexOfNode + 1];\r\n        let slope = Math.abs((pointAfter.y - pointBefore.y) / (pointAfter.x - pointBefore.x));\r\n        let linewidth = 6 * Math.pow(((d.x - sourceX + 2) / dx1), 0.38);\r\n        return d.y + Math.sqrt(1+slope**2) * linewidth;\r\n      })\r\n      .curve(d3.curveBasis);\r\n\r\n    let path1 = g.select(\"#path1\")\r\n    .datum(data1)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area1)\r\n    .attr(\"fill\", color);\r\n\r\n    let path2 = g.select(\"#path2\")\r\n    .datum(data2)\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"d\", area2)\r\n    .attr(\"fill\", color);\r\n\r\n    d3.select(\"#boxid\" + body_num_source).selectAll(\"rect\").each(function(d,i){\r\n      const currentNode = d3.select(this);\r\n      const currentNodeId = currentNode.attr(\"id\");\r\n      if (currentNodeId !== sourceid) {\r\n        const currentNodeBody = currentNode.attr(\"data-body\");\r\n        if (currentNodeBody !== undefined && currentNodeBody !== null && currentNodeBody === body_num_target.split('-')[1] ) {\r\n          const sourceXforSL = Number(currentNode.attr('x')) + Number(currentNode.attr('width'));\r\n          const sourceYforSL = Number(currentNode.attr('y')) + Number(currentNode.attr('height')) / 2;\r\n          const targetXforSL= Number(d3.select(\"#\" + targetid).attr('x')) + locationTransform[0];\r\n          const targetYforSL = Number(d3.select(\"#\" + targetid).attr('y')) + locationTransform[1] + Number(d3.select(\"#\" + targetid).attr('height')) / 2;\r\n          g.select(\"circle\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"cx\", targetXforSL)\r\n            .attr(\"cy\", targetYforSL)\r\n            .attr(\"r\", 7)  // 设置圆的半径\r\n            .attr(\"fill\", color);  // 设置圆的颜色\r\n\r\n          g.select(\"line\")\r\n            .transition()\r\n            .duration(720)\r\n            .attr(\"x1\", sourceXforSL)\r\n            .attr(\"y1\", sourceYforSL)\r\n            .attr(\"x2\", targetXforSL)\r\n            .attr(\"y2\", targetYforSL)\r\n            .attr(\"stroke-width\", 3)  // 设置线的宽度\r\n            .attr(\"stroke\", color)  // 设置线的颜色\r\n            .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n            .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n            .attr(\"class\", \"arrowLine\");\r\n        }\r\n      }\r\n      \r\n    })\r\n}\r\n\r\nexport function drawLinesDashArrow(treeLayout, sourceID, targetID, color, label) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  const sourceFrame = \"frame\" + sourceID;\r\n  const targetFrame = \"frame\" + targetID;\r\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  const targetX = sourceX + dx;\r\n  const targetY = sourceY + dy;\r\n  const g = d3.select('svg').append(\"g\").attr('id', 'line' + String(sourceID) + '_' + String(targetID)).attr(\"line-type\", \"dashed\").attr('class', 'drawer');\r\n  const paddingL = 17;\r\n  g.append(\"defs\")\r\n    .append(\"marker\")\r\n    .attr(\"id\", \"arrow\")\r\n    .attr(\"markerWidth\", 5)  // 原来的一半\r\n    .attr(\"markerHeight\", 3.5)  // 原来的一半\r\n    .attr(\"refX\", 5)  // 调整参考点以适应新的大小\r\n    .attr(\"refY\", 1.75)  // 调整参考点以适应新的大小\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", \"M0,0 L5,1.75 L0,3.5 Z\")  // 缩小箭头的路径\r\n  .style(\"fill\", \"gray\");\r\n  g.append(\"line\")\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.append(\"text\")\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\r\n\r\nexport function updateLinesDashArrow(treeLayout, sourceID, targetID, color, label, lineID) {\r\n  // d3.select(\"#boxid\" + body_num_source).select(\"#\" + sourceid).attr(\"data-opened\", \"true\");\r\n  const sourceFrame = \"frame\" + sourceID;\r\n  const targetFrame = \"frame\" + targetID;\r\n  const dx = treeLayout[targetID][0] - treeLayout[sourceID][0] - Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const dy = treeLayout[targetID][1] - treeLayout[sourceID][1];\r\n  const sourceX = Number(d3.select(\"#\" + sourceFrame).attr('x')) + Number(d3.select(\"#\" + sourceFrame).attr('width'));\r\n  const sourceY = Number(d3.select(\"#\" + sourceFrame).attr('y')) + Number(d3.select(\"#\" + sourceFrame).attr('height')) / 2;\r\n  const targetX = sourceX + dx;\r\n  const targetY = sourceY + dy;\r\n  const g = d3.select('svg').select(\"#\" + lineID);\r\n  g.select(\"line\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x1\", sourceX)\r\n    .attr(\"y1\", sourceY)\r\n    .attr(\"x2\", targetX)\r\n    .attr(\"y2\", targetY)\r\n    .attr(\"stroke-width\", 5)  // 设置线的宽度\r\n    .attr(\"stroke\", color)  // 设置线的颜色\r\n    .attr(\"stroke-dasharray\", \"5,5\")  // 设置线为虚线，\"5,5\"表示线段和间隔的长度\r\n    .attr(\"marker-end\", \"url(#arrow)\")  // 设置线的终点为箭头\r\n    .attr(\"class\", \"arrowLine\");\r\n  let midX = (sourceX + targetX) / 2 - 45;\r\n  let midY = (sourceY + targetY) / 2 - 5;\r\n  g.select(\"text\")\r\n    .transition()\r\n    .duration(720)\r\n    .attr(\"x\", midX)\r\n    .attr(\"y\", midY)\r\n    .text(label)\r\n    .style(\"font-size\", \"30px\")  // 设置字体大小\r\n    .style(\"fill\", \"black\");  // 设置字体颜色\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawlines.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\n\r\nexport function arraysAreEqual(array1, array2) {\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < array1.length; i++) {\r\n        if (array1[i] !== array2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function loopOverHierarchy(d, callback) {\r\n    callback(d);\r\n    if (d.children) d.children.forEach(c => loopOverHierarchy(c, callback));\r\n    if (d._children) d._children.forEach(c => loopOverHierarchy(c, callback));\r\n  }\r\n\r\nexport function getChildren(hierarchies, childrens) {\r\n  console.log(childrens);\r\n  childrens.forEach(function(element){\r\n    var children = hierarchies;\r\n    var zoomin = 2;\r\n    element.path.forEach(function(node){\r\n        if (Number(node) !== 0) {\r\n            if (zoomin <= element.path.length - 1) {\r\n                // debugger\r\n                const filterChild = children.children.filter(function(item){\r\n                    return Number(item.name) === Number(node);\r\n                })[0]\r\n                zoomin += 1\r\n                children = filterChild;\r\n            }\r\n            else if (node === element.path[element.path.length - 1]) {\r\n                // debugger\r\n                if (children.hasOwnProperty(\"children\")) {\r\n                    children.children.push(element);\r\n                    sortByOName(children.children);\r\n                } else {\r\n                    children.children = [ element ];\r\n                }\r\n            }\r\n        }\r\n  })\r\n})\r\n}\r\n\r\nexport function findChildrenAtSameLevel(arr) {\r\n  const paths = {};\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const path = arr[i];\r\n    const lastIndex = path.lastIndexOf('-');\r\n\r\n    if (lastIndex !== -1) {\r\n      const parentPath = path.slice(0, lastIndex);\r\n\r\n      if (!paths[parentPath]) {\r\n        paths[parentPath] = [];\r\n      }\r\n\r\n      paths[parentPath].push(path);\r\n    }\r\n  }\r\n\r\n  const similarPaths = Object.values(paths).filter(pathGroup => pathGroup.length > 1);\r\n\r\n  return similarPaths;\r\n}\r\n\r\nfunction sortByOName(arr) {\r\n    return arr.sort((a, b) => {\r\n        const aNums = a.oName.split('-').map(Number);\r\n        const bNums = b.oName.split('-').map(Number);\r\n\r\n        // 根据数字依次进行比较\r\n        for(let i = 0; i < aNums.length; i++) {\r\n            if (aNums[i] < bNums[i]) {\r\n                return -1;\r\n            } else if (aNums[i] > bNums[i]) {\r\n                return 1;\r\n            }\r\n            // 如果相等，继续比较下一个数字\r\n        }\r\n\r\n        // 如果所有数字都相等，返回0表示不需要改变顺序\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport function autoTranslate() {\r\n    let gs = d3.select('svg').selectAll('g');\r\n\r\n    let tops = [], lefts = [], rights = [], bottoms = [];\r\n    \r\n    gs.each(function() {\r\n        let rect = this.getBoundingClientRect();\r\n    \r\n        tops.push(rect.top);\r\n        lefts.push(rect.left);\r\n        rights.push(rect.right);\r\n        bottoms.push(rect.bottom);\r\n    });\r\n    \r\n    // 计算缩放前的矩形大小\r\n    let initialWidth = Math.max(...rights) - Math.min(...lefts);\r\n    let initialHeight = Math.max(...bottoms) - Math.min(...tops);\r\n    \r\n    // 设置你想要的矩形大小\r\n    let desiredWidth = 2000;  // 请替换为你想要的宽度\r\n    let desiredHeight = 2000;  // 请替换为你想要的高度\r\n    \r\n    // 计算缩放因子，这里使用相同的缩放因子以保持长宽比不变\r\n    let scale = Math.min(desiredWidth / initialWidth, desiredHeight / initialHeight);\r\n    \r\n    // 应用缩放\r\n    gs.attr('transform', (d, i, nodes) => {\r\n        // 获取原有的 transform 值\r\n        let originalTransform = d3.select(nodes[i]).attr('transform');\r\n        let translateValues = originalTransform.match(/translate\\(([^)]+)\\)/);\r\n    \r\n        let originalX = 0, originalY = 0;\r\n    \r\n        if (translateValues) {\r\n            [originalX, originalY] = translateValues[1].split(',').map(Number);\r\n        }\r\n    \r\n        // 保持平移不变，应用缩放\r\n        return `translate(${originalX}, ${originalY})`;\r\n    });\r\n    \r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utilities.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel, autoTranslate } from \"./utilities\";\r\nimport * as flextree from \"d3-flextree\"\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClick(fnS, body, body_num, sourceid, color, clicked) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  // console.log(openFlag.attr(\"data-opened\"));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(body);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  const layout = getBoxLayout(fnS[body-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabel = String(body_num) + '-' + String(body); // new body_num\r\n  drawBox(layout, fnS, newLabel);\r\n  var hierarchies = {};\r\n  const childrens = [];\r\n  const gs = d3.selectAll('.drawer').each(function(d, i){\r\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !== 2) {\r\n      const routes = nodeID.split(\"-\");\r\n      const currentID = routes[routes.length - 1];\r\n      if (currentID==='0') {\r\n          hierarchies.name = Number(currentID);\r\n          hierarchies.oName = nodeID;\r\n          hierarchies.path = routes;\r\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n      } else {\r\n          const temp = {}\r\n          temp.name = Number(currentID);\r\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n          temp.path = routes;\r\n          temp.oName = nodeID;\r\n          childrens.push(temp);\r\n      }\r\n    }\r\n  })\r\n  childrens.sort(function(a,b){\r\n    return a.path.length - b.path.length;\r\n  })\r\n  getChildren(hierarchies, childrens);\r\n  loopOverHierarchy(hierarchies, d => {\r\n    if (Array.isArray(d.size)) {\r\n      if (!d._size) d._size = d.size.slice();\r\n      d.size = d._size.slice().reverse();\r\n    }\r\n  });\r\n  const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  const tree = flexLayout.hierarchy(hierarchies);\r\n  var treeData = flexLayout(tree);\r\n  treeData.each(d => {\r\n    const x = d.x;\r\n    d.x = d.y;\r\n    d.y = x;\r\n  });\r\n  var treeLayout = {};\r\n  treeData.each(d => {\r\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  let differenceX = treeLayout[newLabel][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabel][1] - treeLayout[newLabel][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabel, locationTransform, body_num, newLabel, color);\r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !==2) {\r\n      if (nodeID === newLabel) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  })\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabel) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabel){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  })\r\n  let t = d3.transition().duration(1200);\r\n  t.end().then(() => {\r\n    // 在这里进行平移和缩放\r\n    autoTranslate();\r\n});\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/click.js","/* eslint-disable */\r\nimport { drawBox } from \"./drawBox\";\r\nimport { drawLines, updateLines, drawLinesDashArrow, updateLinesDashArrow } from \"./drawlines\";\r\nimport { getBoxLayout, getTreeLayout } from \"./layout\";\r\nimport { arraysAreEqual, loopOverHierarchy, getChildren, findChildrenAtSameLevel, autoTranslate } from \"./utilities\";\r\nimport * as flextree from \"d3-flextree\"\r\nimport * as d3 from \"d3\";\r\n\r\nexport function handleClickCond(fnS, cond, body_if, body_else, body_num, sourceid, color, clicked) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(cond);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  const layoutCond = getBoxLayout(fnS[cond-1]);\r\n  const layoutIf = getBoxLayout(fnS[body_if-1]);\r\n  const layoutElse = getBoxLayout(fnS[body_else-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\r\n  const newLabelIf = String(newLabelCond) + '-' + String(body_if); // new body_num for if\r\n  const newLabelElse = String(newLabelCond) + '-' + String(body_else); // new body_num for else\r\n  drawBox(layoutCond, fnS, newLabelCond);\r\n  drawBox(layoutIf, fnS, newLabelIf);\r\n  drawBox(layoutElse, fnS, newLabelElse);\r\n  var hierarchies = {};\r\n  const childrens = [];\r\n  const gs = d3.selectAll('.drawer').each(function(d, i){\r\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !== 2) {\r\n      const routes = nodeID.split(\"-\");\r\n      const currentID = routes[routes.length - 1];\r\n      if (currentID==='0') {\r\n          hierarchies.name = Number(currentID);\r\n          hierarchies.oName = nodeID;\r\n          hierarchies.path = routes;\r\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n      } else {\r\n          const temp = {}\r\n          temp.name = Number(currentID);\r\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n          temp.path = routes;\r\n          temp.oName = nodeID;\r\n          childrens.push(temp);\r\n      }\r\n    }\r\n  })\r\n  childrens.sort(function(a,b){\r\n    return a.path.length - b.path.length;\r\n  })\r\n  getChildren(hierarchies, childrens);\r\n  loopOverHierarchy(hierarchies, d => {\r\n    if (Array.isArray(d.size)) {\r\n      if (!d._size) d._size = d.size.slice();\r\n      d.size = d._size.slice().reverse();\r\n    }\r\n  });\r\n  const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  console.log(hierarchies);\r\n  const tree = flexLayout.hierarchy(hierarchies);\r\n  var treeData = flexLayout(tree);\r\n  treeData.each(d => {\r\n    const x = d.x;\r\n    d.x = d.y;\r\n    d.y = x;\r\n  });\r\n  var treeLayout = {};\r\n  treeData.each(d => {\r\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  console.log()\r\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabelCond][1] - treeLayout[newLabelCond][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color);\r\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelIf, \"black\", \"TRUE\");\r\n  drawLinesDashArrow(treeLayout, newLabelCond, newLabelElse, \"black\", \"FALSE\");\r\n\r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          // .transition()\r\n          // .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    } else {\r\n      if (nodeID === newLabelCond || nodeID === newLabelElse || nodeID === newLabelIf) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  }\r\n  )\r\n  autoTranslate();\r\n}\r\n\r\nexport function handleClickLoop(fnS, cond, pre, body, post, body_num, sourceid, color, clicked) {\r\n  const transitionTime1 = 920;\r\n  const transitionTime2 = 720;\r\n  const transitionTime3 = 200;\r\n  const openFlag = d3.select(\"#boxid\" + String(body_num)).select(\"#\" + String(sourceid));\r\n  if (clicked || openFlag.attr(\"data-opened\") === \"true\") {\r\n    // openFlag.attr(\"data-opened\", \"false\");\r\n    d3.select(\"#boxid\" + String(body_num)).selectAll(\"[data-opened='true']\").attr(\"data-opened\", \"false\");\r\n    d3.selectAll('.drawer').each(function(d,i){\r\n      let GID = d3.select(this).attr('id').replace('line', '').replace('boxid', '');\r\n      const deleteLabel = String(body_num) + '-' + String(cond);\r\n      const deleteParts = deleteLabel.split('-');\r\n      // delete edges\r\n      if (GID.split('_').length === 2){\r\n        let deleteFlag = false;\r\n        const node1 = GID.split('_')[0];\r\n        const node2 = GID.split('_')[1];\r\n        const node1Parts = node1.split('-');\r\n        const node2Parts = node2.split('-');\r\n        if (arraysAreEqual(node1Parts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          deleteFlag = true;\r\n        } else if (node1Parts.length > deleteParts.length) {\r\n          const firstNParts = node1Parts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            deleteFlag = true;\r\n          }\r\n        }\r\n        if (!deleteFlag) {\r\n          if (arraysAreEqual(node2Parts, deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          } else if (node2Parts.length > deleteParts.length) {\r\n            const firstNParts = node2Parts.slice(0, deleteParts.length);\r\n            if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n              d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n            }\r\n          }\r\n        }\r\n      } else { // delete nodes\r\n        const GIDParts = GID.split('-');\r\n        if (arraysAreEqual(GIDParts, deleteParts)) {\r\n          d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n        } else if (GIDParts.length > deleteParts.length) {\r\n          const firstNParts = GIDParts.slice(0, deleteParts.length);\r\n          if (JSON.stringify(firstNParts) === JSON.stringify(deleteParts)) {\r\n            d3.select(this)\r\n            .transition()        // 开始一个过渡\r\n            .duration(transitionTime3)      // 设置过渡的持续时间\r\n            .style('opacity', 0) // 逐渐变透明\r\n            .end()\r\n            .then(() => {\r\n              d3.select(this).remove();\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // console.log(GID);\r\n    })\r\n    return;\r\n  }\r\n  body_num = String(body_num);\r\n  let layoutCond;\r\n  let layoutPre;\r\n  let layoutBody;\r\n  let layoutPost;\r\n  // const layoutPost = getBoxLayout(fnS[post-1]);\r\n  const spaceX = 80;\r\n  const spaceY = 100;\r\n  const padding = 90;\r\n  const newLabelCond = String(body_num) + '-' + String(cond); // new body_num for Cond\r\n  const newLabelPre = String(newLabelCond) + '-' + String(pre); // new body_num for pre\r\n  const newLabelBody = String(newLabelCond) + '-' + String(body); // new body_num for body\r\n  const newLabelPost = String(newLabelCond) + '-' + String(post); // new body_num for post\r\n  if (cond!==undefined) {\r\n    layoutCond = getBoxLayout(fnS[cond-1]);\r\n    drawBox(layoutCond, fnS, newLabelCond);\r\n  }\r\n  if (pre!==undefined) {\r\n    layoutPre = getBoxLayout(fnS[pre-1]);\r\n    drawBox(layoutPre, fnS, newLabelPre);\r\n  }\r\n  if (body!==undefined) {\r\n    layoutBody = getBoxLayout(fnS[body-1]);\r\n    drawBox(layoutBody, fnS, newLabelBody);\r\n  }\r\n  if (post!==undefined) {\r\n    layoutPost = getBoxLayout(fnS[post-1]);\r\n    drawBox(layoutPost, fnS, newLabelPost);\r\n  }\r\n  \r\n  \r\n  // drawBox(layoutPost, fnS, newLabelPost);\r\n  var hierarchies = {};\r\n  const childrens = [];\r\n  const gs = d3.selectAll('.drawer').each(function(d, i){\r\n    const nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length !== 2) {\r\n      const routes = nodeID.split(\"-\");\r\n      const currentID = routes[routes.length - 1];\r\n      if (currentID==='0') {\r\n          hierarchies.name = Number(currentID);\r\n          hierarchies.oName = nodeID;\r\n          hierarchies.path = routes;\r\n          hierarchies.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n      } else {\r\n          const temp = {}\r\n          temp.name = Number(currentID);\r\n          temp.size = [Number(d3.select(this).attr('width')) + spaceY, Number(d3.select(this).attr('height'))];\r\n          temp.path = routes;\r\n          temp.oName = nodeID;\r\n          childrens.push(temp);\r\n      }\r\n    }\r\n  })\r\n  childrens.sort(function(a,b){\r\n    return a.path.length - b.path.length;\r\n  })\r\n  getChildren(hierarchies, childrens);\r\n  loopOverHierarchy(hierarchies, d => {\r\n    if (Array.isArray(d.size)) {\r\n      if (!d._size) d._size = d.size.slice();\r\n      d.size = d._size.slice().reverse();\r\n    }\r\n  });\r\n  const flexLayout = flextree.flextree({ spacing: spaceX });\r\n  console.log(hierarchies);\r\n  const tree = flexLayout.hierarchy(hierarchies);\r\n  var treeData = flexLayout(tree);\r\n  treeData.each(d => {\r\n    const x = d.x;\r\n    d.x = d.y;\r\n    d.y = x;\r\n  });\r\n  var treeLayout = {};\r\n  treeData.each(d => {\r\n    treeLayout[d.data.oName] = [d.x, d.y, d.data.size[1], d.data.size[0] * 1];\r\n  });\r\n  const nodeNames = Object.keys(treeLayout);\r\n\r\n  console.log(treeLayout);\r\n  console.log()\r\n  let differenceX = treeLayout[newLabelCond][0] - treeLayout[body_num][0];\r\n  let differenceY = treeLayout[newLabelCond][1] - treeLayout[newLabelCond][3] / 2 - (treeLayout[body_num][1] - treeLayout[body_num][3] / 2);\r\n  \r\n  const locationTransform = [differenceX, differenceY];\r\n  drawLines(sourceid, \"frame\" + newLabelCond, locationTransform, body_num, newLabelCond, color);\r\n  if (pre!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPre, \"black\", \"PRE\");\r\n  }\r\n  if (body!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelBody, \"black\", \"WHILE TRUE\");\r\n  }\r\n  if (post!==undefined) {\r\n    drawLinesDashArrow(treeLayout, newLabelCond, newLabelPost, \"black\", \"POST\");\r\n  }\r\n\r\n  // console.log(locationTransform);\r\n  d3.selectAll('.drawer').each(function(d, i){\r\n    let nodeID = d3.select(this).attr('id').replace(\"boxid\", \"\");\r\n    if (nodeID.split('_').length === 2){\r\n      if (d3.select(this).attr(\"line-type\") !== \"dashed\") {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond){\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          const locationTransformForThis = [treeLayout[targetGID][0] - treeLayout[sourceGID][0], treeLayout[targetGID][1] - treeLayout[targetGID][3] / 2 - (treeLayout[sourceGID][1] - treeLayout[sourceGID][3] / 2)];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const a01 = d3.select(this).attr('sourceid');\r\n            const a02 = d3.select(this).attr('targetid');\r\n            let a03 = d3.select(this).attr('locationTransform').split(',');\r\n            const a04 = d3.select(this).attr('body_num_source');\r\n            const a05 = d3.select(this).attr('body_num_target');\r\n            const a06 = d3.select(this).attr('color');\r\n            // const new03 = [Number(a03[0]) + newTransArray[0] - transformArray[0], Number(a03[1]) + newTransArray[1] - transformArray[1]];\r\n            // d3.select(\"#\" + lineID).selectAll('*').remove();\r\n            updateLines(a01, a02, locationTransformForThis, a04, a05, a06, lineID);\r\n          }\r\n        }\r\n        \r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .style(\"opacity\", 0.38);\r\n      } else {\r\n        const lineID = nodeID;\r\n        const sourceGID = nodeID.replace(\"line\", \"\").split('_')[0];\r\n        const targetGID = nodeID.replace(\"line\", \"\").split('_')[1];\r\n        const sourceTransString = d3.select(\"#boxid\" + sourceGID).attr('transform');\r\n        const targetTransString = d3.select(\"#boxid\" + targetGID).attr('transform');\r\n        if (sourceTransString!==null && sourceGID != newLabelCond) {\r\n          const translatePart = sourceTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[sourceGID][0] + padding, treeLayout[sourceGID][1] + padding *7.5 - treeLayout[sourceGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        if (targetTransString!==null && targetGID != newLabelCond){\r\n          const translatePart = targetTransString.slice(10, -1);\r\n          const translateValues = translatePart.split(\",\");\r\n          const transformArray = translateValues.map(Number);\r\n          let newTransArray = [];\r\n          newTransArray = [treeLayout[targetGID][0] + padding, treeLayout[targetGID][1] + padding *7.5 - treeLayout[targetGID][3] / 2];\r\n          if (transformArray[1]!==newTransArray[1] || transformArray[0]!==newTransArray[0]) {\r\n            const line_label = d3.select(this).select('text').text();\r\n            updateLinesDashArrow(treeLayout, sourceGID, targetGID, \"black\", line_label, lineID);\r\n          }\r\n        }\r\n        nodeID = nodeID.replace(\"line\", \"\");\r\n        nodeID = nodeID.split('_')[0];\r\n        d3.select(this)\r\n          // .transition()\r\n          // .duration(720)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    } else {\r\n      if (nodeID === newLabelCond || nodeID === newLabelPre || nodeID === newLabelBody || nodeID === newLabelPost) {\r\n        d3.select(this)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`)\r\n          .attr(\"opacity\", 0);\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime1)\r\n          .style(\"opacity\", 1);\r\n      } else {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(transitionTime2)\r\n          .attr(\"transform\", `translate(${treeLayout[nodeID][0] + padding},${treeLayout[nodeID][1] + padding *7.5 - treeLayout[nodeID][3] / 2})`);\r\n      }\r\n    }\r\n  }\r\n  )\r\n  autoTranslate();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/clickCond.js","/* eslint-disable */\r\nimport * as d3 from \"d3\";\r\nimport { handleClick } from \"./click\";\r\nimport { handleClickCond, handleClickLoop } from \"./clickCond\";\r\n\r\nexport function drawBox(layout, fnS, body_num) {\r\n    // 创建SVG元素\r\n    const svg = d3.select(\"#mainsvg\");\r\n    const g = svg.append(\"g\").attr('id', \"boxid\" + String(body_num)).attr(\"class\", \"drawer\");\r\n    const ranksep = 37;\r\n    // 绘制节点\r\n    const nodes = layout.nodes;\r\n    let opoNodeFlag = false;\r\n    let opiNodeFlag = false;\r\n    const minValue = Math.min(...Object.values(layout.nodes).map(obj => obj.y));\r\n    const maxValue = Math.max(...Object.values(layout.nodes).map(obj => obj.y));\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      if (isOpiNode) {\r\n        if (node.y === minValue){\r\n          // node.y = minValue - 50 - ranksep;\r\n          opiNodeFlag = true;\r\n        }\r\n      }\r\n\r\n      if (isOpoNode) {\r\n        if (node.y === maxValue){\r\n          // node.y = maxValue + 50 + ranksep;\r\n          opoNodeFlag = true;\r\n        }\r\n      }\r\n    }\r\n    console.log(nodes);\r\n    for (const nodeId in nodes) {\r\n      // const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      \r\n      if (isOpiNode) {\r\n        // debugger\r\n        if (opiNodeFlag){\r\n          nodes[nodeId].y = minValue;\r\n        } else {\r\n          nodes[nodeId].y = minValue - 50 - ranksep;\r\n        }\r\n      }\r\n      if (isOpoNode) {\r\n        if (opoNodeFlag){\r\n          nodes[nodeId].y = maxValue;\r\n        } else {\r\n          nodes[nodeId].y = maxValue + 50 + ranksep;\r\n        }\r\n      }\r\n    }\r\n    console.log(nodes);\r\n\r\n    // 获取 x 和 y 的最小值\r\n    let minXofAllNodes = Infinity;\r\n    let minYofAllNodes = Infinity;\r\n    for (const key in nodes) {\r\n      const [type, index] = key.split(\"-\");\r\n      const isAuxNode = (type === \"aux\");\r\n      // if (!isAuxNode) {\r\n        if (nodes[key].x < minXofAllNodes) {\r\n          minXofAllNodes = nodes[key].x;\r\n        }\r\n        if (nodes[key].y < minYofAllNodes) {\r\n          minYofAllNodes = nodes[key].y;\r\n        }\r\n      // }\r\n    }\r\n\r\n    // 更新每一个子对象的 x 和 y 属性\r\n    for (const key in nodes) {\r\n      nodes[key].x = nodes[key].x - minXofAllNodes + 50;\r\n      nodes[key].y -= minYofAllNodes;\r\n    }\r\n    console.log(nodes);\r\n    for (const nodeId in nodes) {\r\n      const node = nodes[nodeId];\r\n      const [type, index] = nodeId.split(\"-\");\r\n      const isBfNode = (type === \"bf\");\r\n      const isPofNode = (type === \"pof\");\r\n      const isPifNode = (type === \"pif\");\r\n      const isAuxNode = (type === \"aux\");\r\n      const isOpoNode = (type === 'opo');\r\n      const isOpiNode = (type === 'opi');\r\n      const isBcNode = (type === \"bc\");\r\n      const isPocNode = (type === \"poc\");\r\n      const isPicNode = (type === \"pic\");\r\n      const isBlNode = (type === \"bl\");\r\n      const isPolNode = (type === \"pol\");\r\n      const isPilNode = (type === \"pil\");\r\n  \r\n      if (isAuxNode) {\r\n        continue; // 不绘制aux前缀的节点\r\n      }\r\n\r\n      if (isBfNode) {\r\n        if (node.fullBox){\r\n            if (node.type == \"FUNCTION\") {\r\n              drawBFs_full(node, nodeId, g, \"green\", ranksep, fnS, body_num);\r\n            } else if (node.type == \"EXPRESSION\") {\r\n              drawBFs_full(node, nodeId, g, \"purple\", ranksep, fnS, body_num);\r\n            } else if (node.type == \"LITERAL\") {\r\n              drawLiteral_full(node, nodeId, g, \"red\", ranksep);\r\n            } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n              drawLPrimitive_full(node, nodeId, g, \"red\", ranksep);\r\n            }\r\n        } else {\r\n          if (node.type == \"FUNCTION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"green\", ranksep, fnS, body_num);\r\n          } else if (node.type == \"EXPRESSION\") {\r\n            drawBFs_nfull(node, nodeId, g, \"purple\", ranksep, fnS, body_num);\r\n          } else if (node.type == \"LITERAL\") {\r\n            drawLiteral_nfull(node, nodeId, g, \"red\", ranksep);\r\n          } else if (node.type == \"LANGUAGE_PRIMITIVE\") {\r\n            drawLPrimitive_nfull(node, nodeId, g, \"red\", ranksep);\r\n          }\r\n        }\r\n      } else if (isBcNode) {\r\n        if (node.fullBox){\r\n          drawBCs_full(node, nodeId, g, \"orange\", ranksep, fnS, body_num);\r\n        } else {\r\n          drawBCs_nfull(node, nodeId, g, \"orange\", ranksep, fnS, body_num);\r\n        }\r\n      } else if (isBlNode) {\r\n        if (node.fullBox){\r\n          drawBLs_full(node, nodeId, g, \"blue\", ranksep, fnS, body_num);\r\n        } else {\r\n          drawBLs_nfull(node, nodeId, g, \"blue\", ranksep, fnS, body_num);\r\n        }\r\n      }\r\n      else if (isPofNode || isPifNode || isOpiNode || isOpoNode || isPicNode || isPocNode || isPilNode || isPolNode) {\r\n        drawPorts(node, nodeId, g, \"black\");\r\n      }\r\n    }\r\n  \r\n    // 绘制箭头\r\n    g.append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", \"arrowhead\")\r\n      .attr(\"markerWidth\", 10)\r\n      .attr(\"markerHeight\", 7)\r\n      .attr(\"refX\", 10)\r\n      .attr(\"refY\", 3.5)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M0,0 L10,3.5 L0,7 Z\")\r\n      .style(\"fill\", \"gray\");\r\n  \r\n    // 绘制边\r\n    const edges = layout.edges;\r\n    edges.forEach((edge) => {\r\n      const sourceNode = nodes[edge.source];\r\n      const targetNode = nodes[edge.target];\r\n      const sourceType = edge.source.split(\"-\")[0];\r\n      const targetType = edge.target.split(\"-\")[0];\r\n      const isAuxEdge = (sourceType === \"aux\" || targetType === \"aux\");\r\n\r\n      if (!isAuxEdge) {\r\n        g.append(\"line\")\r\n          .attr(\"x1\", sourceNode.x)\r\n          .attr(\"y1\", sourceNode.y - sourceNode.height / 2)\r\n          .attr(\"x2\", targetNode.x)\r\n          .attr(\"y2\", targetNode.y + targetNode.height / 2)\r\n          .style(\"stroke\", \"gray\")\r\n          .style(\"stroke-width\", 2.2)\r\n          .attr(\"marker-end\", \"url(#arrowhead)\");\r\n      }\r\n    });\r\n\r\n    // 调整SVG大小\r\n    const padding = 22.5; // 设置padding的大小\r\n\r\n    // const svgElement = document.querySelector(\"svg\");\r\n    const bbox = g.node().getBBox();\r\n    const width = bbox.width + padding * 4;\r\n    const height = bbox.height + padding * 4;\r\n\r\n    if ('opo-0' in nodes && 'opi-0' in nodes){\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxFull(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else if ('opo-0' in nodes && !('opi-0' in nodes)) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else if (!('opo-0' in nodes) && 'opi-0' in nodes) {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxTop(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    } else {\r\n      if (layout.meta.type === \"MODULE\"){\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"gray\", body_num);\r\n      } else if (layout.meta.type === \"EXPRESSION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"purple\", body_num);\r\n      } else if (layout.meta.type === \"FUNCTION\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"green\", body_num);\r\n      } else if (layout.meta.type === \"PREDICATE\") {\r\n        drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, \"Magenta\", body_num);\r\n      }\r\n    }\r\n    g.attr(\"width\", g.node().getBBox().width)\r\n      .attr(\"height\", g.node().getBBox().height)\r\n    if (body_num === 0){\r\n      g.attr(\"transform\", `translate(${padding * 4},${padding * 30 - g.node().getBBox().height / 2 * 1})`);\r\n    }\r\n  }\r\n\r\nfunction drawBFs_full(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let clicked = false;\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBFs_nfull(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .attr(\"data-opened\", \"neo\")\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_full(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let clicked = false;\r\n  let node_body_cond = null;\r\n  if (node.condition !== undefined) {\r\n    node_body_cond = node.condition;\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body_cond)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.condition !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickCond(fnS, node.condition, node.body_if, node.body_else, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBCs_nfull(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClick(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBLs_full(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let clicked = false;\r\n  let node_body_cond = null;\r\n  if (node.condition !== undefined) {\r\n    node_body_cond = node.condition;\r\n  }\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body_cond)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"stroke\", color)\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.condition !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickLoop(fnS, node.condition, node.pre, node.body, node.post, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawBLs_nfull(node, nodeId, g, color, ranksep, fnS, body_num) {\r\n  let node_body = null;\r\n  if (node.body !== undefined) {\r\n    node_body = node.body;\r\n  }\r\n  let clicked = false;\r\n  const selection = g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"data-body\", node_body)\r\n  .style(\"fill\", \"rgba(0, 0, 255, 0)\")\r\n  .style(\"cursor\", \"pointer\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - node.height / 4 - ranksep / 2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.body !== undefined) {\r\n    selection.on(\"click\", function(){\r\n      handleClickLoop(fnS, node.body, body_num, nodeId, color, clicked);\r\n      clicked = !clicked;\r\n    });\r\n  }\r\n}\r\n\r\nfunction drawLiteral_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_full(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 + ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"20px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLPrimitive_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawLiteral_nfull(node, nodeId, g, color, ranksep) {\r\n  g.append(\"rect\")\r\n  .attr(\"id\", nodeId)\r\n  .attr(\"x\", node.x - node.width / 2 + ranksep / 2)\r\n  .attr(\"y\", node.y - node.height / 2 - ranksep)\r\n  .attr(\"width\", node.width - ranksep)\r\n  .attr(\"height\", node.height)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 2);\r\n  if (node.label !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"12px\")\r\n    .text(node.label);\r\n  }\r\n  if (node.value !== undefined){\r\n    g.append(\"text\") // 添加节点的label\r\n    .attr(\"x\", node.x)\r\n    .attr(\"y\", node.y - ranksep * 1.2)\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\")\r\n    .style(\"font-size\", \"30px\")\r\n    .text(node.value.value);\r\n  }\r\n}\r\n\r\nfunction drawPorts(node, nodeId, g, color) {\r\n  g.append(\"rect\")\r\n    .attr(\"id\", nodeId)\r\n    .attr(\"x\", node.x - node.width / 2)\r\n    .attr(\"y\", node.y - node.height / 2)\r\n    .attr(\"width\", node.width)\r\n    .attr(\"height\", node.height)\r\n    .style(\"fill\", \"white\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 2);\r\n    if (node.label !== undefined){\r\n      g.append(\"text\") // 添加节点的label\r\n      .attr(\"x\", node.x)\r\n      .attr(\"y\", node.y)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"dominant-baseline\", \"middle\")\r\n      .style(\"font-size\", \"27px\")\r\n      .text(node.label);\r\n    }\r\n}\r\n\r\nfunction drawOuterBoxFull(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n  .attr(\"id\", \"frame\" + body_num)\r\n  .attr(\"x\", bbox.x - padding)\r\n  .attr(\"y\", bbox.y - padding + ranksep)\r\n  .attr(\"rx\", 15)\r\n  .attr(\"ry\", 15)\r\n  .attr(\"width\", width - padding * 2)\r\n  .attr(\"height\", height - padding * 2 - ranksep * 2)\r\n  .style(\"fill\", \"none\")\r\n  .style(\"stroke\", color)\r\n  .style(\"stroke-width\", 5)\r\n  .lower();\r\n}\r\n\r\nfunction drawOuterBoxBottom(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding - ranksep / 10)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxTop(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding + ranksep * 2)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2 - ranksep)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n\r\nfunction drawOuterBoxEmpty(g, bbox, width, height, padding, ranksep, color, body_num) {\r\n  // 绘制外框\r\n  g.append(\"rect\", \":first-child\")\r\n    .attr(\"id\", \"frame\" + body_num)\r\n    .attr(\"x\", bbox.x - padding)\r\n    .attr(\"y\", bbox.y - padding)\r\n    .attr(\"rx\", 15)\r\n    .attr(\"ry\", 15)\r\n    .attr(\"width\", width - padding * 2)\r\n    .attr(\"height\", height - padding * 2)\r\n    .style(\"fill\", \"none\")\r\n    .style(\"stroke\", color)\r\n    .style(\"stroke-width\", 5)\r\n    .lower();\r\n}\r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/utils/drawBox.js","<template>\r\n  <div class=\"container\">\r\n  <div class=\"d-flex justify-content-start\">\r\n    <!-- <button class=\"btn btn-primary\" @click=\"fetchData\">upload</button> -->\r\n    <div class=\"button-spacing\"></div> <!-- 添加间距 -->\r\n    <select v-model=\"selectedOption\" @change=\"fetchData\" class=\"my-select\" placeholder=\"Select\">\r\n      <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">\r\n        {{ option.text }}\r\n      </option>\r\n    </select>\r\n    <div><p> Or </p></div>\r\n    <input type=\"text\" v-model=\"url\" class=\"url-input\" placeholder=\"Input URL of JSON file here.\"/>\r\n    <button class=\"btn btn-primary\" @click=\"submitUrl\">Submit</button>\r\n    <button class=\"btn btn-primary download-button\" @click=\"downloadSVG\" >downloadSVG</button>\r\n  </div>\r\n    <div class=\"row\">\r\n      <div id=\"svg-container\" :style=\"blockStyle\">\r\n        <div class=\"version-text\">\r\n          Current Supported Skema Version:\r\n          <span class=\"highlight\">0.1.6</span>\r\n        </div>\r\n        <div class=\"version-text\">\r\n          Current File Version:\r\n          <span class=\"highlight\">{{ skemaVersion }}</span>\r\n        </div>\r\n        <svg id=\"mainsvg\" width=\"4000\" height=\"4000\" viewBox=\"0 0 4000 4000\">\r\n          <g id=\"sumGroup\"></g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport { getBoxLayout } from '../utils/layout';\r\nimport { drawBox } from '../utils/drawBox';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      skemaVersion: '',\r\n      url: '',\r\n      blockStyle: {\r\n        backgroundColor: 'rgba(255, 255, 120, 0.5)',\r\n        height: '90vh',\r\n        width: '100%',\r\n      },\r\n      selectedOption: null,\r\n      options: [\r\n        { text: 'while1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/while1/FN_0.1.6/while1--Gromet-FN-auto.json' },\r\n        { text: 'cond1', value: 'https://raw.githubusercontent.com/hconhisway/webcrawler/master/cond1--Gromet-FN-auto.json' },\r\n        { text: 'fun1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun1/FN_0.1.6/fun1--Gromet-FN-auto.json' },\r\n        { text: 'fun4', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun4/FN_0.1.6/fun4--Gromet-FN-auto.json' },\r\n        { text: 'exp1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp1/FN_0.1.6/exp1--Gromet-FN-auto.json' },\r\n        { text: 'exp2', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp2/FN_0.1.6/exp2--Gromet-FN-auto.json' },\r\n        { text: 'exp3', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/exp3/FN_0.1.6/exp3--Gromet-FN-auto.json' },\r\n        { text: 'fun_default1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/fun_default1/FN_0.1.6/fun_default1--Gromet-FN-auto.json' },\r\n        { text: 'assign_operator1', value: 'https://raw.githubusercontent.com/ml4ai/skema/main/data/gromet/python/assign_operator1/FN_0.1.6/assign_operator1--Gromet-FN-auto.json' },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      d3.selectAll('g').remove();\r\n      axios.get(this.selectedOption)\r\n        .then((response) => {\r\n          const jsonData = response.data;\r\n          this.skemaVersion = jsonData.schema_version;\r\n          const graphData = jsonData.modules[0];\r\n          const fn0 = graphData.fn;\r\n          const fnS = graphData.fn_array;\r\n          const layout = getBoxLayout(fn0);\r\n          drawBox(layout, fnS, 0);\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n        });\r\n    },\r\n    downloadSVG() {\r\n      // 获取 SVG 元素\r\n      const svgElement = document.getElementById('mainsvg');\r\n      // 获取 SVG 的内容\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      // 创建一个 Blob 对象\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      // 创建一个指向 Blob 的 URL\r\n      const svgUrl = URL.createObjectURL(svgBlob);\r\n      // 创建一个链接并通过该链接下载 SVG 文件\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = svgUrl;\r\n      downloadLink.download = 'mainsvg.svg';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    },\r\n    submitUrl() {\r\n      this.excuteFunction(this.url);\r\n    },\r\n    excuteFunction(url) {\r\n      d3.selectAll('g').remove();\r\n      axios.get(url)\r\n        .then((response) => {\r\n          const jsonData = response.data;\r\n          this.skemaVersion = jsonData.schema_version;\r\n          const graphData = jsonData.modules[0];\r\n          const fn0 = graphData.fn;\r\n          const fnS = graphData.fn_array;\r\n          const layout = getBoxLayout(fn0);\r\n          drawBox(layout, fnS, 0);\r\n        })\r\n        .catch((error) => {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.svg-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n.my-select {\r\n    /* 下拉框的样式 */\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    margin-right: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\r\n}\r\n\r\n.url-input {\r\n    /* 输入框的样式 */\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    border: 1px solid #ccc;\r\n    width: 400px;\r\n    overflow-x: auto;\r\n    margin-left: 20px; /* 这将在下拉框和其他元素之间添加一些间距 */\r\n}\r\n\r\np {\r\n  margin-bottom: -10px;\r\n  font-size: 27px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.download-button {\r\n  margin-left: 300px;\r\n}\r\n\r\n.version-text {\r\n  font-size: 27px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.highlight {\r\n  color: red;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/Moviz.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"button-spacing\"}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],staticClass:\"my-select\",attrs:{\"placeholder\":\"Select\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.fetchData]}},_vm._l((_vm.options),function(option){return _c('option',{key:option.value,domProps:{\"value\":option.value}},[_vm._v(\"\\n      \"+_vm._s(option.text)+\"\\n    \")])}),0),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.url),expression:\"url\"}],staticClass:\"url-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Input URL of JSON file here.\"},domProps:{\"value\":(_vm.url)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.url=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.submitUrl}},[_vm._v(\"Submit\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary download-button\",on:{\"click\":_vm.downloadSVG}},[_vm._v(\"downloadSVG\")])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{style:(_vm.blockStyle),attrs:{\"id\":\"svg-container\"}},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current File Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(_vm._s(_vm.skemaVersion))])]),_vm._v(\" \"),_c('svg',{attrs:{\"id\":\"mainsvg\",\"width\":\"4000\",\"height\":\"4000\",\"viewBox\":\"0 0 4000 4000\"}},[_c('g',{attrs:{\"id\":\"sumGroup\"}})])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\" Or \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"version-text\"},[_vm._v(\"\\n        Current Supported Skema Version:\\n        \"),_c('span',{staticClass:\"highlight\"},[_vm._v(\"0.1.6\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a6b80548\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Moviz.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a6b80548\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Moviz.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Moviz.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a6b80548\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Moviz.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a6b80548\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Moviz.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport Moviz from '@/components/Moviz';\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Moviz',\r\n      component: Moviz,\r\n    },\r\n  ],\r\n  mode: 'hash',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Vue from 'vue';\r\nimport App from './App';\r\nimport router from './router';\r\n\r\nVue.config.productionTip = false;\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  components: { App },\r\n  template: '<App/>',\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = {\"name\":\"d3-flextree\",\"version\":\"2.1.2\",\"main\":\"build/d3-flextree.js\",\"module\":\"index\",\"jsnext:main\":\"index\",\"author\":{\"name\":\"Chris Maloney\",\"url\":\"http://chrismaloney.org\"},\"description\":\"Flexible tree layout algorithm that allows for variable node sizes.\",\"keywords\":[\"d3\",\"d3-module\",\"layout\",\"tree\",\"hierarchy\",\"d3-hierarchy\",\"plugin\",\"d3-plugin\",\"infovis\",\"visualization\",\"2d\"],\"homepage\":\"https://github.com/klortho/d3-flextree\",\"license\":\"WTFPL\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/klortho/d3-flextree.git\"},\"scripts\":{\"clean\":\"rm -rf build demo test\",\"build:demo\":\"rollup -c --environment BUILD:demo\",\"build:dev\":\"rollup -c --environment BUILD:dev\",\"build:prod\":\"rollup -c --environment BUILD:prod\",\"build:test\":\"rollup -c --environment BUILD:test\",\"build\":\"rollup -c\",\"lint\":\"eslint index.js src\",\"test:main\":\"node test/bundle.js\",\"test:browser\":\"node test/browser-tests.js\",\"test\":\"npm-run-all test:*\",\"prepare\":\"npm-run-all clean build lint test\"},\"dependencies\":{\"d3-hierarchy\":\"^1.1.5\"},\"devDependencies\":{\"babel-plugin-external-helpers\":\"^6.22.0\",\"babel-preset-es2015-rollup\":\"^3.0.0\",\"d3\":\"^4.13.0\",\"d3-selection-multi\":\"^1.0.1\",\"eslint\":\"^4.19.1\",\"jsdom\":\"^11.6.2\",\"npm-run-all\":\"^4.1.2\",\"rollup\":\"^0.55.3\",\"rollup-plugin-babel\":\"^2.7.1\",\"rollup-plugin-commonjs\":\"^8.0.2\",\"rollup-plugin-copy\":\"^0.2.3\",\"rollup-plugin-json\":\"^2.3.0\",\"rollup-plugin-node-resolve\":\"^3.0.2\",\"rollup-plugin-uglify\":\"^3.0.0\",\"uglify-es\":\"^3.3.9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-flextree/package.json\n// module id = p+Xa\n// module chunks = 1"],"sourceRoot":""}